{"ast":null,"code":"import _slicedToArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialogHeader.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React, { useState, useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Modal } from \"react-bootstrap\";\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\nexport function RemarkEditDialogHeader(_ref) {\n  var id = _ref.id;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1]; // Remarks Redux state\n\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      remarkForEdit: state.remarks.remarkForEdit,\n      actionsLoading: state.remarks.actionsLoading\n    };\n  }, shallowEqual),\n      remarkForEdit = _useSelector.remarkForEdit,\n      actionsLoading = _useSelector.actionsLoading;\n\n  useEffect(function () {\n    var _title = id ? \"\" : \"New Remark\";\n\n    if (remarkForEdit && id) {\n      _title = \"Edit remark\";\n    }\n\n    setTitle(_title); // eslint-disable-next-line\n  }, [remarkForEdit, actionsLoading]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, actionsLoading && /*#__PURE__*/React.createElement(ModalProgressBar, {\n    variant: \"query\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, title)));\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialogHeader.js"],"names":["React","useState","useEffect","shallowEqual","useSelector","Modal","ModalProgressBar","RemarkEditDialogHeader","id","title","setTitle","state","remarkForEdit","remarks","actionsLoading","_title"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,gBAAT,QAAiC,mDAAjC;AAEA,OAAO,SAASC,sBAAT,OAAwC;AAAA,MAANC,EAAM,QAANA,EAAM;;AAC7C,kBAA0BP,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOQ,KAAP;AAAA,MAAcC,QAAd,iBAD6C,CAE7C;;;AACA,qBAA0CN,WAAW,CACnD,UAACO,KAAD;AAAA,WAAY;AACVC,MAAAA,aAAa,EAAED,KAAK,CAACE,OAAN,CAAcD,aADnB;AAEVE,MAAAA,cAAc,EAAEH,KAAK,CAACE,OAAN,CAAcC;AAFpB,KAAZ;AAAA,GADmD,EAKnDX,YALmD,CAArD;AAAA,MAAQS,aAAR,gBAAQA,aAAR;AAAA,MAAuBE,cAAvB,gBAAuBA,cAAvB;;AAQAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIa,MAAM,GAAGP,EAAE,GAAG,EAAH,GAAQ,YAAvB;;AACA,QAAII,aAAa,IAAIJ,EAArB,EAAyB;AACvBO,MAAAA,MAAM,GAAG,aAAT;AACD;;AAEDL,IAAAA,QAAQ,CAACK,MAAD,CAAR,CANc,CAOd;AACD,GARQ,EAQN,CAACH,aAAD,EAAgBE,cAAhB,CARM,CAAT;AAUA,sBACE,0CACGA,cAAc,iBAAI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrB,eAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,KAAP;AAAa,IAAA,EAAE,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDL,KAAhD,CADF,CAFF,CADF;AAQD","sourcesContent":["/* eslint-disable no-restricted-imports */\nimport React, { useState, useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Modal } from \"react-bootstrap\";\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\n\nexport function RemarkEditDialogHeader({ id }) {\n  const [title, setTitle] = useState(\"\");\n  // Remarks Redux state\n  const { remarkForEdit, actionsLoading } = useSelector(\n    (state) => ({\n      remarkForEdit: state.remarks.remarkForEdit,\n      actionsLoading: state.remarks.actionsLoading,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    let _title = id ? \"\" : \"New Remark\";\n    if (remarkForEdit && id) {\n      _title = \"Edit remark\";\n    }\n\n    setTitle(_title);\n    // eslint-disable-next-line\n  }, [remarkForEdit, actionsLoading]);\n\n  return (\n    <>\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\n      </Modal.Header>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}