{"ast":null,"code":"var _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialog.js\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { CustomerEditDialogHeader } from \"./CustomerEditDialogHeader\";\nimport { CustomerEditForm } from \"./CustomerEditForm\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\nexport function CustomerEditDialog(_ref) {\n  var id = _ref.id,\n      show = _ref.show,\n      onHide = _ref.onHide;\n  // Customers UI Context\n  var customersUIContext = useCustomersUIContext();\n  var customersUIProps = useMemo(function () {\n    return {\n      initCustomer: customersUIContext.initCustomer\n    };\n  }, [customersUIContext]); // Customers Redux state\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      actionsLoading: state.customers.actionsLoading,\n      customerForEdit: state.customers.customerForEdit\n    };\n  }, shallowEqual),\n      actionsLoading = _useSelector.actionsLoading,\n      customerForEdit = _useSelector.customerForEdit;\n\n  useEffect(function () {\n    // server call for getting Customer by id\n    dispatch(actions.fetchCustomer(id));\n  }, [id, dispatch]); // server request for saving customer\n\n  var saveCustomer = function saveCustomer(customer) {\n    if (!id) {\n      // server request for creating customer\n      dispatch(actions.createCustomer(customer)).then(function () {\n        return onHide();\n      });\n    } else {\n      // server request for updating customer\n      dispatch(actions.updateCustomer(customer)).then(function () {\n        return onHide();\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    show: show,\n    onHide: onHide,\n    \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomerEditDialogHeader, {\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CustomerEditForm, {\n    saveCustomer: saveCustomer,\n    actionsLoading: actionsLoading,\n    customer: customerForEdit || customersUIProps.initCustomer,\n    onHide: onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialog.js"],"names":["React","useEffect","useMemo","Modal","shallowEqual","useDispatch","useSelector","actions","CustomerEditDialogHeader","CustomerEditForm","useCustomersUIContext","CustomerEditDialog","id","show","onHide","customersUIContext","customersUIProps","initCustomer","dispatch","state","actionsLoading","customers","customerForEdit","fetchCustomer","saveCustomer","customer","createCustomer","then","updateCustomer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,WAApC,QAAuD,aAAvD;AACA,OAAO,KAAKC,OAAZ,MAAyB,4CAAzB;AACA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AAEA,OAAO,SAASC,kBAAT,OAAkD;AAAA,MAApBC,EAAoB,QAApBA,EAAoB;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACvD;AACA,MAAMC,kBAAkB,GAAGL,qBAAqB,EAAhD;AACA,MAAMM,gBAAgB,GAAGd,OAAO,CAAC,YAAM;AACrC,WAAO;AACLe,MAAAA,YAAY,EAAEF,kBAAkB,CAACE;AAD5B,KAAP;AAGD,GAJ+B,EAI7B,CAACF,kBAAD,CAJ6B,CAAhC,CAHuD,CASvD;;AACA,MAAMG,QAAQ,GAAGb,WAAW,EAA5B;;AACA,qBAA4CC,WAAW,CACrD,UAACa,KAAD;AAAA,WAAY;AACVC,MAAAA,cAAc,EAAED,KAAK,CAACE,SAAN,CAAgBD,cADtB;AAEVE,MAAAA,eAAe,EAAEH,KAAK,CAACE,SAAN,CAAgBC;AAFvB,KAAZ;AAAA,GADqD,EAKrDlB,YALqD,CAAvD;AAAA,MAAQgB,cAAR,gBAAQA,cAAR;AAAA,MAAwBE,eAAxB,gBAAwBA,eAAxB;;AAQArB,EAAAA,SAAS,CAAC,YAAM;AACd;AACAiB,IAAAA,QAAQ,CAACX,OAAO,CAACgB,aAAR,CAAsBX,EAAtB,CAAD,CAAR;AACD,GAHQ,EAGN,CAACA,EAAD,EAAKM,QAAL,CAHM,CAAT,CAnBuD,CAwBvD;;AACA,MAAMM,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAc;AACjC,QAAI,CAACb,EAAL,EAAS;AACP;AACAM,MAAAA,QAAQ,CAACX,OAAO,CAACmB,cAAR,CAAuBD,QAAvB,CAAD,CAAR,CAA2CE,IAA3C,CAAgD;AAAA,eAAMb,MAAM,EAAZ;AAAA,OAAhD;AACD,KAHD,MAGO;AACL;AACAI,MAAAA,QAAQ,CAACX,OAAO,CAACqB,cAAR,CAAuBH,QAAvB,CAAD,CAAR,CAA2CE,IAA3C,CAAgD;AAAA,eAAMb,MAAM,EAAZ;AAAA,OAAhD;AACD;AACF,GARD;;AAUA,sBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,uBAAgB,8BAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,wBAAD;AAA0B,IAAA,EAAE,EAAEF,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,gBAAD;AACE,IAAA,YAAY,EAAEY,YADhB;AAEE,IAAA,cAAc,EAAEJ,cAFlB;AAGE,IAAA,QAAQ,EAAEE,eAAe,IAAIN,gBAAgB,CAACC,YAHhD;AAIE,IAAA,MAAM,EAAEH,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAgBD","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { CustomerEditDialogHeader } from \"./CustomerEditDialogHeader\";\nimport { CustomerEditForm } from \"./CustomerEditForm\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nexport function CustomerEditDialog({ id, show, onHide }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      initCustomer: customersUIContext.initCustomer,\n    };\n  }, [customersUIContext]);\n\n  // Customers Redux state\n  const dispatch = useDispatch();\n  const { actionsLoading, customerForEdit } = useSelector(\n    (state) => ({\n      actionsLoading: state.customers.actionsLoading,\n      customerForEdit: state.customers.customerForEdit,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    // server call for getting Customer by id\n    dispatch(actions.fetchCustomer(id));\n  }, [id, dispatch]);\n\n  // server request for saving customer\n  const saveCustomer = (customer) => {\n    if (!id) {\n      // server request for creating customer\n      dispatch(actions.createCustomer(customer)).then(() => onHide());\n    } else {\n      // server request for updating customer\n      dispatch(actions.updateCustomer(customer)).then(() => onHide());\n    }\n  };\n\n  return (\n    <Modal\n      size=\"lg\"\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <CustomerEditDialogHeader id={id} />\n      <CustomerEditForm\n        saveCustomer={saveCustomer}\n        actionsLoading={actionsLoading}\n        customer={customerForEdit || customersUIProps.initCustomer}\n        onHide={onHide}\n      />\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}