{"ast":null,"code":"import _slicedToArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/UserProfile/ChangePassword.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport SVG from \"react-inlinesvg\";\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\nimport * as auth from \"../Auth\";\n\nfunction ChangePassword(props) {\n  // Fields\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setloading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isError = _useState4[0],\n      setisError = _useState4[1];\n\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  }, shallowEqual);\n  useEffect(function () {}, [user]); // Methods\n\n  var saveUser = function saveUser(values, setStatus, setSubmitting) {\n    setloading(true);\n    setisError(false);\n    var updatedUser = Object.assign(user, {\n      password: values.password\n    }); // user for update preparation\n\n    dispatch(props.setUser(updatedUser));\n    setTimeout(function () {\n      setloading(false);\n      setSubmitting(false);\n      setisError(true); // Do request to your server for user update, we just imitate user update there, For example:\n      // update(updatedUser)\n      //  .then(()) => {\n      //    setloading(false);\n      //  })\n      //  .catch((error) => {\n      //    setloading(false);\n      //    setSubmitting(false);\n      //    setStatus(error);\n      // });\n    }, 1000);\n  }; // UI Helpers\n\n\n  var initialValues = {\n    currentPassword: \"\",\n    password: \"\",\n    cPassword: \"\"\n  };\n  var Schema = Yup.object().shape({\n    currentPassword: Yup.string().required(\"Current password is required\"),\n    password: Yup.string().required(\"New Password is required\"),\n    cPassword: Yup.string().required(\"Password confirmation is required\").when(\"password\", {\n      is: function is(val) {\n        return val && val.length > 0 ? true : false;\n      },\n      then: Yup.string().oneOf([Yup.ref(\"password\")], \"Password and Confirm Password didn't match\")\n    })\n  });\n\n  var getInputClasses = function getInputClasses(fieldname) {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n\n  var formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: Schema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setStatus = _ref.setStatus,\n          setSubmitting = _ref.setSubmitting;\n      saveUser(values, setStatus, setSubmitting);\n    },\n    onReset: function onReset(values, _ref2) {\n      var resetForm = _ref2.resetForm;\n      resetForm();\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"card card-custom\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(ModalProgressBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title align-items-start flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-label font-weight-bolder text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Change Password\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-muted font-weight-bold font-size-sm mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Change your account password\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success mr-2\",\n    disabled: formik.isSubmitting || formik.touched && !formik.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Save Changes\", formik.isSubmitting), /*#__PURE__*/React.createElement(Link, {\n    to: \"/user-profile/profile-overview\",\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, isError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-custom alert-light-danger fade show mb-10\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"svg-icon svg-icon-3x svg-icon-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SVG, {\n    src: toAbsoluteUrl(\"/media/svg/icons/Code/Info-circle.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"Configure user passwords to expire periodically. Users will need warning that their passwords are going to expire,\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), \"or they might inadvertently get locked out of the system!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-close\",\n    onClick: function onClick() {\n      return setisError(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"alert\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ki ki-close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label text-alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Current Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"password\",\n    placeholder: \"Current Password\",\n    className: \"form-control form-control-lg form-control-solid mb-2 \".concat(getInputClasses(\"currentPassword\")),\n    name: \"currentPassword\"\n  }, formik.getFieldProps(\"currentPassword\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  })), formik.touched.currentPassword && formik.errors.currentPassword ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, formik.errors.currentPassword) : null, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"text-sm font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"Forgot password ?\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label text-alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \"New Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"password\",\n    placeholder: \"New Password\",\n    className: \"form-control form-control-lg form-control-solid \".concat(getInputClasses(\"password\")),\n    name: \"password\"\n  }, formik.getFieldProps(\"password\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  })), formik.touched.password && formik.errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, formik.errors.password) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label text-alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \"Verify Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"password\",\n    placeholder: \"Verify Password\",\n    className: \"form-control form-control-lg form-control-solid \".concat(getInputClasses(\"cPassword\")),\n    name: \"cPassword\"\n  }, formik.getFieldProps(\"cPassword\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  })), formik.touched.cPassword && formik.errors.cPassword ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, formik.errors.cPassword) : null)))));\n}\n\nexport default connect(null, auth.actions)(ChangePassword);","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/UserProfile/ChangePassword.js"],"names":["React","useState","useEffect","Link","useSelector","shallowEqual","connect","useDispatch","useFormik","Yup","SVG","ModalProgressBar","toAbsoluteUrl","auth","ChangePassword","props","loading","setloading","isError","setisError","dispatch","user","state","saveUser","values","setStatus","setSubmitting","updatedUser","Object","assign","password","setUser","setTimeout","initialValues","currentPassword","cPassword","Schema","object","shape","string","required","when","is","val","length","then","oneOf","ref","getInputClasses","fieldname","formik","touched","errors","validationSchema","onSubmit","onReset","resetForm","handleSubmit","isSubmitting","isValid","getFieldProps","actions"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport SVG from \"react-inlinesvg\";\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\nimport * as auth from \"../Auth\";\n\nfunction ChangePassword(props) {\n  // Fields\n  const [loading, setloading] = useState(false);\n  const [isError, setisError] = useState(false);\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.auth.user, shallowEqual);\n  useEffect(() => {}, [user]);\n  // Methods\n  const saveUser = (values, setStatus, setSubmitting) => {\n    setloading(true);\n    setisError(false);\n    const updatedUser = Object.assign(user, {\n      password: values.password,\n    });\n    // user for update preparation\n    dispatch(props.setUser(updatedUser));\n    setTimeout(() => {\n      setloading(false);\n      setSubmitting(false);\n      setisError(true);\n      // Do request to your server for user update, we just imitate user update there, For example:\n      // update(updatedUser)\n      //  .then(()) => {\n      //    setloading(false);\n      //  })\n      //  .catch((error) => {\n      //    setloading(false);\n      //    setSubmitting(false);\n      //    setStatus(error);\n      // });\n    }, 1000);\n  };\n  // UI Helpers\n  const initialValues = {\n    currentPassword: \"\",\n    password: \"\",\n    cPassword: \"\",\n  };\n  const Schema = Yup.object().shape({\n    currentPassword: Yup.string().required(\"Current password is required\"),\n    password: Yup.string().required(\"New Password is required\"),\n    cPassword: Yup.string()\n      .required(\"Password confirmation is required\")\n      .when(\"password\", {\n        is: (val) => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n          [Yup.ref(\"password\")],\n          \"Password and Confirm Password didn't match\"\n        ),\n      }),\n  });\n  const getInputClasses = (fieldname) => {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Schema,\n    onSubmit: (values, { setStatus, setSubmitting }) => {\n      saveUser(values, setStatus, setSubmitting);\n    },\n    onReset: (values, { resetForm }) => {\n      resetForm();\n    },\n  });\n\n  return (\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\n      {loading && <ModalProgressBar />}\n\n      {/* begin::Header */}\n      <div className=\"card-header py-3\">\n        <div className=\"card-title align-items-start flex-column\">\n          <h3 className=\"card-label font-weight-bolder text-dark\">\n            Change Password\n          </h3>\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\n            Change your account password\n          </span>\n        </div>\n        <div className=\"card-toolbar\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-success mr-2\"\n            disabled={\n              formik.isSubmitting || (formik.touched && !formik.isValid)\n            }\n          >\n            Save Changes\n            {formik.isSubmitting}\n          </button>\n          <Link\n            to=\"/user-profile/profile-overview\"\n            className=\"btn btn-secondary\"\n          >\n            Cancel\n          </Link>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Form */}\n      <div className=\"form\">\n        <div className=\"card-body\">\n          {/* begin::Alert */}\n          {isError && (\n            <div\n              className=\"alert alert-custom alert-light-danger fade show mb-10\"\n              role=\"alert\"\n            >\n              <div className=\"alert-icon\">\n                <span className=\"svg-icon svg-icon-3x svg-icon-danger\">\n                  <SVG\n                    src={toAbsoluteUrl(\"/media/svg/icons/Code/Info-circle.svg\")}\n                  ></SVG>{\" \"}\n                </span>\n              </div>\n              <div className=\"alert-text font-weight-bold\">\n                Configure user passwords to expire periodically. Users will need\n                warning that their passwords are going to expire,\n                <br />\n                or they might inadvertently get locked out of the system!\n              </div>\n              <div className=\"alert-close\" onClick={() => setisError(false)}>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"alert\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">\n                    <i className=\"ki ki-close\"></i>\n                  </span>\n                </button>\n              </div>\n            </div>\n          )}\n          {/* end::Alert */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\n              Current Password\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <input\n                type=\"password\"\n                placeholder=\"Current Password\"\n                className={`form-control form-control-lg form-control-solid mb-2 ${getInputClasses(\n                  \"currentPassword\"\n                )}`}\n                name=\"currentPassword\"\n                {...formik.getFieldProps(\"currentPassword\")}\n              />\n              {formik.touched.currentPassword &&\n              formik.errors.currentPassword ? (\n                <div className=\"invalid-feedback\">\n                  {formik.errors.currentPassword}\n                </div>\n              ) : null}\n              <a href=\"#\" className=\"text-sm font-weight-bold\">\n                Forgot password ?\n              </a>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\n              New Password\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <input\n                type=\"password\"\n                placeholder=\"New Password\"\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\n                  \"password\"\n                )}`}\n                name=\"password\"\n                {...formik.getFieldProps(\"password\")}\n              />\n              {formik.touched.password && formik.errors.password ? (\n                <div className=\"invalid-feedback\">{formik.errors.password}</div>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\n              Verify Password\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <input\n                type=\"password\"\n                placeholder=\"Verify Password\"\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\n                  \"cPassword\"\n                )}`}\n                name=\"cPassword\"\n                {...formik.getFieldProps(\"cPassword\")}\n              />\n              {formik.touched.cPassword && formik.errors.cPassword ? (\n                <div className=\"invalid-feedback\">\n                  {formik.errors.cPassword}\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end::Form */}\n    </form>\n  );\n}\n\nexport default connect(null, auth.actions)(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}