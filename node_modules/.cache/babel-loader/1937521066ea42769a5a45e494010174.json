{"ast":null,"code":"import axios from \"axios\";\nexport var PRODUCTS_URL = \"api/products\"; // CREATE =>  POST: add a new product to the server\n\nexport function createProduct(product) {\n  return axios.post(PRODUCTS_URL, {\n    product: product\n  });\n} // READ\n\nexport function getAllProducts() {\n  return axios.get(PRODUCTS_URL);\n}\nexport function getProductById(productId) {\n  return axios.get(\"\".concat(PRODUCTS_URL, \"/\").concat(productId));\n} // Method from server should return QueryResultsModel(items: any[], totalsCount: number)\n// items => filtered/sorted result\n\nexport function findProducts(queryParams) {\n  return axios.post(\"\".concat(PRODUCTS_URL, \"/find\"), {\n    queryParams: queryParams\n  });\n} // UPDATE => PUT: update the procuct on the server\n\nexport function updateProduct(product) {\n  return axios.put(\"\".concat(PRODUCTS_URL, \"/\").concat(product.id), {\n    product: product\n  });\n} // UPDATE Status\n\nexport function updateStatusForProducts(ids, status) {\n  return axios.post(\"\".concat(PRODUCTS_URL, \"/updateStatusForProducts\"), {\n    ids: ids,\n    status: status\n  });\n} // DELETE => delete the product from the server\n\nexport function deleteProduct(productId) {\n  return axios.delete(\"\".concat(PRODUCTS_URL, \"/\").concat(productId));\n} // DELETE Products by ids\n\nexport function deleteProducts(ids) {\n  return axios.post(\"\".concat(PRODUCTS_URL, \"/deleteProducts\"), {\n    ids: ids\n  });\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/_redux/products/productsCrud.js"],"names":["axios","PRODUCTS_URL","createProduct","product","post","getAllProducts","get","getProductById","productId","findProducts","queryParams","updateProduct","put","id","updateStatusForProducts","ids","status","deleteProduct","delete","deleteProducts"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAY,GAAG,cAArB,C,CAEP;;AACA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AACrC,SAAOH,KAAK,CAACI,IAAN,CAAWH,YAAX,EAAyB;AAAEE,IAAAA,OAAO,EAAPA;AAAF,GAAzB,CAAP;AACD,C,CAED;;AACA,OAAO,SAASE,cAAT,GAA0B;AAC/B,SAAOL,KAAK,CAACM,GAAN,CAAUL,YAAV,CAAP;AACD;AAED,OAAO,SAASM,cAAT,CAAwBC,SAAxB,EAAmC;AACxC,SAAOR,KAAK,CAACM,GAAN,WAAaL,YAAb,cAA6BO,SAA7B,EAAP;AACD,C,CAED;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBC,WAAtB,EAAmC;AACxC,SAAOV,KAAK,CAACI,IAAN,WAAcH,YAAd,YAAmC;AAAES,IAAAA,WAAW,EAAXA;AAAF,GAAnC,CAAP;AACD,C,CAED;;AACA,OAAO,SAASC,aAAT,CAAuBR,OAAvB,EAAgC;AACrC,SAAOH,KAAK,CAACY,GAAN,WAAaX,YAAb,cAA6BE,OAAO,CAACU,EAArC,GAA2C;AAAEV,IAAAA,OAAO,EAAPA;AAAF,GAA3C,CAAP;AACD,C,CAED;;AACA,OAAO,SAASW,uBAAT,CAAiCC,GAAjC,EAAsCC,MAAtC,EAA8C;AACnD,SAAOhB,KAAK,CAACI,IAAN,WAAcH,YAAd,+BAAsD;AAC3Dc,IAAAA,GAAG,EAAHA,GAD2D;AAE3DC,IAAAA,MAAM,EAANA;AAF2D,GAAtD,CAAP;AAID,C,CAED;;AACA,OAAO,SAASC,aAAT,CAAuBT,SAAvB,EAAkC;AACvC,SAAOR,KAAK,CAACkB,MAAN,WAAgBjB,YAAhB,cAAgCO,SAAhC,EAAP;AACD,C,CAED;;AACA,OAAO,SAASW,cAAT,CAAwBJ,GAAxB,EAA6B;AAClC,SAAOf,KAAK,CAACI,IAAN,WAAcH,YAAd,sBAA6C;AAAEc,IAAAA,GAAG,EAAHA;AAAF,GAA7C,CAAP;AACD","sourcesContent":["import axios from \"axios\";\n\nexport const PRODUCTS_URL = \"api/products\";\n\n// CREATE =>  POST: add a new product to the server\nexport function createProduct(product) {\n  return axios.post(PRODUCTS_URL, { product });\n}\n\n// READ\nexport function getAllProducts() {\n  return axios.get(PRODUCTS_URL);\n}\n\nexport function getProductById(productId) {\n  return axios.get(`${PRODUCTS_URL}/${productId}`);\n}\n\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\n// items => filtered/sorted result\nexport function findProducts(queryParams) {\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\n}\n\n// UPDATE => PUT: update the procuct on the server\nexport function updateProduct(product) {\n  return axios.put(`${PRODUCTS_URL}/${product.id}`, { product });\n}\n\n// UPDATE Status\nexport function updateStatusForProducts(ids, status) {\n  return axios.post(`${PRODUCTS_URL}/updateStatusForProducts`, {\n    ids,\n    status\n  });\n}\n\n// DELETE => delete the product from the server\nexport function deleteProduct(productId) {\n  return axios.delete(`${PRODUCTS_URL}/${productId}`);\n}\n\n// DELETE Products by ids\nexport function deleteProducts(ids) {\n  return axios.post(`${PRODUCTS_URL}/deleteProducts`, { ids });\n}\n"]},"metadata":{},"sourceType":"module"}