{"ast":null,"code":"import _slicedToArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/utils/ModalExamplesPage.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Button, Modal } from \"@material-ui/core\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  var top = 50 + rand();\n  var left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      position: \"absolute\",\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(4),\n      outline: \"none\"\n    }\n  };\n});\n\nfunction SimpleModal() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1]; // getModalStyle is not a pure function, we roll the style only on the first render\n\n\n  var _React$useState3 = React.useState(getModalStyle),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      modalStyle = _React$useState4[0];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Click to get the full Modal experience!\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Open Modal\"), /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Text in a modal\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    id: \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"), /*#__PURE__*/React.createElement(SimpleModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default function ModalExamplesPage() {\n  // Example 1\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      open = _React$useState6[0],\n      setOpen = _React$useState6[1]; // getModalStyle is not a pure function, we roll the style only on the first render\n\n\n  var _React$useState7 = React.useState(getModalStyle),\n      _React$useState8 = _slicedToArray(_React$useState7, 1),\n      modalStyle = _React$useState8[0];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"The modal component provides a solid foundation for creating dialogs, popovers, lightboxes, or whatever else.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/modal/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Simple modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Click to get the full Modal experience!\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"Open Modal\"), /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }, \"Text in a modal\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    id: \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"), /*#__PURE__*/React.createElement(SimpleModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Typography from '@material-ui/core/Typography';\\nimport Modal from '@material-ui/core/Modal';\\nimport Button from '@material-ui/core/Button';\\n\\nfunction rand() {\\n  return Math.round(Math.random() * 20) - 10;\\n}\\n\\nfunction getModalStyle() {\\n  const top = 50 + rand();\\n  const left = 50 + rand();\\n\\n  return {\\n    top: `${top}%`,\\n    left: `${left}%`,\\n    transform: `translate(-${top}%, -${left}%)`,\\n  };\\n}\\n\\nconst useStyles = makeStyles(theme => ({\\n  paper: {\\n    position: 'absolute',\\n    width: 400,\\n    backgroundColor: theme.palette.background.paper,\\n    boxShadow: theme.shadows[5],\\n    padding: theme.spacing(4),\\n    outline: 'none',\\n  },\\n}));\\n\\nexport default function SimpleModal() {\\n  const [open, setOpen] = React.useState(false);\\n  // getModalStyle is not a pure function, we roll the style only on the first render\\n  const [modalStyle] = React.useState(getModalStyle);\\n\\n  const handleOpen = () => {\\n    setOpen(true);\\n  };\\n\\n  const handleClose = () => {\\n    setOpen(false);\\n  };\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <Typography gutterBottom>Click to get the full Modal experience!</Typography>\\n      <Button onClick={handleOpen}>Open Modal</Button>\\n      <Modal\\n        aria-labelledby=\\\"simple-modal-title\\\"\\n        aria-describedby=\\\"simple-modal-description\\\"\\n        open={open}\\n        onClose={handleClose}\\n      >\\n        <div style={modalStyle} className={classes.paper}>\\n          <Typography variant=\\\"h6\\\" id=\\\"modal-title\\\">\\n            Text in a modal\\n          </Typography>\\n          <Typography variant=\\\"subtitle1\\\" id=\\\"simple-modal-description\\\">\\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\\n          </Typography>\\n          <SimpleModal />\\n        </div>\\n      </Modal>\\n    </div>\\n  );\\n}\\n\";","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/utils/ModalExamplesPage.js"],"names":["React","makeStyles","Typography","Button","Modal","Notice","KTCodeExample","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","outline","SimpleModal","useState","open","setOpen","modalStyle","handleOpen","handleClose","classes","ModalExamplesPage","jsCode1"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Typography, Button, Modal} from \"@material-ui/core\";\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\n\n// Example 1\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: \"none\"\n  }\n}));\n\nfunction SimpleModal() {\n  const [open, setOpen] = React.useState(false);\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Typography gutterBottom>\n        Click to get the full Modal experience!\n      </Typography>\n      <Button onClick={handleOpen}>Open Modal</Button>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <Typography variant=\"h6\" id=\"modal-title\">\n            Text in a modal\n          </Typography>\n          <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n          </Typography>\n          <SimpleModal />\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default function ModalExamplesPage() {\n  // Example 1\n  const [open, setOpen] = React.useState(false);\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n\n  return (\n    <>\n      <Notice icon=\"flaticon-warning font-primary\">\n        <span>\n          The modal component provides a solid foundation for creating dialogs,\n          popovers, lightboxes, or whatever else.\n        </span>{\" \"}\n        <span>\n          For more info please check the components's official{\" \"}\n          <a\n            target=\"_blank\"\n            className=\"font-weight-bold\"\n            rel=\"noopener noreferrer\"\n            href=\"https://material-ui.com/components/modal/\"\n          >\n            demos & documentation\n          </a>\n        </span>\n      </Notice>\n\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple modal\">\n            <div>\n              <Typography gutterBottom>\n                Click to get the full Modal experience!\n              </Typography>\n              <Button onClick={handleOpen}>Open Modal</Button>\n              <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={open}\n                onClose={handleClose}\n              >\n                <div style={modalStyle} className={classes.paper}>\n                  <Typography variant=\"h6\" id=\"modal-title\">\n                    Text in a modal\n                  </Typography>\n                  <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                    Duis mollis, est non commodo luctus, nisi erat porttitor\n                    ligula.\n                  </Typography>\n                  <SimpleModal />\n                </div>\n              </Modal>\n            </div>\n      </KTCodeExample>\n    </>\n  );\n}\n\nconst jsCode1 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: \\`\\${top}%\\`,\n    left: \\`\\${left}%\\`,\n    transform: \\`translate(-\\${top}%, -\\${left}%)\\`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: 'none',\n  },\n}));\n\nexport default function SimpleModal() {\n  const [open, setOpen] = React.useState(false);\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Typography gutterBottom>Click to get the full Modal experience!</Typography>\n      <Button onClick={handleOpen}>Open Modal</Button>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <Typography variant=\"h6\" id=\"modal-title\">\n            Text in a modal\n          </Typography>\n          <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n          </Typography>\n          <SimpleModal />\n        </div>\n      </Modal>\n    </div>\n  );\n}\n`;\n"]},"metadata":{},"sourceType":"module"}