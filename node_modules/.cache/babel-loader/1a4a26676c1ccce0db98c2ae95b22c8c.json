{"ast":null,"code":"import _classCallCheck from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/ReactBootstrapExamples/FormsExamplesPage.js\";\nimport React from \"react\";\nimport { Button, Form, InputGroup, Col, Row } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\n\nvar FormExample = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormExample, _React$Component);\n\n  var _super = _createSuper(FormExample);\n\n  function FormExample() {\n    var _this;\n\n    _classCallCheck(this, FormExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      validated: false\n    };\n    return _this;\n  }\n\n  _createClass(FormExample, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      this.setState({\n        validated: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var validated = this.state.validated;\n      return /*#__PURE__*/React.createElement(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        md: \"4\",\n        controlId: \"validationCustom01\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, \"First name\"), /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"First name\",\n        defaultValue: \"Mark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, \"Looks good!\")), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        md: \"4\",\n        controlId: \"validationCustom02\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, \"Last name\"), /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"Last name\",\n        defaultValue: \"Otto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, \"Looks good!\")), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        md: \"4\",\n        controlId: \"validationCustomUsername\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, \"@\")), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Username\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, \"Please choose a username.\")))), /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"validationCustom03\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"City\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, \"Please provide a valid city.\")), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        md: \"3\",\n        controlId: \"validationCustom04\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"State\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, \"Please provide a valid state.\")), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        md: \"3\",\n        controlId: \"validationCustom05\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, \"Zip\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Zip\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, \"Please provide a valid zip.\"))), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        required: true,\n        label: \"Agree to terms and conditions\",\n        feedback: \"You must agree before submitting.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, \"Submit form\"));\n    }\n  }]);\n\n  return FormExample;\n}(React.Component);\n\nvar FormsExamplesPage = /*#__PURE__*/function (_React$Component2) {\n  _inherits(FormsExamplesPage, _React$Component2);\n\n  var _super2 = _createSuper(FormsExamplesPage);\n\n  function FormsExamplesPage() {\n    _classCallCheck(this, FormsExamplesPage);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(FormsExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"font-weight-bold\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/forms/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, \"demos & documentation\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Basic Example\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, \"<FormControl>\"), \" component renders a form control with Bootstrap styling. The\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, \"<FormGroup>\"), \" component wraps a form control with proper spacing, along with support for a label, help text, and validation state. To ensure accessibility, set controlId on\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, \"<FormGroup>\"), \", and use\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, \"<FormLabel>\"), \" for the label.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }\n      }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formBasicChecbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        label: \"Check me out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, \"Submit\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode3,\n        beforeCodeTitle: \"Sizing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      }, \"Use \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, \"size\"), \" on \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 42\n        }\n      }, \"<FormControl>\"), \" to change the size of inputs.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Control, {\n        size: \"lg\",\n        type: \"text\",\n        placeholder: \"Large text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Normal text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control, {\n        size: \"sm\",\n        type: \"text\",\n        placeholder: \"Small text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode5,\n        beforeCodeTitle: \"Default (stacked)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, \"By default, any number of checkboxes and radios that are immediate sibling will be vertically stacked and appropriately spaced with FormCheck.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }\n      }, [\"checkbox\", \"radio\"].map(function (type) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"default-\".concat(type),\n          className: \"mb-3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          type: type,\n          id: \"default-\".concat(type),\n          label: \"default \".concat(type),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Form.Check, {\n          disabled: true,\n          type: type,\n          label: \"disabled \".concat(type),\n          id: \"disabled-default-\".concat(type),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode7,\n        beforeCodeTitle: \"Without labels\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      }, \"When you render a FormCheck without a label (no\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, \"children\"), \") some additional styling is applied to keep the inputs from collapsing.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Check, {\n        \"aria-label\": \"option 1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"radio\",\n        \"aria-label\": \"radio 1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode9,\n        beforeCodeTitle: \"Form group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }\n      }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, \"FormGroup\"), \" component is the easiest way to add some structure to forms. It provides a flexible container for grouping of labels, controls, optional help text, and form validation messaging.\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }\n      }, \"You also add the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 34\n        }\n      }, \"controlId\"), \" prop to accessibly wire the nested label and input together via the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 61\n        }\n      }, \"id\"), \".\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formGroupEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 19\n        }\n      }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formGroupPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 19\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode11,\n        beforeCodeTitle: \"Form row\",\n        codeBlockHeight: \"400px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      }, \"You may also swap \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 35\n        }\n      }, \"<Row>\"), \" for\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, \"<Form.Row>\"), \", a variation of the standard grid row that overrides the default column gutters for tighter and more compact layouts.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formGridAddress1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 19\n        }\n      }, \"Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n        placeholder: \"1234 Main St\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formGridAddress2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 19\n        }\n      }, \"Address 2\"), /*#__PURE__*/React.createElement(Form.Control, {\n        placeholder: \"Apartment, studio, or floor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridCity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(Form.Control, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 23\n        }\n      }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 23\n        }\n      }, \"...\"))), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridZip\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }\n      }, \"Zip\"), /*#__PURE__*/React.createElement(Form.Control, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        id: \"formGridCheckbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        label: \"Check me out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }\n      }, \"Submit\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode13,\n        beforeCodeTitle: \"Native HTML5 form validation\",\n        codeBlockHeight: \"400px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }\n      }, \"For native HTML form validation\\u2013available in all our supported browsers, the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 31\n        }\n      }, \":valid\"), \" and \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 55\n        }\n      }, \":invalid\"), \" \", \"pseudo selectors are used to apply validation styles as well as display feedback messages.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormExample, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Form controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }\n      }, \"For textual form controls\\u2014like \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 48\n        }\n      }, \"input\"), \"s,\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }, \"select\"), \"s, and \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 43\n        }\n      }, \"textarea\"), \"s\\u2014use the FormControl component. FormControl adds some additional styles for general appearance, focus state, sizing, and more.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlInput1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 19\n        }\n      }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"name@example.com\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlSelect1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 19\n        }\n      }, \"Example select\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }\n      }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }\n      }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }\n      }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }\n      }, \"5\"))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlSelect2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 19\n        }\n      }, \"Example multiple select\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        multiple: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }\n      }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }\n      }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }\n      }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }\n      }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      }, \"5\"))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlTextarea1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 19\n        }\n      }, \"Example textarea\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode4,\n        beforeCodeTitle: \"Plaintext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 15\n        }\n      }, \"If you want to have elements in your form styled as plain text, use the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }\n      }, \"plaintext\"), \" prop on FormControls to remove the default form field styling and preserve the correct margin and padding.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formPlaintextEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        column: true,\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 19\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Col, {\n        sm: \"10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        plaintext: true,\n        readOnly: true,\n        defaultValue: \"email@example.com\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formPlaintextPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        column: true,\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 19\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Col, {\n        sm: \"10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }\n      }))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode6,\n        beforeCodeTitle: \"Inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }\n      }, \"Group checkboxes or radios on the same horizontal row by adding the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }\n      }, \"inline\"), \" prop.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }\n      }, [\"checkbox\", \"radio\"].map(function (type) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"inline-\".concat(type),\n          className: \"mb-3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          inline: true,\n          label: \"1\",\n          type: type,\n          id: \"inline-\".concat(type, \"-1\"),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Form.Check, {\n          inline: true,\n          label: \"2\",\n          type: type,\n          id: \"inline-\".concat(type, \"-2\"),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Form.Check, {\n          inline: true,\n          disabled: true,\n          label: \"3 (disabled)\",\n          type: type,\n          id: \"inline-\".concat(type, \"-3\"),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 21\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode8,\n        beforeCodeTitle: \"Customizing FormCheck rendering\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 15\n        }\n      }, \"When you need tighter control, or want to customize how the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 17\n        }\n      }, \"FormCheck\"), \" component renders, it may better to use it's constituent parts directly.\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 15\n        }\n      }, \"By provided \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 29\n        }\n      }, \"children\"), \" to the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 58\n        }\n      }, \"FormCheck\"), \" \", \"you can forgo the default rendering and handle it yourself.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 15\n        }\n      }, [\"checkbox\", \"radio\"].map(function (type) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: type,\n          className: \"mb-3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          type: type,\n          id: \"check-api-\".concat(type),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check.Input, {\n          type: type,\n          isValid: true,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(Form.Check.Label, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 23\n          }\n        }, \"Custom api \".concat(type)), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n          type: \"valid\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 23\n          }\n        }, \"You did it!\")));\n      }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode10,\n        beforeCodeTitle: \"Form grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 15\n        }\n      }, \"More complex forms can be built using the grid components. Use these for form layouts that require multiple columns, varied widths, and additional alignment options.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        placeholder: \"First name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        placeholder: \"Last name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 21\n        }\n      }))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode12,\n        beforeCodeTitle: \"Horizontal forms\",\n        codeBlockHeight: \"400px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }\n      }, \"You may also swap \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 35\n        }\n      }, \"<Row>\"), \" for\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 17\n        }\n      }, \"<Form.Row>\"), \", a variation of the standard grid row that overrides the default column gutters for tighter and more compact layouts.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        column: true,\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 19\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        column: true,\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 19\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"fieldset\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        as: \"legend\",\n        column: true,\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }\n      }, \"Radios\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"radio\",\n        label: \"first radio\",\n        name: \"formHorizontalRadios\",\n        id: \"formHorizontalRadios1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"radio\",\n        label: \"second radio\",\n        name: \"formHorizontalRadios\",\n        id: \"formHorizontalRadios2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"radio\",\n        label: \"third radio\",\n        name: \"formHorizontalRadios\",\n        id: \"formHorizontalRadios3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalCheck\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          span: 10,\n          offset: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        label: \"Remember me\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          span: 10,\n          offset: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 21\n        }\n      }, \"Sign in\"))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode16,\n        beforeCodeTitle: \"Inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 15\n        }\n      }, [\"checkbox\", \"radio\"].map(function (type) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"custom-inline-\".concat(type),\n          className: \"mb-3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          custom: true,\n          inline: true,\n          label: \"1\",\n          type: type,\n          id: \"custom-inline-\".concat(type, \"-1\"),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Form.Check, {\n          custom: true,\n          inline: true,\n          label: \"2\",\n          type: type,\n          id: \"custom-inline-\".concat(type, \"-2\"),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Form.Check, {\n          custom: true,\n          inline: true,\n          disabled: true,\n          label: \"3 (disabled)\",\n          type: type,\n          id: \"custom-inline-\".concat(type, \"-3\"),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 21\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode15,\n        beforeCodeTitle: \"Checkboxes and radios\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 15\n        }\n      }, \"Custom checkbox and radio styles are achieved with a resourceful use of the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 28\n        }\n      }, \":checked\"), \" selector and\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 17\n        }\n      }, \":after\"), \" psuedo elements, but are Structurally similar to the default \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 40\n        }\n      }, \"FormCheck\"), \".\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 15\n        }\n      }, [\"checkbox\", \"radio\"].map(function (type) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"custom-\".concat(type),\n          className: \"mb-3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          custom: true,\n          type: type,\n          id: \"custom-\".concat(type),\n          label: \"Check this custom \".concat(type),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Form.Check, {\n          custom: true,\n          disabled: true,\n          type: type,\n          label: \"disabled \".concat(type),\n          id: \"disabled-custom-\".concat(type),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 21\n          }\n        }));\n      }))))));\n    }\n  }]);\n\n  return FormsExamplesPage;\n}(React.Component);\n\nexport { FormsExamplesPage as default };\nvar jsCode1 = \"\\n<Form>\\n  <Form.Group controlId=\\\"formBasicEmail\\\">\\n    <Form.Label>Email address</Form.Label>\\n    <Form.Control type=\\\"email\\\" placeholder=\\\"Enter email\\\" />\\n    <Form.Text className=\\\"text-muted\\\">\\n      We'll never share your email with anyone else.\\n    </Form.Text>\\n  </Form.Group>\\n\\n  <Form.Group controlId=\\\"formBasicPassword\\\">\\n    <Form.Label>Password</Form.Label>\\n    <Form.Control type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n  </Form.Group>\\n  <Form.Group controlId=\\\"formBasicChecbox\\\">\\n    <Form.Check type=\\\"checkbox\\\" label=\\\"Check me out\\\" />\\n  </Form.Group>\\n  <Button variant=\\\"primary\\\" type=\\\"submit\\\">\\n    Submit\\n  </Button>\\n</Form>\\n\";\nvar jsCode2 = \"\\n<Form>\\n  <Form.Group controlId=\\\"exampleForm.ControlInput1\\\">\\n    <Form.Label>Email address</Form.Label>\\n    <Form.Control type=\\\"email\\\" placeholder=\\\"name@example.com\\\" />\\n  </Form.Group>\\n  <Form.Group controlId=\\\"exampleForm.ControlSelect1\\\">\\n    <Form.Label>Example select</Form.Label>\\n    <Form.Control as=\\\"select\\\">\\n      <option>1</option>\\n      <option>2</option>\\n      <option>3</option>\\n      <option>4</option>\\n      <option>5</option>\\n    </Form.Control>\\n  </Form.Group>\\n  <Form.Group controlId=\\\"exampleForm.ControlSelect2\\\">\\n    <Form.Label>Example multiple select</Form.Label>\\n    <Form.Control as=\\\"select\\\" multiple>\\n      <option>1</option>\\n      <option>2</option>\\n      <option>3</option>\\n      <option>4</option>\\n      <option>5</option>\\n    </Form.Control>\\n  </Form.Group>\\n  <Form.Group controlId=\\\"exampleForm.ControlTextarea1\\\">\\n    <Form.Label>Example textarea</Form.Label>\\n    <Form.Control as=\\\"textarea\\\" rows=\\\"3\\\" />\\n  </Form.Group>\\n</Form>\\n\";\nvar jsCode3 = \"\\n<>\\n  <Form.Control size=\\\"lg\\\" type=\\\"text\\\" placeholder=\\\"Large text\\\" />\\n  <br />\\n  <Form.Control type=\\\"text\\\" placeholder=\\\"Normal text\\\" />\\n  <br />\\n  <Form.Control size=\\\"sm\\\" type=\\\"text\\\" placeholder=\\\"Small text\\\" />\\n</>\\n\";\nvar jsCode4 = \"\\n<Form>\\n  <Form.Group as={Row} controlId=\\\"formPlaintextEmail\\\">\\n    <Form.Label column sm=\\\"2\\\">\\n      Email\\n    </Form.Label>\\n    <Col sm=\\\"10\\\">\\n      <Form.Control plaintext readOnly defaultValue=\\\"email@example.com\\\" />\\n    </Col>\\n  </Form.Group>\\n\\n  <Form.Group as={Row} controlId=\\\"formPlaintextPassword\\\">\\n    <Form.Label column sm=\\\"2\\\">\\n      Password\\n    </Form.Label>\\n    <Col sm=\\\"10\\\">\\n      <Form.Control type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n    </Col>\\n  </Form.Group>\\n</Form>\\n\";\nvar jsCode5 = \"\\n<Form>\\n  {['checkbox', 'radio'].map(type => (\\n    <div key={`default-${type}`} className=\\\"mb-3\\\">\\n      <Form.Check \\n        type={type}\\n        id={`default-${type}`}\\n        label={`default ${type}`}\\n      />\\n\\n      <Form.Check\\n        disabled\\n        type={type}\\n        label={`disabled ${type}`}\\n        id={`disabled-default-${type}`}\\n      />\\n    </div>\\n  ))}\\n</Form>\\n\";\nvar jsCode6 = \"\\n<Form>\\n  {['checkbox', 'radio'].map(type => (\\n    <div key={`inline-${type}`} className=\\\"mb-3\\\">\\n      <Form.Check inline label=\\\"1\\\" type={type} id={`inline-${type}-1`} />\\n      <Form.Check inline label=\\\"2\\\" type={type} id={`inline-${type}-2`} />\\n      <Form.Check\\n        inline\\n        disabled\\n        label=\\\"3 (disabled)\\\"\\n        type={type}\\n        id={`inline-${type}-3`}\\n      />\\n    </div>\\n  ))}\\n</Form>\\n\";\nvar jsCode7 = \"\\n<>\\n  <Form.Check aria-label=\\\"option 1\\\" />\\n  <Form.Check type=\\\"radio\\\" aria-label=\\\"radio 1\\\" />\\n</>\\n\";\nvar jsCode8 = \"\\n<Form>\\n  {['checkbox', 'radio'].map(type => (\\n    <div key={type} className=\\\"mb-3\\\">\\n      <Form.Check type={type} id={`check-api-${type}`}>\\n        <Form.Check.Input type={type} isValid />\\n        <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\\n        <Form.Control.Feedback type=\\\"valid\\\">You did it!</Form.Control.Feedback>\\n      </Form.Check>\\n    </div>\\n  ))}\\n</Form>\\n\";\nvar jsCode9 = \"\\n<Form>\\n  <Form.Group controlId=\\\"formGroupEmail\\\">\\n    <Form.Label>Email address</Form.Label>\\n    <Form.Control type=\\\"email\\\" placeholder=\\\"Enter email\\\" />\\n  </Form.Group>\\n  <Form.Group controlId=\\\"formGroupPassword\\\">\\n    <Form.Label>Password</Form.Label>\\n    <Form.Control type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n  </Form.Group>\\n</Form>\\n\";\nvar jsCode10 = \"\\n<Form>\\n  <Row>\\n    <Col>\\n      <Form.Control placeholder=\\\"First name\\\" />\\n    </Col>\\n    <Col>\\n      <Form.Control placeholder=\\\"Last name\\\" />\\n    </Col>\\n  </Row>\\n</Form>\\n\";\nvar jsCode11 = \"\\n<Form>\\n  <Form.Row>\\n    <Form.Group as={Col} controlId=\\\"formGridEmail\\\">\\n      <Form.Label>Email</Form.Label>\\n      <Form.Control type=\\\"email\\\" placeholder=\\\"Enter email\\\" />\\n    </Form.Group>\\n\\n    <Form.Group as={Col} controlId=\\\"formGridPassword\\\">\\n      <Form.Label>Password</Form.Label>\\n      <Form.Control type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n    </Form.Group>\\n  </Form.Row>\\n\\n  <Form.Group controlId=\\\"formGridAddress1\\\">\\n    <Form.Label>Address</Form.Label>\\n    <Form.Control placeholder=\\\"1234 Main St\\\" />\\n  </Form.Group>\\n\\n  <Form.Group controlId=\\\"formGridAddress2\\\">\\n    <Form.Label>Address 2</Form.Label>\\n    <Form.Control placeholder=\\\"Apartment, studio, or floor\\\" />\\n  </Form.Group>\\n\\n  <Form.Row>\\n    <Form.Group as={Col} controlId=\\\"formGridCity\\\">\\n      <Form.Label>City</Form.Label>\\n      <Form.Control />\\n    </Form.Group>\\n\\n    <Form.Group as={Col} controlId=\\\"formGridState\\\">\\n      <Form.Label>State</Form.Label>\\n      <Form.Control as=\\\"select\\\">\\n        <option>Choose...</option>\\n        <option>...</option>\\n      </Form.Control>\\n    </Form.Group>\\n\\n    <Form.Group as={Col} controlId=\\\"formGridZip\\\">\\n      <Form.Label>Zip</Form.Label>\\n      <Form.Control />\\n    </Form.Group>\\n  </Form.Row>\\n\\n  <Form.Group id=\\\"formGridCheckbox\\\">\\n    <Form.Check type=\\\"checkbox\\\" label=\\\"Check me out\\\" />\\n  </Form.Group>\\n\\n  <Button variant=\\\"primary\\\" type=\\\"submit\\\">\\n    Submit\\n  </Button>\\n</Form>\\n\";\nvar jsCode12 = \"\\n<Form>\\n  <Form.Group as={Row} controlId=\\\"formHorizontalEmail\\\">\\n    <Form.Label column sm={2}>\\n      Email\\n    </Form.Label>\\n    <Col sm={10}>\\n      <Form.Control type=\\\"email\\\" placeholder=\\\"Email\\\" />\\n    </Col>\\n  </Form.Group>\\n\\n  <Form.Group as={Row} controlId=\\\"formHorizontalPassword\\\">\\n    <Form.Label column sm={2}>\\n      Password\\n    </Form.Label>\\n    <Col sm={10}>\\n      <Form.Control type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n    </Col>\\n  </Form.Group>\\n  <fieldset>\\n    <Form.Group as={Row}>\\n      <Form.Label as=\\\"legend\\\" column sm={2}>\\n        Radios\\n      </Form.Label>\\n      <Col sm={10}>\\n        <Form.Check\\n          type=\\\"radio\\\"\\n          label=\\\"first radio\\\"\\n          name=\\\"formHorizontalRadios\\\"\\n          id=\\\"formHorizontalRadios1\\\"\\n        />\\n        <Form.Check\\n          type=\\\"radio\\\"\\n          label=\\\"second radio\\\"\\n          name=\\\"formHorizontalRadios\\\"\\n          id=\\\"formHorizontalRadios2\\\"\\n        />\\n        <Form.Check\\n          type=\\\"radio\\\"\\n          label=\\\"third radio\\\"\\n          name=\\\"formHorizontalRadios\\\"\\n          id=\\\"formHorizontalRadios3\\\"\\n        />\\n      </Col>\\n    </Form.Group>\\n  </fieldset>\\n  <Form.Group as={Row} controlId=\\\"formHorizontalCheck\\\">\\n    <Col sm={{ span: 10, offset: 2 }}>\\n      <Form.Check label=\\\"Remember me\\\" />\\n    </Col>\\n  </Form.Group>\\n\\n  <Form.Group as={Row}>\\n    <Col sm={{ span: 10, offset: 2 }}>\\n      <Button type=\\\"submit\\\">Sign in</Button>\\n    </Col>\\n  </Form.Group>\\n</Form>\\n\";\nvar jsCode13 = \"\\nclass FormExample extends React.Component {\\n  constructor(...args) {\\n    super(...args);\\n\\n    this.state = { validated: false };\\n  }\\n\\n  handleSubmit(event) {\\n    const form = event.currentTarget;\\n    if (form.checkValidity() === false) {\\n      event.preventDefault();\\n      event.stopPropagation();\\n    }\\n    this.setState({ validated: true });\\n  }\\n\\n  render() {\\n    const { validated } = this.state;\\n    return (\\n      <Form\\n        noValidate\\n        validated={validated}\\n        onSubmit={e => this.handleSubmit(e)}\\n      >\\n        <Form.Row>\\n          <Form.Group as={Col} md=\\\"4\\\" controlId=\\\"validationCustom01\\\">\\n            <Form.Label>First name</Form.Label>\\n            <Form.Control\\n              required\\n              type=\\\"text\\\"\\n              placeholder=\\\"First name\\\"\\n              defaultValue=\\\"Mark\\\"\\n            />\\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\\n          </Form.Group>\\n          <Form.Group as={Col} md=\\\"4\\\" controlId=\\\"validationCustom02\\\">\\n            <Form.Label>Last name</Form.Label>\\n            <Form.Control\\n              required\\n              type=\\\"text\\\"\\n              placeholder=\\\"Last name\\\"\\n              defaultValue=\\\"Otto\\\"\\n            />\\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\\n          </Form.Group>\\n          <Form.Group as={Col} md=\\\"4\\\" controlId=\\\"validationCustomUsername\\\">\\n            <Form.Label>Username</Form.Label>\\n            <InputGroup>\\n              <InputGroup.Prepend>\\n                <InputGroup.Text id=\\\"inputGroupPrepend\\\">@</InputGroup.Text>\\n              </InputGroup.Prepend>\\n              <Form.Control\\n                type=\\\"text\\\"\\n                placeholder=\\\"Username\\\"\\n                aria-describedby=\\\"inputGroupPrepend\\\"\\n                required\\n              />\\n              <Form.Control.Feedback type=\\\"invalid\\\">\\n                Please choose a username.\\n              </Form.Control.Feedback>\\n            </InputGroup>\\n          </Form.Group>\\n        </Form.Row>\\n        <Form.Row>\\n          <Form.Group as={Col} md=\\\"6\\\" controlId=\\\"validationCustom03\\\">\\n            <Form.Label>City</Form.Label>\\n            <Form.Control type=\\\"text\\\" placeholder=\\\"City\\\" required />\\n            <Form.Control.Feedback type=\\\"invalid\\\">\\n              Please provide a valid city.\\n            </Form.Control.Feedback>\\n          </Form.Group>\\n          <Form.Group as={Col} md=\\\"3\\\" controlId=\\\"validationCustom04\\\">\\n            <Form.Label>State</Form.Label>\\n            <Form.Control type=\\\"text\\\" placeholder=\\\"State\\\" required />\\n            <Form.Control.Feedback type=\\\"invalid\\\">\\n              Please provide a valid state.\\n            </Form.Control.Feedback>\\n          </Form.Group>\\n          <Form.Group as={Col} md=\\\"3\\\" controlId=\\\"validationCustom05\\\">\\n            <Form.Label>Zip</Form.Label>\\n            <Form.Control type=\\\"text\\\" placeholder=\\\"Zip\\\" required />\\n            <Form.Control.Feedback type=\\\"invalid\\\">\\n              Please provide a valid zip.\\n            </Form.Control.Feedback>\\n          </Form.Group>\\n        </Form.Row>\\n        <Form.Group>\\n          <Form.Check\\n            required\\n            label=\\\"Agree to terms and conditions\\\"\\n            feedback=\\\"You must agree before submitting.\\\"\\n          />\\n        </Form.Group>\\n        <Button type=\\\"submit\\\">Submit form</Button>\\n      </Form>\\n    );\\n  }\\n}\\n\\nrender(<FormExample />);\\n\";\nvar jsCode15 = \"\\n<Form>\\n  {['checkbox', 'radio'].map(type => (\\n    <div key={`custom-${type}`} className=\\\"mb-3\\\">\\n      <Form.Check \\n        custom\\n        type={type}\\n        id={`custom-${type}`}\\n        label={`Check this custom ${type}`}\\n      />\\n\\n      <Form.Check\\n        custom\\n        disabled\\n        type={type}\\n        label={`disabled ${type}`}\\n        id={`disabled-custom-${type}`}\\n      />\\n    </div>\\n  ))}\\n</Form>\\n\";\nvar jsCode16 = \"\\n<Form>\\n  {['checkbox', 'radio'].map(type => (\\n    <div key={`custom-inline-${type}`} className=\\\"mb-3\\\">\\n      <Form.Check\\n        custom\\n        inline\\n        label=\\\"1\\\"\\n        type={type}\\n        id={`custom-inline-${type}-1`}\\n      />\\n      <Form.Check\\n        custom\\n        inline\\n        label=\\\"2\\\"\\n        type={type}\\n        id={`custom-inline-${type}-2`}\\n      />\\n      <Form.Check\\n        custom\\n        inline\\n        disabled\\n        label=\\\"3 (disabled)\\\"\\n        type={type}\\n        id={`custom-inline-${type}-3`}\\n      />\\n    </div>\\n  ))}\\n</Form>\\n\";","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ReactBootstrapExamples/FormsExamplesPage.js"],"names":["React","Button","Form","InputGroup","Col","Row","Notice","KTCodeExample","FormExample","args","state","validated","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","setState","e","handleSubmit","Component","FormsExamplesPage","jsCode1","jsCode3","jsCode5","map","type","jsCode7","jsCode9","jsCode11","jsCode13","jsCode2","jsCode4","jsCode6","jsCode8","jsCode10","jsCode12","span","offset","jsCode16","jsCode15"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Form, InputGroup, Col, Row} from \"react-bootstrap\";\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\n\nclass FormExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { validated: false };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.setState({ validated: true });\n  }\n\n  render() {\n    const { validated } = this.state;\n    return (\n      <Form\n        noValidate\n        validated={validated}\n        onSubmit={e => this.handleSubmit(e)}\n      >\n        <Form.Row>\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n            <Form.Label>First name</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"First name\"\n              defaultValue=\"Mark\"\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n            <Form.Label>Last name</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Last name\"\n              defaultValue=\"Otto\"\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\n            <Form.Label>Username</Form.Label>\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                aria-describedby=\"inputGroupPrepend\"\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please choose a username.\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\n            <Form.Label>City</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"City\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid city.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\n            <Form.Label>State</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"State\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid state.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\n            <Form.Label>Zip</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Zip\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid zip.\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n        <Form.Group>\n          <Form.Check\n            required\n            label=\"Agree to terms and conditions\"\n            feedback=\"You must agree before submitting.\"\n          />\n        </Form.Group>\n        <Button type=\"submit\">Submit form</Button>\n      </Form>\n    );\n  }\n}\n\nexport default class FormsExamplesPage extends React.Component {\n  render() {\n    return (\n      <>\n        <Notice icon=\"flaticon-warning font-primary\">\n          For more info please check the components's official{\" \"}\n          <a\n            target=\"_blank\"\n            className=\"font-weight-bold\"\n            rel=\"noopener noreferrer\"\n            href=\"https://react-bootstrap.github.io/components/forms/\"\n          >\n            demos & documentation\n          </a>\n        </Notice>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Basic Example\">\n              <span>\n                The <code>&lt;FormControl&gt;</code> component renders a form\n                control with Bootstrap styling. The{\" \"}\n                <code>&lt;FormGroup&gt;</code> component wraps a form control\n                with proper spacing, along with support for a label, help text,\n                and validation state. To ensure accessibility, set controlId on{\" \"}\n                <code>&lt;FormGroup&gt;</code>, and use{\" \"}\n                <code>&lt;FormLabel&gt;</code> for the label.\n              </span>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                  <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicChecbox\">\n                  <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </Form>\n            </KTCodeExample>\n\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Sizing\">\n              <span>\n                Use <code>size</code> on <code>&lt;FormControl&gt;</code> to\n                change the size of inputs.\n              </span>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <>\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"Large text\" />\n                <br />\n                <Form.Control type=\"text\" placeholder=\"Normal text\" />\n                <br />\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Small text\" />\n              </>\n            </KTCodeExample>\n\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Default (stacked)\">\n              <span>\n                By default, any number of checkboxes and radios that are\n                immediate sibling will be vertically stacked and appropriately\n                spaced with FormCheck.\n              </span>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <Form>\n                {[\"checkbox\", \"radio\"].map(type => (\n                  <div key={`default-${type}`} className=\"mb-3\">\n                    <Form.Check\n                      type={type}\n                      id={`default-${type}`}\n                      label={`default ${type}`}\n                    />\n\n                    <Form.Check\n                      disabled\n                      type={type}\n                      label={`disabled ${type}`}\n                      id={`disabled-default-${type}`}\n                    />\n                  </div>\n                ))}\n              </Form>\n            </KTCodeExample>\n\n            <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Without labels\">\n              <span>\n                When you render a FormCheck without a label (no{\" \"}\n                <code>children</code>) some additional styling is applied to\n                keep the inputs from collapsing.\n              </span>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <>\n                <Form.Check aria-label=\"option 1\" />\n                <Form.Check type=\"radio\" aria-label=\"radio 1\" />\n              </>\n            </KTCodeExample>\n\n            <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Form group\">\n              <span className=\"mb-3\">\n                The <code>FormGroup</code> component is the easiest way to add\n                some structure to forms. It provides a flexible container for\n                grouping of labels, controls, optional help text, and form\n                validation messaging.\n              </span>\n              <div>\n                You also add the <code>controlId</code> prop to accessibly wire\n                the nested label and input together via the <code>id</code>.\n              </div>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <Form>\n                <Form.Group controlId=\"formGroupEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                </Form.Group>\n                <Form.Group controlId=\"formGroupPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n              </Form>\n            </KTCodeExample>\n\n            <KTCodeExample\n              jsCode={jsCode11}\n              beforeCodeTitle=\"Form row\"\n              codeBlockHeight=\"400px\"\n            >\n              <span>\n                You may also swap <code>&lt;Row&gt;</code> for{\" \"}\n                <code>&lt;Form.Row&gt;</code>, a variation of the standard grid\n                row that overrides the default column gutters for tighter and\n                more compact layouts.\n              </span>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <Form>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                  </Form.Group>\n\n                  <Form.Group as={Col} controlId=\"formGridPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\n                  </Form.Group>\n                </Form.Row>\n\n                <Form.Group controlId=\"formGridAddress1\">\n                  <Form.Label>Address</Form.Label>\n                  <Form.Control placeholder=\"1234 Main St\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridAddress2\">\n                  <Form.Label>Address 2</Form.Label>\n                  <Form.Control placeholder=\"Apartment, studio, or floor\" />\n                </Form.Group>\n\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control />\n                  </Form.Group>\n\n                  <Form.Group as={Col} controlId=\"formGridState\">\n                    <Form.Label>State</Form.Label>\n                    <Form.Control as=\"select\">\n                      <option>Choose...</option>\n                      <option>...</option>\n                    </Form.Control>\n                  </Form.Group>\n\n                  <Form.Group as={Col} controlId=\"formGridZip\">\n                    <Form.Label>Zip</Form.Label>\n                    <Form.Control />\n                  </Form.Group>\n                </Form.Row>\n\n                <Form.Group id=\"formGridCheckbox\">\n                  <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </Form>\n            </KTCodeExample>\n\n            <KTCodeExample\n              jsCode={jsCode13}\n              beforeCodeTitle=\"Native HTML5 form validation\"\n              codeBlockHeight=\"400px\"\n            >\n              <span>\n                For native HTML form validation–available in all our supported\n                browsers, the <code>:valid</code> and <code>:invalid</code>{\" \"}\n                pseudo selectors are used to apply validation styles as well as\n                display feedback messages.\n              </span>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <FormExample />\n            </KTCodeExample>\n          </div>\n          <div className=\"col-md-6\">\n            <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Form controls\">\n              <span>\n                For textual form controls—like <code>input</code>s,{\" \"}\n                <code>select</code>s, and <code>textarea</code>s—use the\n                FormControl component. FormControl adds some additional styles\n                for general appearance, focus state, sizing, and more.\n              </span>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <Form>\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                  <Form.Label>Example select</Form.Label>\n                  <Form.Control as=\"select\">\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                  <Form.Label>Example multiple select</Form.Label>\n                  <Form.Control as=\"select\" multiple>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                  <Form.Label>Example textarea</Form.Label>\n                  <Form.Control as=\"textarea\" rows=\"3\" />\n                </Form.Group>\n              </Form>\n            </KTCodeExample>\n\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Plaintext\">\n              <span>\n                If you want to have elements in your form styled as plain text,\n                use the <code>plaintext</code> prop on FormControls to remove\n                the default form field styling and preserve the correct margin\n                and padding.\n              </span>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <Form>\n                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                  <Form.Label column sm=\"2\">\n                    Email\n                  </Form.Label>\n                  <Col sm=\"10\">\n                    <Form.Control\n                      plaintext\n                      readOnly\n                      defaultValue=\"email@example.com\"\n                    />\n                  </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                  <Form.Label column sm=\"2\">\n                    Password\n                  </Form.Label>\n                  <Col sm=\"10\">\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\n                  </Col>\n                </Form.Group>\n              </Form>\n            </KTCodeExample>\n\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Inline\">\n              <span>\n                Group checkboxes or radios on the same horizontal row by adding\n                the <code>inline</code> prop.\n              </span>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <Form>\n                {[\"checkbox\", \"radio\"].map(type => (\n                  <div key={`inline-${type}`} className=\"mb-3\">\n                    <Form.Check\n                      inline\n                      label=\"1\"\n                      type={type}\n                      id={`inline-${type}-1`}\n                    />\n                    <Form.Check\n                      inline\n                      label=\"2\"\n                      type={type}\n                      id={`inline-${type}-2`}\n                    />\n                    <Form.Check\n                      inline\n                      disabled\n                      label=\"3 (disabled)\"\n                      type={type}\n                      id={`inline-${type}-3`}\n                    />\n                  </div>\n                ))}\n              </Form>\n            </KTCodeExample>\n\n            <KTCodeExample\n              jsCode={jsCode8}\n              beforeCodeTitle=\"Customizing FormCheck rendering\"\n            >\n              <span className=\"mb-3\">\n                When you need tighter control, or want to customize how the{\" \"}\n                <code>FormCheck</code> component renders, it may better to use\n                it's constituent parts directly.\n              </span>\n              <div>\n                By provided <code>children</code> to the <code>FormCheck</code>{\" \"}\n                you can forgo the default rendering and handle it yourself.\n              </div>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <Form>\n                {[\"checkbox\", \"radio\"].map(type => (\n                  <div key={type} className=\"mb-3\">\n                    <Form.Check type={type} id={`check-api-${type}`}>\n                      <Form.Check.Input type={type} isValid />\n                      <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\n                      <Form.Control.Feedback type=\"valid\">\n                        You did it!\n                      </Form.Control.Feedback>\n                    </Form.Check>\n                  </div>\n                ))}\n              </Form>\n            </KTCodeExample>\n\n            <KTCodeExample jsCode={jsCode10} beforeCodeTitle=\"Form grid\">\n              <span>\n                More complex forms can be built using the grid components. Use\n                these for form layouts that require multiple columns, varied\n                widths, and additional alignment options.\n              </span>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <Form>\n                <Row>\n                  <Col>\n                    <Form.Control placeholder=\"First name\" />\n                  </Col>\n                  <Col>\n                    <Form.Control placeholder=\"Last name\" />\n                  </Col>\n                </Row>\n              </Form>\n            </KTCodeExample>\n\n            <KTCodeExample\n              jsCode={jsCode12}\n              beforeCodeTitle=\"Horizontal forms\"\n              codeBlockHeight=\"400px\"\n            >\n              <span>\n                You may also swap <code>&lt;Row&gt;</code> for{\" \"}\n                <code>&lt;Form.Row&gt;</code>, a variation of the standard grid\n                row that overrides the default column gutters for tighter and\n                more compact layouts.\n              </span>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <Form>\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                  <Form.Label column sm={2}>\n                    Email\n                  </Form.Label>\n                  <Col sm={10}>\n                    <Form.Control type=\"email\" placeholder=\"Email\" />\n                  </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                  <Form.Label column sm={2}>\n                    Password\n                  </Form.Label>\n                  <Col sm={10}>\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\n                  </Col>\n                </Form.Group>\n                <fieldset>\n                  <Form.Group as={Row}>\n                    <Form.Label as=\"legend\" column sm={2}>\n                      Radios\n                    </Form.Label>\n                    <Col sm={10}>\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"first radio\"\n                        name=\"formHorizontalRadios\"\n                        id=\"formHorizontalRadios1\"\n                      />\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"second radio\"\n                        name=\"formHorizontalRadios\"\n                        id=\"formHorizontalRadios2\"\n                      />\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"third radio\"\n                        name=\"formHorizontalRadios\"\n                        id=\"formHorizontalRadios3\"\n                      />\n                    </Col>\n                  </Form.Group>\n                </fieldset>\n                <Form.Group as={Row} controlId=\"formHorizontalCheck\">\n                  <Col sm={{ span: 10, offset: 2 }}>\n                    <Form.Check label=\"Remember me\" />\n                  </Col>\n                </Form.Group>\n\n                <Form.Group as={Row}>\n                  <Col sm={{ span: 10, offset: 2 }}>\n                    <Button type=\"submit\">Sign in</Button>\n                  </Col>\n                </Form.Group>\n              </Form>\n            </KTCodeExample>\n\n            <KTCodeExample jsCode={jsCode16} beforeCodeTitle=\"Inline\">\n              <Form>\n                {[\"checkbox\", \"radio\"].map(type => (\n                  <div key={`custom-inline-${type}`} className=\"mb-3\">\n                    <Form.Check\n                      custom\n                      inline\n                      label=\"1\"\n                      type={type}\n                      id={`custom-inline-${type}-1`}\n                    />\n                    <Form.Check\n                      custom\n                      inline\n                      label=\"2\"\n                      type={type}\n                      id={`custom-inline-${type}-2`}\n                    />\n                    <Form.Check\n                      custom\n                      inline\n                      disabled\n                      label=\"3 (disabled)\"\n                      type={type}\n                      id={`custom-inline-${type}-3`}\n                    />\n                  </div>\n                ))}\n              </Form>\n            </KTCodeExample>\n\n            <KTCodeExample\n              jsCode={jsCode15}\n              beforeCodeTitle=\"Checkboxes and radios\"\n            >\n              <span>\n                Custom checkbox and radio styles are achieved with a resourceful\n                use of the <code>:checked</code> selector and{\" \"}\n                <code>:after</code> psuedo elements, but are Structurally\n                similar to the default <code>FormCheck</code>.\n              </span>\n              <div className=\"separator separator-dashed my-7\"></div>\n              <Form>\n                {[\"checkbox\", \"radio\"].map(type => (\n                  <div key={`custom-${type}`} className=\"mb-3\">\n                    <Form.Check\n                      custom\n                      type={type}\n                      id={`custom-${type}`}\n                      label={`Check this custom ${type}`}\n                    />\n\n                    <Form.Check\n                      custom\n                      disabled\n                      type={type}\n                      label={`disabled ${type}`}\n                      id={`disabled-custom-${type}`}\n                    />\n                  </div>\n                ))}\n              </Form>\n            </KTCodeExample>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst jsCode1 = `\n<Form>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicChecbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n`;\nconst jsCode2 = `\n<Form>\n  <Form.Group controlId=\"exampleForm.ControlInput1\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n    <Form.Label>Example select</Form.Label>\n    <Form.Control as=\"select\">\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlSelect2\">\n    <Form.Label>Example multiple select</Form.Label>\n    <Form.Control as=\"select\" multiple>\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" />\n  </Form.Group>\n</Form>\n`;\nconst jsCode3 = `\n<>\n  <Form.Control size=\"lg\" type=\"text\" placeholder=\"Large text\" />\n  <br />\n  <Form.Control type=\"text\" placeholder=\"Normal text\" />\n  <br />\n  <Form.Control size=\"sm\" type=\"text\" placeholder=\"Small text\" />\n</>\n`;\nconst jsCode4 = `\n<Form>\n  <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n    <Form.Label column sm=\"2\">\n      Email\n    </Form.Label>\n    <Col sm=\"10\">\n      <Form.Control plaintext readOnly defaultValue=\"email@example.com\" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n    <Form.Label column sm=\"2\">\n      Password\n    </Form.Label>\n    <Col sm=\"10\">\n      <Form.Control type=\"password\" placeholder=\"Password\" />\n    </Col>\n  </Form.Group>\n</Form>\n`;\nconst jsCode5 = `\n<Form>\n  {['checkbox', 'radio'].map(type => (\n    <div key={\\`default-\\${type}\\`} className=\"mb-3\">\n      <Form.Check \n        type={type}\n        id={\\`default-\\${type}\\`}\n        label={\\`default \\${type}\\`}\n      />\n\n      <Form.Check\n        disabled\n        type={type}\n        label={\\`disabled \\${type}\\`}\n        id={\\`disabled-default-\\${type}\\`}\n      />\n    </div>\n  ))}\n</Form>\n`;\nconst jsCode6 = `\n<Form>\n  {['checkbox', 'radio'].map(type => (\n    <div key={\\`inline-\\${type}\\`} className=\"mb-3\">\n      <Form.Check inline label=\"1\" type={type} id={\\`inline-\\${type}-1\\`} />\n      <Form.Check inline label=\"2\" type={type} id={\\`inline-\\${type}-2\\`} />\n      <Form.Check\n        inline\n        disabled\n        label=\"3 (disabled)\"\n        type={type}\n        id={\\`inline-\\${type}-3\\`}\n      />\n    </div>\n  ))}\n</Form>\n`;\nconst jsCode7 = `\n<>\n  <Form.Check aria-label=\"option 1\" />\n  <Form.Check type=\"radio\" aria-label=\"radio 1\" />\n</>\n`;\nconst jsCode8 = `\n<Form>\n  {['checkbox', 'radio'].map(type => (\n    <div key={type} className=\"mb-3\">\n      <Form.Check type={type} id={\\`check-api-\\${type}\\`}>\n        <Form.Check.Input type={type} isValid />\n        <Form.Check.Label>{\\`Custom api \\${type}\\`}</Form.Check.Label>\n        <Form.Control.Feedback type=\"valid\">You did it!</Form.Control.Feedback>\n      </Form.Check>\n    </div>\n  ))}\n</Form>\n`;\nconst jsCode9 = `\n<Form>\n  <Form.Group controlId=\"formGroupEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n  </Form.Group>\n  <Form.Group controlId=\"formGroupPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n</Form>\n`;\nconst jsCode10 = `\n<Form>\n  <Row>\n    <Col>\n      <Form.Control placeholder=\"First name\" />\n    </Col>\n    <Col>\n      <Form.Control placeholder=\"Last name\" />\n    </Col>\n  </Row>\n</Form>\n`;\nconst jsCode11 = `\n<Form>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridEmail\">\n      <Form.Label>Email</Form.Label>\n      <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridPassword\">\n      <Form.Label>Password</Form.Label>\n      <Form.Control type=\"password\" placeholder=\"Password\" />\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Group controlId=\"formGridAddress1\">\n    <Form.Label>Address</Form.Label>\n    <Form.Control placeholder=\"1234 Main St\" />\n  </Form.Group>\n\n  <Form.Group controlId=\"formGridAddress2\">\n    <Form.Label>Address 2</Form.Label>\n    <Form.Control placeholder=\"Apartment, studio, or floor\" />\n  </Form.Group>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridCity\">\n      <Form.Label>City</Form.Label>\n      <Form.Control />\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridState\">\n      <Form.Label>State</Form.Label>\n      <Form.Control as=\"select\">\n        <option>Choose...</option>\n        <option>...</option>\n      </Form.Control>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formGridZip\">\n      <Form.Label>Zip</Form.Label>\n      <Form.Control />\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Group id=\"formGridCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n`;\nconst jsCode12 = `\n<Form>\n  <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n    <Form.Label column sm={2}>\n      Email\n    </Form.Label>\n    <Col sm={10}>\n      <Form.Control type=\"email\" placeholder=\"Email\" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n    <Form.Label column sm={2}>\n      Password\n    </Form.Label>\n    <Col sm={10}>\n      <Form.Control type=\"password\" placeholder=\"Password\" />\n    </Col>\n  </Form.Group>\n  <fieldset>\n    <Form.Group as={Row}>\n      <Form.Label as=\"legend\" column sm={2}>\n        Radios\n      </Form.Label>\n      <Col sm={10}>\n        <Form.Check\n          type=\"radio\"\n          label=\"first radio\"\n          name=\"formHorizontalRadios\"\n          id=\"formHorizontalRadios1\"\n        />\n        <Form.Check\n          type=\"radio\"\n          label=\"second radio\"\n          name=\"formHorizontalRadios\"\n          id=\"formHorizontalRadios2\"\n        />\n        <Form.Check\n          type=\"radio\"\n          label=\"third radio\"\n          name=\"formHorizontalRadios\"\n          id=\"formHorizontalRadios3\"\n        />\n      </Col>\n    </Form.Group>\n  </fieldset>\n  <Form.Group as={Row} controlId=\"formHorizontalCheck\">\n    <Col sm={{ span: 10, offset: 2 }}>\n      <Form.Check label=\"Remember me\" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row}>\n    <Col sm={{ span: 10, offset: 2 }}>\n      <Button type=\"submit\">Sign in</Button>\n    </Col>\n  </Form.Group>\n</Form>\n`;\nconst jsCode13 = `\nclass FormExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { validated: false };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.setState({ validated: true });\n  }\n\n  render() {\n    const { validated } = this.state;\n    return (\n      <Form\n        noValidate\n        validated={validated}\n        onSubmit={e => this.handleSubmit(e)}\n      >\n        <Form.Row>\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n            <Form.Label>First name</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"First name\"\n              defaultValue=\"Mark\"\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n            <Form.Label>Last name</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Last name\"\n              defaultValue=\"Otto\"\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\n            <Form.Label>Username</Form.Label>\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                aria-describedby=\"inputGroupPrepend\"\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please choose a username.\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\n            <Form.Label>City</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"City\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid city.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\n            <Form.Label>State</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"State\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid state.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\n            <Form.Label>Zip</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Zip\" required />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid zip.\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n        <Form.Group>\n          <Form.Check\n            required\n            label=\"Agree to terms and conditions\"\n            feedback=\"You must agree before submitting.\"\n          />\n        </Form.Group>\n        <Button type=\"submit\">Submit form</Button>\n      </Form>\n    );\n  }\n}\n\nrender(<FormExample />);\n`;\n\nconst jsCode15 = `\n<Form>\n  {['checkbox', 'radio'].map(type => (\n    <div key={\\`custom-\\${type}\\`} className=\"mb-3\">\n      <Form.Check \n        custom\n        type={type}\n        id={\\`custom-\\${type}\\`}\n        label={\\`Check this custom \\${type}\\`}\n      />\n\n      <Form.Check\n        custom\n        disabled\n        type={type}\n        label={\\`disabled \\${type}\\`}\n        id={\\`disabled-custom-\\${type}\\`}\n      />\n    </div>\n  ))}\n</Form>\n`;\nconst jsCode16 = `\n<Form>\n  {['checkbox', 'radio'].map(type => (\n    <div key={\\`custom-inline-\\${type}\\`} className=\"mb-3\">\n      <Form.Check\n        custom\n        inline\n        label=\"1\"\n        type={type}\n        id={\\`custom-inline-\\${type}-1\\`}\n      />\n      <Form.Check\n        custom\n        inline\n        label=\"2\"\n        type={type}\n        id={\\`custom-inline-\\${type}-2\\`}\n      />\n      <Form.Check\n        custom\n        inline\n        disabled\n        label=\"3 (disabled)\"\n        type={type}\n        id={\\`custom-inline-\\${type}-3\\`}\n      />\n    </div>\n  ))}\n</Form>\n`;\n"]},"metadata":{},"sourceType":"module"}