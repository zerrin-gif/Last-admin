{"ast":null,"code":"import _defineProperty from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/inputs/TextFieldsExamplesPage.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { TextField, MenuItem, FormControl, Input, InputLabel, FormHelperText, OutlinedInput, FilledInput, InputBase, Paper, IconButton, Divider, InputAdornment, Grid } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { fade, withStyles, makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    }\n  };\n});\nvar currencies = [{\n  value: \"USD\",\n  label: \"$\"\n}, {\n  value: \"EUR\",\n  label: \"€\"\n}, {\n  value: \"BTC\",\n  label: \"฿\"\n}, {\n  value: \"JPY\",\n  label: \"¥\"\n}]; // Example 2\n\nvar useStyles2 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    dense: {\n      marginTop: theme.spacing(2)\n    },\n    menu: {\n      width: 200\n    }\n  };\n}); // Example 3\n\nvar useStyles3 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    dense: {\n      marginTop: 16\n    },\n    menu: {\n      width: 200\n    }\n  };\n}); // Example 4\n\nvar useStyles4 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    formControl: {\n      margin: theme.spacing(1)\n    }\n  };\n}); // Example 5\n\nvar useStyles5 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    input: {\n      margin: theme.spacing(1)\n    }\n  };\n}); // Example 6\n\nvar useStyles6 = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    }\n  };\n}); // Example 7\n\nvar CssTextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"green\"\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"red\"\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"yellow\"\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\"\n      }\n    }\n  }\n})(TextField);\nvar BootstrapInput = withStyles(function (theme) {\n  return {\n    root: {\n      \"label + &\": {\n        marginTop: theme.spacing(3)\n      }\n    },\n    input: {\n      borderRadius: 4,\n      position: \"relative\",\n      backgroundColor: theme.palette.common.white,\n      border: \"1px solid #ced4da\",\n      fontSize: 16,\n      width: \"auto\",\n      padding: \"10px 12px\",\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n      \"&:focus\": {\n        boxShadow: \"\".concat(fade(theme.palette.primary.main, 0.25), \" 0 0 0 0.2rem\"),\n        borderColor: theme.palette.primary.main\n      }\n    }\n  };\n})(InputBase);\nvar useStylesReddit = makeStyles(function (theme) {\n  return {\n    root: {\n      border: \"1px solid #e2e2e1\",\n      overflow: \"hidden\",\n      borderRadius: 4,\n      backgroundColor: \"#fcfcfb\",\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      \"&:hover\": {\n        backgroundColor: \"#fff\"\n      },\n      \"&$focused\": {\n        backgroundColor: \"#fff\",\n        boxShadow: \"\".concat(fade(theme.palette.primary.main, 0.25), \" 0 0 0 2px\"),\n        borderColor: theme.palette.primary.main\n      }\n    },\n    focused: {}\n  };\n});\n\nfunction RedditTextField(props) {\n  var classes = useStylesReddit();\n  return /*#__PURE__*/React.createElement(TextField, Object.assign({\n    InputProps: {\n      classes: classes,\n      disableUnderline: true\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }\n  }));\n}\n\nvar useStyles7 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    margin: {\n      margin: theme.spacing(1)\n    }\n  };\n});\nvar theme7 = createMuiTheme({\n  palette: {\n    primary: green\n  }\n}); // Example 8\n\nvar useStyles8 = makeStyles({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 400\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}); // Example 9\n\nvar ranges = [{\n  value: \"0-20\",\n  label: \"0 to 20\"\n}, {\n  value: \"21-50\",\n  label: \"21 to 50\"\n}, {\n  value: \"51-100\",\n  label: \"51 to 100\"\n}];\nvar useStyles9 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3)\n    },\n    textField: {\n      flexBasis: 200\n    }\n  };\n}); // Example 10\n\nvar useStyles10 = makeStyles(function (theme) {\n  return {\n    margin: {\n      margin: theme.spacing(1)\n    }\n  };\n}); // Example 11\n\nvar useStyles11 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    textField: {\n      flexBasis: 200\n    }\n  };\n}); // Example 12\n\nvar useStyles12 = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    textField: {\n      flexBasis: 200\n    }\n  };\n});\nexport default function TextFieldsExamplesPage() {\n  var _this = this;\n\n  // Example 1\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    name: \"Cat in the Hat\",\n    age: \"\",\n    multiline: \"Controlled\",\n    currency: \"EUR\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value)));\n    };\n  }; // Example 2\n\n\n  var classes2 = useStyles2();\n\n  var _React$useState3 = React.useState({\n    name: \"Cat in the Hat\",\n    age: \"\",\n    multiline: \"Controlled\",\n    currency: \"EUR\"\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      values2 = _React$useState4[0],\n      setValues2 = _React$useState4[1];\n\n  var handleChange2 = function handleChange2(name) {\n    return function (event) {\n      setValues2(_objectSpread(_objectSpread({}, values2), {}, _defineProperty({}, name, event.target.value)));\n    };\n  }; // Example 3\n\n\n  var classes3 = useStyles3();\n\n  var _React$useState5 = React.useState({\n    name: \"Cat in the Hat\",\n    age: \"\",\n    multiline: \"Controlled\",\n    currency: \"EUR\"\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      values3 = _React$useState6[0],\n      setValues3 = _React$useState6[1];\n\n  var handleChange3 = function handleChange3(name) {\n    return function (event) {\n      setValues3(_objectSpread(_objectSpread({}, values3), {}, _defineProperty({}, name, event.target.value)));\n    };\n  }; // Example 4\n\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      labelWidth4 = _React$useState8[0],\n      setLabelWidth4 = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"Composed TextField\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      name4 = _React$useState10[0],\n      setName4 = _React$useState10[1];\n\n  var labelRef4 = React.useRef(null);\n  var classes4 = useStyles4();\n  React.useEffect(function () {\n    setLabelWidth4(labelRef4.current.offsetWidth);\n  }, []);\n\n  function handleChange4(event) {\n    setName4(event.target.value);\n  } // Example 5\n\n\n  var classes5 = useStyles5(); // Example 6\n\n  var classes6 = useStyles6(); // Example 7\n\n  var classes7 = useStyles7(); // Example 8\n\n  var classes8 = useStyles8(); // Example 9\n\n  var classes9 = useStyles9();\n\n  var _React$useState11 = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      values9 = _React$useState12[0],\n      setValues9 = _React$useState12[1];\n\n  var handleChange9 = function handleChange9(prop) {\n    return function (event) {\n      setValues9(_objectSpread(_objectSpread({}, values9), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  };\n\n  var handleClickShowPassword9 = function handleClickShowPassword9() {\n    setValues9(_objectSpread(_objectSpread({}, values9), {}, {\n      showPassword: !values9.showPassword\n    }));\n  }; // Example 10\n\n\n  var classes10 = useStyles10(); // Example 11\n\n  var classes11 = useStyles11();\n\n  var _React$useState13 = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false\n  }),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      values11 = _React$useState14[0],\n      setValues11 = _React$useState14[1];\n\n  var handleChange11 = function handleChange11(prop) {\n    return function (event) {\n      setValues11(_objectSpread(_objectSpread({}, values11), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  };\n\n  var handleClickShowPassword11 = function handleClickShowPassword11() {\n    setValues11(_objectSpread(_objectSpread({}, values11), {}, {\n      showPassword: !values11.showPassword\n    }));\n  }; // Example 12\n\n\n  var classes12 = useStyles12();\n\n  var _React$useState15 = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false\n  }),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      values12 = _React$useState16[0],\n      setValues12 = _React$useState16[1];\n\n  var handleChange12 = function handleChange12(prop) {\n    return function (event) {\n      setValues12(_objectSpread(_objectSpread({}, values12), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  };\n\n  var handleClickShowPassword12 = function handleClickShowPassword12() {\n    setValues(_objectSpread(_objectSpread({}, values12), {}, {\n      showPassword: !values12.showPassword\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 9\n    }\n  }, \"Text fields let users enter and edit text.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/text-fields/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"TextField\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }\n  }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 19\n    }\n  }, \"TextField\"), \" wrapper component is a complete form control including a label, input and help text.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-name\",\n    label: \"Name\",\n    className: classes.textField,\n    value: values.name,\n    onChange: handleChange(\"name\"),\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-uncontrolled\",\n    label: \"Uncontrolled\",\n    defaultValue: \"foo\",\n    className: classes.textField,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required\",\n    label: \"Required\",\n    defaultValue: \"Hello World\",\n    className: classes.textField,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: true,\n    id: \"standard-error\",\n    label: \"Error\",\n    defaultValue: \"Hello World\",\n    className: classes.textField,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    id: \"standard-disabled\",\n    label: \"Disabled\",\n    defaultValue: \"Hello World\",\n    className: classes.textField,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-password-input\",\n    label: \"Password\",\n    className: classes.textField,\n    type: \"password\",\n    autoComplete: \"current-password\",\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-read-only-input\",\n    label: \"Read Only\",\n    defaultValue: \"Hello World\",\n    className: classes.textField,\n    margin: \"normal\",\n    InputProps: {\n      readOnly: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-dense\",\n    label: \"Dense\",\n    className: clsx(classes.textField, classes.dense),\n    margin: \"dense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-multiline-flexible\",\n    label: \"Multiline\",\n    multiline: true,\n    rowsMax: \"4\",\n    value: values.multiline,\n    onChange: handleChange(\"multiline\"),\n    className: classes.textField,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-multiline-static\",\n    label: \"Multiline\",\n    multiline: true,\n    rows: \"4\",\n    defaultValue: \"Default Value\",\n    className: classes.textField,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-helperText\",\n    label: \"Helper text\",\n    defaultValue: \"Default Value\",\n    className: classes.textField,\n    helperText: \"Some important text\",\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-with-placeholder\",\n    label: \"With placeholder\",\n    placeholder: \"Placeholder\",\n    className: classes.textField,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-textarea\",\n    label: \"With placeholder multiline\",\n    placeholder: \"Placeholder\",\n    multiline: true,\n    className: classes.textField,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-number\",\n    label: \"Number\",\n    value: values.age,\n    onChange: handleChange(\"age\"),\n    type: \"number\",\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-search\",\n    label: \"Search field\",\n    type: \"search\",\n    className: classes.textField,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-select-currency\",\n    select: true,\n    label: \"Select\",\n    className: classes.textField,\n    value: values.currency,\n    onChange: handleChange(\"currency\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    helperText: \"Please select your currency\",\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 15\n    }\n  }, currencies.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 19\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-select-currency-native\",\n    select: true,\n    label: \"Native select\",\n    className: classes.textField,\n    value: values.currency,\n    onChange: handleChange(\"currency\"),\n    SelectProps: {\n      native: true,\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    helperText: \"Please select your currency\",\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 15\n    }\n  }, currencies.map(function (option) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 19\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-full-width\",\n    label: \"Label\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"Placeholder\",\n    helperText: \"Full width!\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-bare\",\n    className: classes.textField,\n    defaultValue: \"Bare\",\n    margin: \"normal\",\n    inputProps: {\n      \"aria-label\": \"bare\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode3,\n    beforeCodeTitle: \"Filled\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 15\n    }\n  }, \"TextField\"), \" supports filled styling.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes3.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-name\",\n    label: \"Name\",\n    className: classes3.textField,\n    value: values3.name,\n    onChange: handleChange(\"name\"),\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-uncontrolled\",\n    label: \"Uncontrolled\",\n    defaultValue: \"foo\",\n    className: classes3.textField,\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"filled-required\",\n    label: \"Required\",\n    defaultValue: \"Hello World\",\n    className: classes3.textField,\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: true,\n    id: \"filled-error\",\n    label: \"Error\",\n    defaultValue: \"Hello World\",\n    className: classes3.textField,\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    id: \"filled-disabled\",\n    label: \"Disabled\",\n    defaultValue: \"Hello World\",\n    className: classes3.textField,\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-email-input\",\n    label: \"Email\",\n    className: classes3.textField,\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-password-input\",\n    label: \"Password\",\n    className: classes3.textField,\n    type: \"password\",\n    autoComplete: \"current-password\",\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-read-only-input\",\n    label: \"Read Only\",\n    defaultValue: \"Hello World\",\n    className: classes3.textField,\n    margin: \"normal\",\n    InputProps: {\n      readOnly: true\n    },\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-dense\",\n    label: \"Dense\",\n    className: clsx(classes3.textField, classes3.dense),\n    margin: \"dense\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-dense-multiline\",\n    label: \"Dense multiline\",\n    className: clsx(classes3.textField, classes3.dense),\n    margin: \"dense\",\n    variant: \"filled\",\n    multiline: true,\n    rowsMax: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-multiline-flexible\",\n    label: \"Multiline\",\n    multiline: true,\n    rowsMax: \"4\",\n    value: values3.multiline,\n    onChange: handleChange3(\"multiline\"),\n    className: classes3.textField,\n    margin: \"normal\",\n    helperText: \"hello\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-multiline-static\",\n    label: \"Multiline\",\n    multiline: true,\n    rows: \"4\",\n    defaultValue: \"Default Value\",\n    className: classes3.textField,\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-helperText\",\n    label: \"Helper text\",\n    defaultValue: \"Default Value\",\n    className: classes3.textField,\n    helperText: \"Some important text\",\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-with-placeholder\",\n    label: \"With placeholder\",\n    placeholder: \"Placeholder\",\n    className: classes3.textField,\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-textarea\",\n    label: \"Multiline Placeholder\",\n    placeholder: \"Placeholder\",\n    multiline: true,\n    className: classes3.textField,\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-number\",\n    label: \"Number\",\n    value: values3.age,\n    onChange: handleChange3(\"age\"),\n    type: \"number\",\n    className: classes3.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-search\",\n    label: \"Search field\",\n    type: \"search\",\n    className: classes3.textField,\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-select-currency\",\n    select: true,\n    label: \"Select\",\n    className: classes3.textField,\n    value: values3.currency,\n    onChange: handleChange3(\"currency\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes3.menu\n      }\n    },\n    helperText: \"Please select your currency\",\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 15\n    }\n  }, currencies.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 19\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-select-currency-native\",\n    select: true,\n    label: \"Native select\",\n    className: classes3.textField,\n    value: values3.currency,\n    onChange: handleChange3(\"currency\"),\n    SelectProps: {\n      native: true,\n      MenuProps: {\n        className: classes3.menu\n      }\n    },\n    helperText: \"Please select your currency\",\n    margin: \"normal\",\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 15\n    }\n  }, currencies.map(function (option) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 19\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-full-width\",\n    label: \"Label\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"Placeholder\",\n    helperText: \"Full width!\",\n    fullWidth: true,\n    margin: \"normal\",\n    variant: \"filled\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-bare\",\n    className: classes3.textField,\n    defaultValue: \"Bare\",\n    margin: \"normal\",\n    variant: \"filled\",\n    inputProps: {\n      \"aria-label\": \"bare\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode5,\n    beforeCodeTitle: \"Inputs\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes5.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    defaultValue: \"Hello world\",\n    className: classes5.input,\n    inputProps: {\n      \"aria-label\": \"Description\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Placeholder\",\n    className: classes5.input,\n    inputProps: {\n      \"aria-label\": \"Description\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 922,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    value: \"Disabled\",\n    className: classes5.input,\n    disabled: true,\n    inputProps: {\n      \"aria-label\": \"Description\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: \"Error\",\n    className: classes5.input,\n    error: true,\n    inputProps: {\n      \"aria-label\": \"Description\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode7,\n    beforeCodeTitle: \"Customized inputs\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 13\n    }\n  }, \"Here are some examples of customizing the component.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes7.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CssTextField, {\n    className: classes7.margin,\n    id: \"custom-css-standard-input\",\n    label: \"Custom CSS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CssTextField, {\n    className: classes7.margin,\n    label: \"Custom CSS\",\n    variant: \"outlined\",\n    id: \"custom-css-outlined-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 966,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes7.margin,\n    label: \"ThemeProvider\",\n    id: \"mui-theme-provider-standard-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: classes7.margin,\n    label: \"ThemeProvider\",\n    variant: \"outlined\",\n    id: \"mui-theme-provider-outlined-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes7.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: \"bootstrap-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 17\n    }\n  }, \"Bootstrap\"), /*#__PURE__*/React.createElement(BootstrapInput, {\n    defaultValue: \"react-bootstrap\",\n    id: \"bootstrap-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(RedditTextField, {\n    label: \"Reddit\",\n    className: classes7.margin,\n    defaultValue: \"react-reddit\",\n    variant: \"filled\",\n    id: \"reddit-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputBase, {\n    className: classes7.margin,\n    defaultValue: \"Naked input\",\n    inputProps: {\n      \"aria-label\": \"naked\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode9,\n    beforeCodeTitle: \"Input Adornments\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1002,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 15\n    }\n  }, \"Input\"), \" allows the provision of\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 15\n    }\n  }, \"InputAdornment\"), \". These can be used to add a prefix, a suffix or an action to an input. For instance, you can use an icon button to hide or reveal the password.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes9.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"With normal TextField\",\n    id: \"simple-start-adornment\",\n    className: clsx(classes9.margin, classes9.textField),\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 21\n        }\n      }, \"Kg\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    select: true,\n    label: \"With Select\",\n    className: clsx(classes9.margin, classes9.textField),\n    value: values9.weightRange,\n    onChange: handleChange9(\"weightRange\"),\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 21\n        }\n      }, \"Kg\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1025,\n      columnNumber: 15\n    }\n  }, ranges.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 19\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes9.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"adornment-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1044,\n      columnNumber: 17\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"adornment-amount\",\n    value: values9.amount,\n    onChange: handleChange9(\"amount\"),\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1050,\n        columnNumber: 21\n      }\n    }, \"$\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1045,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    className: clsx(classes9.margin, classes9.withoutLabel, classes9.textField),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"adornment-weight\",\n    value: values9.weight,\n    onChange: handleChange9(\"weight\"),\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 21\n      }\n    }, \"Kg\"),\n    \"aria-describedby\": \"weight-helper-text\",\n    inputProps: {\n      \"aria-label\": \"Weight\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"weight-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1073,\n      columnNumber: 17\n    }\n  }, \"Weight\")), /*#__PURE__*/React.createElement(FormControl, {\n    className: clsx(classes9.margin, classes9.textField),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"adornment-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"adornment-password\",\n    type: values9.showPassword ? \"text\" : \"password\",\n    value: values9.password,\n    onChange: handleChange9(\"password\"),\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"Toggle password visibility\",\n      onClick: handleClickShowPassword9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 23\n      }\n    }, values9.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 27\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1079,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode11,\n    beforeCodeTitle: \"Filled Input Adornments\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: classes11.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-simple-start-adornment\",\n    className: clsx(classes11.margin, classes11.textField),\n    variant: \"filled\",\n    label: \"With filled TextField\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 21\n        }\n      }, \"Kg\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1109,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    select: true,\n    className: clsx(classes11.margin, classes11.textField),\n    variant: \"filled\",\n    label: \"With Select\",\n    value: values11.weightRange,\n    onChange: handleChange11(\"weightRange\"),\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 21\n        }\n      }, \"Kg\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1120,\n      columnNumber: 15\n    }\n  }, ranges.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1134,\n        columnNumber: 19\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-adornment-amount\",\n    className: clsx(classes11.margin, classes11.textField),\n    variant: \"filled\",\n    label: \"Amount\",\n    value: values11.amount,\n    onChange: handleChange11(\"amount\"),\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1148,\n          columnNumber: 21\n        }\n      }, \"$\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1139,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-adornment-weight\",\n    className: clsx(classes11.margin, classes11.textField),\n    variant: \"filled\",\n    label: \"Weight\",\n    value: values11.weight,\n    onChange: handleChange11(\"weight\"),\n    helperText: \"Weight\",\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 21\n        }\n      }, \"Kg\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1152,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-adornment-password\",\n    className: clsx(classes11.margin, classes11.textField),\n    variant: \"filled\",\n    type: values11.showPassword ? \"text\" : \"password\",\n    label: \"Password\",\n    value: values11.password,\n    onChange: handleChange11(\"password\"),\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"Toggle password visibility\",\n        onClick: handleClickShowPassword11,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 23\n        }\n      }, values11.showPassword ? /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 27\n        }\n      }) : /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 27\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1166,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Outlined\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1202,\n      columnNumber: 15\n    }\n  }, \"TextField\"), \" supports outlined styling.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes2.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-name\",\n    label: \"Name\",\n    className: classes2.textField,\n    value: values2.name,\n    onChange: handleChange2(\"name\"),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1206,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-uncontrolled\",\n    label: \"Uncontrolled\",\n    defaultValue: \"foo\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    label: \"Required\",\n    defaultValue: \"Hello World\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1223,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: true,\n    id: \"outlined-error\",\n    label: \"Error\",\n    defaultValue: \"Hello World\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1232,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    id: \"outlined-disabled\",\n    label: \"Disabled\",\n    defaultValue: \"Hello World\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1241,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-email-input\",\n    label: \"Email\",\n    className: classes2.textField,\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1250,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-password-input\",\n    label: \"Password\",\n    className: classes2.textField,\n    type: \"password\",\n    autoComplete: \"current-password\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1260,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-read-only-input\",\n    label: \"Read Only\",\n    defaultValue: \"Hello World\",\n    className: classes2.textField,\n    margin: \"normal\",\n    InputProps: {\n      readOnly: true\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1269,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-dense\",\n    label: \"Dense\",\n    className: clsx(classes2.textField, classes2.dense),\n    margin: \"dense\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1280,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-dense-multiline\",\n    label: \"Dense multiline\",\n    className: clsx(classes2.textField, classes2.dense),\n    margin: \"dense\",\n    variant: \"outlined\",\n    multiline: true,\n    rowsMax: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1287,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-flexible\",\n    label: \"Multiline\",\n    multiline: true,\n    rowsMax: \"4\",\n    value: values2.multiline,\n    onChange: handleChange2(\"multiline\"),\n    className: classes2.textField,\n    margin: \"normal\",\n    helperText: \"hello\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1296,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Multiline\",\n    multiline: true,\n    rows: \"4\",\n    defaultValue: \"Default Value\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1308,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-helperText\",\n    label: \"Helper text\",\n    defaultValue: \"Default Value\",\n    className: classes2.textField,\n    helperText: \"Some important text\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1318,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-with-placeholder\",\n    label: \"With placeholder\",\n    placeholder: \"Placeholder\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1327,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-textarea\",\n    label: \"Multiline Placeholder\",\n    placeholder: \"Placeholder\",\n    multiline: true,\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1335,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-number\",\n    label: \"Number\",\n    value: values2.age,\n    onChange: handleChange2(\"age\"),\n    type: \"number\",\n    className: classes2.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1344,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-search\",\n    label: \"Search field\",\n    type: \"search\",\n    className: classes2.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1357,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"Select\",\n    className: classes2.textField,\n    value: values2.currency,\n    onChange: handleChange2(\"currency\"),\n    SelectProps: {\n      MenuProps: {\n        className: classes2.menu\n      }\n    },\n    helperText: \"Please select your currency\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1365,\n      columnNumber: 15\n    }\n  }, currencies.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1382,\n        columnNumber: 19\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-currency-native\",\n    select: true,\n    label: \"Native select\",\n    className: classes2.textField,\n    value: values2.currency,\n    onChange: handleChange(\"currency\"),\n    SelectProps: {\n      native: true,\n      MenuProps: {\n        className: classes2.menu\n      }\n    },\n    helperText: \"Please select your currency\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1387,\n      columnNumber: 15\n    }\n  }, currencies.map(function (option) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1405,\n        columnNumber: 19\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-full-width\",\n    label: \"Label\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"Placeholder\",\n    helperText: \"Full width!\",\n    fullWidth: true,\n    margin: \"normal\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1410,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-bare\",\n    className: classes2.textField,\n    defaultValue: \"Bare\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    inputProps: {\n      \"aria-label\": \"bare\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1423,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode4,\n    beforeCodeTitle: \"Components\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1434,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1439,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1440,\n      columnNumber: 15\n    }\n  }, \"TextField\"), \" is composed of smaller components (\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1441,\n      columnNumber: 15\n    }\n  }, \"FormControl\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1441,\n      columnNumber: 41\n    }\n  }, \"Input\"), \",\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1442,\n      columnNumber: 15\n    }\n  }, \"FilledInput\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1442,\n      columnNumber: 41\n    }\n  }, \"InputLabel\"), \",\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1443,\n      columnNumber: 15\n    }\n  }, \"OutlinedInput\"), \", and \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1443,\n      columnNumber: 47\n    }\n  }, \"FormHelperText\"), \" ) that you can leverage directly to significantly customize your form inputs.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1447,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes4.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1448,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes4.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1449,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1450,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"component-simple\",\n    value: name4,\n    onChange: handleChange4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1451,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes4.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1457,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"component-helper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1458,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"component-helper\",\n    value: name4,\n    onChange: handleChange4,\n    \"aria-describedby\": \"component-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1459,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"component-helper-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1465,\n      columnNumber: 17\n    }\n  }, \"Some important helper text\")), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes4.formControl,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1469,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"component-disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1470,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"component-disabled\",\n    value: name4,\n    onChange: handleChange4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1471,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1476,\n      columnNumber: 17\n    }\n  }, \"Disabled\")), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes4.formControl,\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1478,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"component-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1479,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"component-error\",\n    value: name4,\n    onChange: handleChange4,\n    \"aria-describedby\": \"component-error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1480,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"component-error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1486,\n      columnNumber: 17\n    }\n  }, \"Error\")), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes4.formControl,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1488,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    ref: labelRef4,\n    htmlFor: \"component-outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1489,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"component-outlined\",\n    value: name4,\n    onChange: handleChange4,\n    labelWidth: labelWidth4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1492,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes4.formControl,\n    variant: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1499,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"component-filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1500,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(FilledInput, {\n    id: \"component-filled\",\n    value: name4,\n    onChange: handleChange4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1501,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode6,\n    beforeCodeTitle: \"Layout\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1510,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1515,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1516,\n      columnNumber: 15\n    }\n  }, \"TextField\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1516,\n      columnNumber: 39\n    }\n  }, \"FormControl\"), \" allow the specification of \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1517,\n      columnNumber: 32\n    }\n  }, \"margin\"), \" to alter the vertical spacing of inputs. Using \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1518,\n      columnNumber: 32\n    }\n  }, \"none\"), \" (default) will not apply margins to the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1519,\n      columnNumber: 30\n    }\n  }, \"FormControl\"), \", whereas\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1520,\n      columnNumber: 15\n    }\n  }, \"dense\"), \" and \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1520,\n      columnNumber: 38\n    }\n  }, \"normal\"), \" will as well as alter other styles to meet the specification.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1523,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes6.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1524,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"None\",\n    id: \"margin-none\",\n    defaultValue: \"Default Value\",\n    className: classes6.textField,\n    helperText: \"Some important text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1525,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Dense\",\n    id: \"margin-dense\",\n    defaultValue: \"Default Value\",\n    className: classes6.textField,\n    helperText: \"Some important text\",\n    margin: \"dense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1532,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Normal\",\n    id: \"margin-normal\",\n    defaultValue: \"Default Value\",\n    className: classes6.textField,\n    helperText: \"Some important text\",\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1540,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode8,\n    beforeCodeTitle: \"Customized inputs using InputBase\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1551,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1556,\n      columnNumber: 13\n    }\n  }, \"Customization does not stop at CSS, you can use composition to build custom components and give your app a unique feel. Below is an example using the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1559,\n      columnNumber: 36\n    }\n  }, \"InputBase\"), \" component, inspired by Google Maps.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1562,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes8.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1563,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes8.iconButton,\n    \"aria-label\": \"Menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1564,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon-layer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1565,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(InputBase, {\n    className: classes8.input,\n    placeholder: \"Search Google Maps\",\n    inputProps: {\n      \"aria-label\": \"Search Google Maps\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1567,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    className: classes8.iconButton,\n    \"aria-label\": \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1572,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1573,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: classes8.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1575,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    className: classes8.iconButton,\n    \"aria-label\": \"Directions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1576,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-chevron-circle-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1581,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode10,\n    beforeCodeTitle: \"With icon\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1586,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1591,\n      columnNumber: 13\n    }\n  }, \"Icons can be specified as prepended or appended.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1592,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1593,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes10.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1594,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"input-with-icon-adornment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1595,\n      columnNumber: 17\n    }\n  }, \"With a start adornment\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"input-with-icon-adornment\",\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1601,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AccountCircle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1602,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1598,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    className: classes10.margin,\n    id: \"input-with-icon-textfield\",\n    label: \"TextField\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1613,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(AccountCircle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1614,\n          columnNumber: 23\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1607,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes10.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1619,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1620,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1621,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AccountCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1622,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1624,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"input-with-icon-grid\",\n    label: \"With a grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1625,\n      columnNumber: 21\n    }\n  })))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode12,\n    beforeCodeTitle: \"Outlined Input Adornments\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1632,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes12.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1637,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-simple-start-adornment\",\n    className: clsx(classes12.margin, classes12.textField),\n    variant: \"outlined\",\n    label: \"With outlined TextField\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1645,\n          columnNumber: 21\n        }\n      }, \"Kg\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1638,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    select: true,\n    className: clsx(classes12.margin, classes12.textField),\n    variant: \"outlined\",\n    label: \"With Select\",\n    value: values12.weightRange,\n    onChange: handleChange12(\"weightRange\"),\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1658,\n          columnNumber: 21\n        }\n      }, \"Kg\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1649,\n      columnNumber: 15\n    }\n  }, ranges.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1663,\n        columnNumber: 19\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-adornment-amount\",\n    className: clsx(classes12.margin, classes12.textField),\n    variant: \"outlined\",\n    label: \"Amount\",\n    value: values12.amount,\n    onChange: handleChange12(\"amount\"),\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1677,\n          columnNumber: 21\n        }\n      }, \"$\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1668,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-adornment-weight\",\n    className: clsx(classes12.margin, classes12.textField),\n    variant: \"outlined\",\n    label: \"Weight\",\n    value: values12.weight,\n    onChange: handleChange12(\"weight\"),\n    helperText: \"Weight\",\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1691,\n          columnNumber: 21\n        }\n      }, \"Kg\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1681,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-adornment-password\",\n    className: clsx(classes12.margin, classes12.textField),\n    variant: \"outlined\",\n    type: values12.showPassword ? \"text\" : \"password\",\n    label: \"Password\",\n    value: values12.password,\n    onChange: handleChange12(\"password\"),\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1705,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"Toggle password visibility\",\n        onClick: handleClickShowPassword12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1706,\n          columnNumber: 23\n        }\n      }, values12.showPassword ? /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1712,\n          columnNumber: 27\n        }\n      }) : /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1714,\n          columnNumber: 27\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1695,\n      columnNumber: 15\n    }\n  }))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n    width: 200,\\n  },\\n  dense: {\\n    marginTop: 19,\\n  },\\n  menu: {\\n    width: 200,\\n  },\\n}));\\n\\nconst currencies = [\\n  {\\n    value: 'USD',\\n    label: '$',\\n  },\\n  {\\n    value: 'EUR',\\n    label: '\\u20AC',\\n  },\\n  {\\n    value: 'BTC',\\n    label: '\\u0E3F',\\n  },\\n  {\\n    value: 'JPY',\\n    label: '\\xA5',\\n  },\\n];\\n\\nexport default function TextFields() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    name: 'Cat in the Hat',\\n    age: '',\\n    multiline: 'Controlled',\\n    currency: 'EUR',\\n  });\\n\\n  const handleChange = name => event => {\\n    setValues({ ...values, [name]: event.target.value });\\n  };\\n\\n  return (\\n    <form className={classes.container} noValidate autoComplete=\\\"off\\\">\\n      <TextField\\n        id=\\\"standard-name\\\"\\n        label=\\\"Name\\\"\\n        className={classes.textField}\\n        value={values.name}\\n        onChange={handleChange('name')}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-uncontrolled\\\"\\n        label=\\\"Uncontrolled\\\"\\n        defaultValue=\\\"foo\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        required\\n        id=\\\"standard-required\\\"\\n        label=\\\"Required\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        error\\n        id=\\\"standard-error\\\"\\n        label=\\\"Error\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        disabled\\n        id=\\\"standard-disabled\\\"\\n        label=\\\"Disabled\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-password-input\\\"\\n        label=\\\"Password\\\"\\n        className={classes.textField}\\n        type=\\\"password\\\"\\n        autoComplete=\\\"current-password\\\"\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-read-only-input\\\"\\n        label=\\\"Read Only\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        InputProps={{\\n          readOnly: true,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"standard-dense\\\"\\n        label=\\\"Dense\\\"\\n        className={clsx(classes.textField, classes.dense)}\\n        margin=\\\"dense\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-multiline-flexible\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rowsMax=\\\"4\\\"\\n        value={values.multiline}\\n        onChange={handleChange('multiline')}\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-multiline-static\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rows=\\\"4\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-helperText\\\"\\n        label=\\\"Helper text\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-with-placeholder\\\"\\n        label=\\\"With placeholder\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-textarea\\\"\\n        label=\\\"With placeholder multiline\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        multiline\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-number\\\"\\n        label=\\\"Number\\\"\\n        value={values.age}\\n        onChange={handleChange('age')}\\n        type=\\\"number\\\"\\n        className={classes.textField}\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-search\\\"\\n        label=\\\"Search field\\\"\\n        type=\\\"search\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n      />\\n      <TextField\\n        id=\\\"standard-select-currency\\\"\\n        select\\n        label=\\\"Select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n      >\\n        {currencies.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"standard-select-currency-native\\\"\\n        select\\n        label=\\\"Native select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          native: true,\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n      >\\n        {currencies.map(option => (\\n          <option key={option.value} value={option.value}>\\n            {option.label}\\n          </option>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"standard-full-width\\\"\\n        label=\\\"Label\\\"\\n        style={{ margin: 8 }}\\n        placeholder=\\\"Placeholder\\\"\\n        helperText=\\\"Full width!\\\"\\n        fullWidth\\n        margin=\\\"normal\\\"\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"standard-bare\\\"\\n        className={classes.textField}\\n        defaultValue=\\\"Bare\\\"\\n        margin=\\\"normal\\\"\\n        inputProps={{ 'aria-label': 'bare' }}\\n      />\\n    </form>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst currencies = [\\n  {\\n    value: 'USD',\\n    label: '$',\\n  },\\n  {\\n    value: 'EUR',\\n    label: '\\u20AC',\\n  },\\n  {\\n    value: 'BTC',\\n    label: '\\u0E3F',\\n  },\\n  {\\n    value: 'JPY',\\n    label: '\\xA5',\\n  },\\n];\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n  },\\n  dense: {\\n    marginTop: theme.spacing(2),\\n  },\\n  menu: {\\n    width: 200,\\n  },\\n}));\\n\\nexport default function OutlinedTextFields() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    name: 'Cat in the Hat',\\n    age: '',\\n    multiline: 'Controlled',\\n    currency: 'EUR',\\n  });\\n\\n  const handleChange = name => event => {\\n    setValues({ ...values, [name]: event.target.value });\\n  };\\n\\n  return (\\n    <form className={classes.container} noValidate autoComplete=\\\"off\\\">\\n      <TextField\\n        id=\\\"outlined-name\\\"\\n        label=\\\"Name\\\"\\n        className={classes.textField}\\n        value={values.name}\\n        onChange={handleChange('name')}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-uncontrolled\\\"\\n        label=\\\"Uncontrolled\\\"\\n        defaultValue=\\\"foo\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        required\\n        id=\\\"outlined-required\\\"\\n        label=\\\"Required\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        error\\n        id=\\\"outlined-error\\\"\\n        label=\\\"Error\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        disabled\\n        id=\\\"outlined-disabled\\\"\\n        label=\\\"Disabled\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-email-input\\\"\\n        label=\\\"Email\\\"\\n        className={classes.textField}\\n        type=\\\"email\\\"\\n        name=\\\"email\\\"\\n        autoComplete=\\\"email\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-password-input\\\"\\n        label=\\\"Password\\\"\\n        className={classes.textField}\\n        type=\\\"password\\\"\\n        autoComplete=\\\"current-password\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-read-only-input\\\"\\n        label=\\\"Read Only\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        InputProps={{\\n          readOnly: true,\\n        }}\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-dense\\\"\\n        label=\\\"Dense\\\"\\n        className={clsx(classes.textField, classes.dense)}\\n        margin=\\\"dense\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-dense-multiline\\\"\\n        label=\\\"Dense multiline\\\"\\n        className={clsx(classes.textField, classes.dense)}\\n        margin=\\\"dense\\\"\\n        variant=\\\"outlined\\\"\\n        multiline\\n        rowsMax=\\\"4\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-multiline-flexible\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rowsMax=\\\"4\\\"\\n        value={values.multiline}\\n        onChange={handleChange('multiline')}\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        helperText=\\\"hello\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-multiline-static\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rows=\\\"4\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-helperText\\\"\\n        label=\\\"Helper text\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-with-placeholder\\\"\\n        label=\\\"With placeholder\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-textarea\\\"\\n        label=\\\"Multiline Placeholder\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        multiline\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-number\\\"\\n        label=\\\"Number\\\"\\n        value={values.age}\\n        onChange={handleChange('age')}\\n        type=\\\"number\\\"\\n        className={classes.textField}\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-search\\\"\\n        label=\\\"Search field\\\"\\n        type=\\\"search\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      />\\n      <TextField\\n        id=\\\"outlined-select-currency\\\"\\n        select\\n        label=\\\"Select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      >\\n        {currencies.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"outlined-select-currency-native\\\"\\n        select\\n        label=\\\"Native select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          native: true,\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n      >\\n        {currencies.map(option => (\\n          <option key={option.value} value={option.value}>\\n            {option.label}\\n          </option>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"outlined-full-width\\\"\\n        label=\\\"Label\\\"\\n        style={{ margin: 8 }}\\n        placeholder=\\\"Placeholder\\\"\\n        helperText=\\\"Full width!\\\"\\n        fullWidth\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"outlined-bare\\\"\\n        className={classes.textField}\\n        defaultValue=\\\"Bare\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"outlined\\\"\\n        inputProps={{ 'aria-label': 'bare' }}\\n      />\\n    </form>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst currencies = [\\n  {\\n    value: 'USD',\\n    label: '$',\\n  },\\n  {\\n    value: 'EUR',\\n    label: '\\u20AC',\\n  },\\n  {\\n    value: 'BTC',\\n    label: '\\u0E3F',\\n  },\\n  {\\n    value: 'JPY',\\n    label: '\\xA5',\\n  },\\n];\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n  },\\n  dense: {\\n    marginTop: 16,\\n  },\\n  menu: {\\n    width: 200,\\n  },\\n}));\\n\\nexport default function FilledTextFields() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    name: 'Cat in the Hat',\\n    age: '',\\n    multiline: 'Controlled',\\n    currency: 'EUR',\\n  });\\n\\n  const handleChange = name => event => {\\n    setValues({ ...values, [name]: event.target.value });\\n  };\\n\\n  return (\\n    <form className={classes.container} noValidate autoComplete=\\\"off\\\">\\n      <TextField\\n        id=\\\"filled-name\\\"\\n        label=\\\"Name\\\"\\n        className={classes.textField}\\n        value={values.name}\\n        onChange={handleChange('name')}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-uncontrolled\\\"\\n        label=\\\"Uncontrolled\\\"\\n        defaultValue=\\\"foo\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        required\\n        id=\\\"filled-required\\\"\\n        label=\\\"Required\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        error\\n        id=\\\"filled-error\\\"\\n        label=\\\"Error\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        disabled\\n        id=\\\"filled-disabled\\\"\\n        label=\\\"Disabled\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-email-input\\\"\\n        label=\\\"Email\\\"\\n        className={classes.textField}\\n        type=\\\"email\\\"\\n        name=\\\"email\\\"\\n        autoComplete=\\\"email\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-password-input\\\"\\n        label=\\\"Password\\\"\\n        className={classes.textField}\\n        type=\\\"password\\\"\\n        autoComplete=\\\"current-password\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-read-only-input\\\"\\n        label=\\\"Read Only\\\"\\n        defaultValue=\\\"Hello World\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        InputProps={{\\n          readOnly: true,\\n        }}\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-dense\\\"\\n        label=\\\"Dense\\\"\\n        className={clsx(classes.textField, classes.dense)}\\n        margin=\\\"dense\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-dense-multiline\\\"\\n        label=\\\"Dense multiline\\\"\\n        className={clsx(classes.textField, classes.dense)}\\n        margin=\\\"dense\\\"\\n        variant=\\\"filled\\\"\\n        multiline\\n        rowsMax=\\\"4\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-multiline-flexible\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rowsMax=\\\"4\\\"\\n        value={values.multiline}\\n        onChange={handleChange('multiline')}\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        helperText=\\\"hello\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-multiline-static\\\"\\n        label=\\\"Multiline\\\"\\n        multiline\\n        rows=\\\"4\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-helperText\\\"\\n        label=\\\"Helper text\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-with-placeholder\\\"\\n        label=\\\"With placeholder\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-textarea\\\"\\n        label=\\\"Multiline Placeholder\\\"\\n        placeholder=\\\"Placeholder\\\"\\n        multiline\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-number\\\"\\n        label=\\\"Number\\\"\\n        value={values.age}\\n        onChange={handleChange('age')}\\n        type=\\\"number\\\"\\n        className={classes.textField}\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-search\\\"\\n        label=\\\"Search field\\\"\\n        type=\\\"search\\\"\\n        className={classes.textField}\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      />\\n      <TextField\\n        id=\\\"filled-select-currency\\\"\\n        select\\n        label=\\\"Select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      >\\n        {currencies.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"filled-select-currency-native\\\"\\n        select\\n        label=\\\"Native select\\\"\\n        className={classes.textField}\\n        value={values.currency}\\n        onChange={handleChange('currency')}\\n        SelectProps={{\\n          native: true,\\n          MenuProps: {\\n            className: classes.menu,\\n          },\\n        }}\\n        helperText=\\\"Please select your currency\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n      >\\n        {currencies.map(option => (\\n          <option key={option.value} value={option.value}>\\n            {option.label}\\n          </option>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"filled-full-width\\\"\\n        label=\\\"Label\\\"\\n        style={{ margin: 8 }}\\n        placeholder=\\\"Placeholder\\\"\\n        helperText=\\\"Full width!\\\"\\n        fullWidth\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"filled-bare\\\"\\n        className={classes.textField}\\n        defaultValue=\\\"Bare\\\"\\n        margin=\\\"normal\\\"\\n        variant=\\\"filled\\\"\\n        inputProps={{ 'aria-label': 'bare' }}\\n      />\\n    </form>\\n  );\\n}\\n\";\nvar jsCode4 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport FilledInput from '@material-ui/core/FilledInput';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  formControl: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function ComposedTextField() {\\n  const [labelWidth, setLabelWidth] = React.useState(0);\\n  const [name, setName] = React.useState('Composed TextField');\\n  const labelRef = React.useRef(null);\\n  const classes = useStyles();\\n\\n  React.useEffect(() => {\\n    setLabelWidth(labelRef.current.offsetWidth);\\n  }, []);\\n\\n  function handleChange(event) {\\n    setName(event.target.value);\\n  }\\n\\n  return (\\n    <div className={classes.container}>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"component-simple\\\">Name</InputLabel>\\n        <Input id=\\\"component-simple\\\" value={name} onChange={handleChange} />\\n      </FormControl>\\n      <FormControl className={classes.formControl}>\\n        <InputLabel htmlFor=\\\"component-helper\\\">Name</InputLabel>\\n        <Input\\n          id=\\\"component-helper\\\"\\n          value={name}\\n          onChange={handleChange}\\n          aria-describedby=\\\"component-helper-text\\\"\\n        />\\n        <FormHelperText id=\\\"component-helper-text\\\">Some important helper text</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} disabled>\\n        <InputLabel htmlFor=\\\"component-disabled\\\">Name</InputLabel>\\n        <Input id=\\\"component-disabled\\\" value={name} onChange={handleChange} />\\n        <FormHelperText>Disabled</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} error>\\n        <InputLabel htmlFor=\\\"component-error\\\">Name</InputLabel>\\n        <Input\\n          id=\\\"component-error\\\"\\n          value={name}\\n          onChange={handleChange}\\n          aria-describedby=\\\"component-error-text\\\"\\n        />\\n        <FormHelperText id=\\\"component-error-text\\\">Error</FormHelperText>\\n      </FormControl>\\n      <FormControl className={classes.formControl} variant=\\\"outlined\\\">\\n        <InputLabel ref={labelRef} htmlFor=\\\"component-outlined\\\">\\n          Name\\n        </InputLabel>\\n        <OutlinedInput\\n          id=\\\"component-outlined\\\"\\n          value={name}\\n          onChange={handleChange}\\n          labelWidth={labelWidth}\\n        />\\n      </FormControl>\\n      <FormControl className={classes.formControl} variant=\\\"filled\\\">\\n        <InputLabel htmlFor=\\\"component-filled\\\">Name</InputLabel>\\n        <FilledInput id=\\\"component-filled\\\" value={name} onChange={handleChange} />\\n      </FormControl>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode5 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  input: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function Inputs() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.container}>\\n      <Input\\n        defaultValue=\\\"Hello world\\\"\\n        className={classes.input}\\n        inputProps={{\\n          'aria-label': 'Description',\\n        }}\\n      />\\n      <Input\\n        placeholder=\\\"Placeholder\\\"\\n        className={classes.input}\\n        inputProps={{\\n          'aria-label': 'Description',\\n        }}\\n      />\\n      <Input\\n        value=\\\"Disabled\\\"\\n        className={classes.input}\\n        disabled\\n        inputProps={{\\n          'aria-label': 'Description',\\n        }}\\n      />\\n      <Input\\n        defaultValue=\\\"Error\\\"\\n        className={classes.input}\\n        error\\n        inputProps={{\\n          'aria-label': 'Description',\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode6 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles(theme => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n    width: 200,\\n  },\\n}));\\n\\nexport default function TextFieldMargins() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.container}>\\n      <TextField\\n        label=\\\"None\\\"\\n        id=\\\"margin-none\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n      />\\n      <TextField\\n        label=\\\"Dense\\\"\\n        id=\\\"margin-dense\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n        margin=\\\"dense\\\"\\n      />\\n      <TextField\\n        label=\\\"Normal\\\"\\n        id=\\\"margin-normal\\\"\\n        defaultValue=\\\"Default Value\\\"\\n        className={classes.textField}\\n        helperText=\\\"Some important text\\\"\\n        margin=\\\"normal\\\"\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode7 = \"\\nimport React from 'react';\\nimport { fade, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\\nimport { ThemeProvider } from '@material-ui/styles';\\nimport InputBase from '@material-ui/core/InputBase';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport TextField from '@material-ui/core/TextField';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport { green } from '@material-ui/core/colors';\\n\\nconst CssTextField = withStyles({\\n  root: {\\n    '& label.Mui-focused': {\\n      color: 'green',\\n    },\\n    '& .MuiInput-underline:after': {\\n      borderBottomColor: 'green',\\n    },\\n    '& .MuiOutlinedInput-root': {\\n      '& fieldset': {\\n        borderColor: 'red',\\n      },\\n      '&:hover fieldset': {\\n        borderColor: 'yellow',\\n      },\\n      '&.Mui-focused fieldset': {\\n        borderColor: 'green',\\n      },\\n    },\\n  },\\n})(TextField);\\n\\nconst BootstrapInput = withStyles(theme => ({\\n  root: {\\n    'label + &': {\\n      marginTop: theme.spacing(3),\\n    },\\n  },\\n  input: {\\n    borderRadius: 4,\\n    position: 'relative',\\n    backgroundColor: theme.palette.common.white,\\n    border: '1px solid #ced4da',\\n    fontSize: 16,\\n    width: 'auto',\\n    padding: '10px 12px',\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\n    // Use the system font instead of the default Roboto font.\\n    fontFamily: [\\n      '-apple-system',\\n      'BlinkMacSystemFont',\\n      '\\\"Segoe UI\\\"',\\n      'Roboto',\\n      '\\\"Helvetica Neue\\\"',\\n      'Arial',\\n      'sans-serif',\\n      '\\\"Apple Color Emoji\\\"',\\n      '\\\"Segoe UI Emoji\\\"',\\n      '\\\"Segoe UI Symbol\\\"',\\n    ].join(','),\\n    '&:focus': {\\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\\n      borderColor: theme.palette.primary.main,\\n    },\\n  },\\n}))(InputBase);\\n\\nconst useStylesReddit = makeStyles(theme => ({\\n  root: {\\n    border: '1px solid #e2e2e1',\\n    overflow: 'hidden',\\n    borderRadius: 4,\\n    backgroundColor: '#fcfcfb',\\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\\n    '&:hover': {\\n      backgroundColor: '#fff',\\n    },\\n    '&$focused': {\\n      backgroundColor: '#fff',\\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\\n      borderColor: theme.palette.primary.main,\\n    },\\n  },\\n  focused: {},\\n}));\\n\\nfunction RedditTextField(props) {\\n  const classes = useStylesReddit();\\n\\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\\n}\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nconst theme = createMuiTheme({\\n  palette: {\\n    primary: green,\\n  },\\n});\\n\\nexport default function CustomizedInputs() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <CssTextField className={classes.margin} id=\\\"custom-css-standard-input\\\" label=\\\"Custom CSS\\\" />\\n      <CssTextField\\n        className={classes.margin}\\n        label=\\\"Custom CSS\\\"\\n        variant=\\\"outlined\\\"\\n        id=\\\"custom-css-outlined-input\\\"\\n      />\\n      <ThemeProvider theme={theme}>\\n        <TextField\\n          className={classes.margin}\\n          label=\\\"ThemeProvider\\\"\\n          id=\\\"mui-theme-provider-standard-input\\\"\\n        />\\n        <TextField\\n          className={classes.margin}\\n          label=\\\"ThemeProvider\\\"\\n          variant=\\\"outlined\\\"\\n          id=\\\"mui-theme-provider-outlined-input\\\"\\n        />\\n      </ThemeProvider>\\n      <FormControl className={classes.margin}>\\n        <InputLabel shrink htmlFor=\\\"bootstrap-input\\\">\\n          Bootstrap\\n        </InputLabel>\\n        <BootstrapInput defaultValue=\\\"react-bootstrap\\\" id=\\\"bootstrap-input\\\" />\\n      </FormControl>\\n      <RedditTextField\\n        label=\\\"Reddit\\\"\\n        className={classes.margin}\\n        defaultValue=\\\"react-reddit\\\"\\n        variant=\\\"filled\\\"\\n        id=\\\"reddit-input\\\"\\n      />\\n      <InputBase\\n        className={classes.margin}\\n        defaultValue=\\\"Naked input\\\"\\n        inputProps={{ 'aria-label': 'naked' }}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode8 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Paper from '@material-ui/core/Paper';\\nimport InputBase from '@material-ui/core/InputBase';\\nimport Divider from '@material-ui/core/Divider';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport MenuIcon from '@material-ui/icons/Menu';\\nimport SearchIcon from '@material-ui/icons/Search';\\nimport DirectionsIcon from '@material-ui/icons/Directions';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    padding: '2px 4px',\\n    display: 'flex',\\n    alignItems: 'center',\\n    width: 400,\\n  },\\n  input: {\\n    marginLeft: 8,\\n    flex: 1,\\n  },\\n  iconButton: {\\n    padding: 10,\\n  },\\n  divider: {\\n    width: 1,\\n    height: 28,\\n    margin: 4,\\n  },\\n});\\n\\nexport default function CustomizedInputBase() {\\n  const classes = useStyles();\\n\\n  return (\\n    <Paper className={classes.root}>\\n      <IconButton className={classes.iconButton} aria-label=\\\"Menu\\\">\\n        <MenuIcon />\\n      </IconButton>\\n      <InputBase\\n        className={classes.input}\\n        placeholder=\\\"Search Google Maps\\\"\\n        inputProps={{ 'aria-label': 'Search Google Maps' }}\\n      />\\n      <IconButton className={classes.iconButton} aria-label=\\\"Search\\\">\\n        <SearchIcon />\\n      </IconButton>\\n      <Divider className={classes.divider} />\\n      <IconButton color=\\\"primary\\\" className={classes.iconButton} aria-label=\\\"Directions\\\">\\n        <DirectionsIcon />\\n      </IconButton>\\n    </Paper>\\n  );\\n}\\n\";\nvar jsCode9 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport TextField from '@material-ui/core/TextField';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Visibility from '@material-ui/icons/Visibility';\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\n\\nconst ranges = [\\n  {\\n    value: '0-20',\\n    label: '0 to 20',\\n  },\\n  {\\n    value: '21-50',\\n    label: '21 to 50',\\n  },\\n  {\\n    value: '51-100',\\n    label: '51 to 100',\\n  },\\n];\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n  withoutLabel: {\\n    marginTop: theme.spacing(3),\\n  },\\n  textField: {\\n    flexBasis: 200,\\n  },\\n}));\\n\\nexport default function InputAdornments() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    amount: '',\\n    password: '',\\n    weight: '',\\n    weightRange: '',\\n    showPassword: false,\\n  });\\n\\n  const handleChange = prop => event => {\\n    setValues({ ...values, [prop]: event.target.value });\\n  };\\n\\n  const handleClickShowPassword = () => {\\n    setValues({ ...values, showPassword: !values.showPassword });\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <TextField\\n        label=\\\"With normal TextField\\\"\\n        id=\\\"simple-start-adornment\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        select\\n        label=\\\"With Select\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        value={values.weightRange}\\n        onChange={handleChange('weightRange')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\n        }}\\n      >\\n        {ranges.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <FormControl fullWidth className={classes.margin}>\\n        <InputLabel htmlFor=\\\"adornment-amount\\\">Amount</InputLabel>\\n        <Input\\n          id=\\\"adornment-amount\\\"\\n          value={values.amount}\\n          onChange={handleChange('amount')}\\n          startAdornment={<InputAdornment position=\\\"start\\\">$</InputAdornment>}\\n        />\\n      </FormControl>\\n      <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\\n        <Input\\n          id=\\\"adornment-weight\\\"\\n          value={values.weight}\\n          onChange={handleChange('weight')}\\n          endAdornment={<InputAdornment position=\\\"end\\\">Kg</InputAdornment>}\\n          aria-describedby=\\\"weight-helper-text\\\"\\n          inputProps={{\\n            'aria-label': 'Weight',\\n          }}\\n        />\\n        <FormHelperText id=\\\"weight-helper-text\\\">Weight</FormHelperText>\\n      </FormControl>\\n      <FormControl className={clsx(classes.margin, classes.textField)}>\\n        <InputLabel htmlFor=\\\"adornment-password\\\">Password</InputLabel>\\n        <Input\\n          id=\\\"adornment-password\\\"\\n          type={values.showPassword ? 'text' : 'password'}\\n          value={values.password}\\n          onChange={handleChange('password')}\\n          endAdornment={\\n            <InputAdornment position=\\\"end\\\">\\n              <IconButton aria-label=\\\"Toggle password visibility\\\" onClick={handleClickShowPassword}>\\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\\n              </IconButton>\\n            </InputAdornment>\\n          }\\n        />\\n      </FormControl>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode10 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Input from '@material-ui/core/Input';\\nimport InputLabel from '@material-ui/core/InputLabel';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport TextField from '@material-ui/core/TextField';\\nimport Grid from '@material-ui/core/Grid';\\nimport AccountCircle from '@material-ui/icons/AccountCircle';\\n\\nconst useStyles = makeStyles(theme => ({\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function InputWithIcon() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <FormControl className={classes.margin}>\\n        <InputLabel htmlFor=\\\"input-with-icon-adornment\\\">With a start adornment</InputLabel>\\n        <Input\\n          id=\\\"input-with-icon-adornment\\\"\\n          startAdornment={\\n            <InputAdornment position=\\\"start\\\">\\n              <AccountCircle />\\n            </InputAdornment>\\n          }\\n        />\\n      </FormControl>\\n      <TextField\\n        className={classes.margin}\\n        id=\\\"input-with-icon-textfield\\\"\\n        label=\\\"TextField\\\"\\n        InputProps={{\\n          startAdornment: (\\n            <InputAdornment position=\\\"start\\\">\\n              <AccountCircle />\\n            </InputAdornment>\\n          ),\\n        }}\\n      />\\n      <div className={classes.margin}>\\n        <Grid container spacing={1} alignItems=\\\"flex-end\\\">\\n          <Grid item>\\n            <AccountCircle />\\n          </Grid>\\n          <Grid item>\\n            <TextField id=\\\"input-with-icon-grid\\\" label=\\\"With a grid\\\" />\\n          </Grid>\\n        </Grid>\\n      </div>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode11 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport TextField from '@material-ui/core/TextField';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Visibility from '@material-ui/icons/Visibility';\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\n\\nconst ranges = [\\n  {\\n    value: '0-20',\\n    label: '0 to 20',\\n  },\\n  {\\n    value: '21-50',\\n    label: '21 to 50',\\n  },\\n  {\\n    value: '51-100',\\n    label: '51 to 100',\\n  },\\n];\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n  textField: {\\n    flexBasis: 200,\\n  },\\n}));\\n\\nexport default function FilledInputAdornments() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    amount: '',\\n    password: '',\\n    weight: '',\\n    weightRange: '',\\n    showPassword: false,\\n  });\\n\\n  const handleChange = prop => event => {\\n    setValues({ ...values, [prop]: event.target.value });\\n  };\\n\\n  const handleClickShowPassword = () => {\\n    setValues({ ...values, showPassword: !values.showPassword });\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <TextField\\n        id=\\\"filled-simple-start-adornment\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"filled\\\"\\n        label=\\\"With filled TextField\\\"\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        select\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"filled\\\"\\n        label=\\\"With Select\\\"\\n        value={values.weightRange}\\n        onChange={handleChange('weightRange')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\n        }}\\n      >\\n        {ranges.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"filled-adornment-amount\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"filled\\\"\\n        label=\\\"Amount\\\"\\n        value={values.amount}\\n        onChange={handleChange('amount')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">$</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"filled-adornment-weight\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"filled\\\"\\n        label=\\\"Weight\\\"\\n        value={values.weight}\\n        onChange={handleChange('weight')}\\n        helperText=\\\"Weight\\\"\\n        InputProps={{\\n          endAdornment: <InputAdornment position=\\\"end\\\">Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"filled-adornment-password\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"filled\\\"\\n        type={values.showPassword ? 'text' : 'password'}\\n        label=\\\"Password\\\"\\n        value={values.password}\\n        onChange={handleChange('password')}\\n        InputProps={{\\n          endAdornment: (\\n            <InputAdornment position=\\\"end\\\">\\n              <IconButton\\n                edge=\\\"end\\\"\\n                aria-label=\\\"Toggle password visibility\\\"\\n                onClick={handleClickShowPassword}\\n              >\\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\\n              </IconButton>\\n            </InputAdornment>\\n          ),\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode12 = \"\\nimport React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport InputAdornment from '@material-ui/core/InputAdornment';\\nimport TextField from '@material-ui/core/TextField';\\nimport MenuItem from '@material-ui/core/MenuItem';\\nimport Visibility from '@material-ui/icons/Visibility';\\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\\n\\nconst ranges = [\\n  {\\n    value: '0-20',\\n    label: '0 to 20',\\n  },\\n  {\\n    value: '21-50',\\n    label: '21 to 50',\\n  },\\n  {\\n    value: '51-100',\\n    label: '51 to 100',\\n  },\\n];\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n  textField: {\\n    flexBasis: 200,\\n  },\\n}));\\n\\nexport default function OutlinedInputAdornments() {\\n  const classes = useStyles();\\n  const [values, setValues] = React.useState({\\n    amount: '',\\n    password: '',\\n    weight: '',\\n    weightRange: '',\\n    showPassword: false,\\n  });\\n\\n  const handleChange = prop => event => {\\n    setValues({ ...values, [prop]: event.target.value });\\n  };\\n\\n  const handleClickShowPassword = () => {\\n    setValues({ ...values, showPassword: !values.showPassword });\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <TextField\\n        id=\\\"outlined-simple-start-adornment\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"outlined\\\"\\n        label=\\\"With outlined TextField\\\"\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        select\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"outlined\\\"\\n        label=\\\"With Select\\\"\\n        value={values.weightRange}\\n        onChange={handleChange('weightRange')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">Kg</InputAdornment>,\\n        }}\\n      >\\n        {ranges.map(option => (\\n          <MenuItem key={option.value} value={option.value}>\\n            {option.label}\\n          </MenuItem>\\n        ))}\\n      </TextField>\\n      <TextField\\n        id=\\\"outlined-adornment-amount\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"outlined\\\"\\n        label=\\\"Amount\\\"\\n        value={values.amount}\\n        onChange={handleChange('amount')}\\n        InputProps={{\\n          startAdornment: <InputAdornment position=\\\"start\\\">$</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"outlined-adornment-weight\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"outlined\\\"\\n        label=\\\"Weight\\\"\\n        value={values.weight}\\n        onChange={handleChange('weight')}\\n        helperText=\\\"Weight\\\"\\n        InputProps={{\\n          endAdornment: <InputAdornment position=\\\"end\\\">Kg</InputAdornment>,\\n        }}\\n      />\\n      <TextField\\n        id=\\\"outlined-adornment-password\\\"\\n        className={clsx(classes.margin, classes.textField)}\\n        variant=\\\"outlined\\\"\\n        type={values.showPassword ? 'text' : 'password'}\\n        label=\\\"Password\\\"\\n        value={values.password}\\n        onChange={handleChange('password')}\\n        InputProps={{\\n          endAdornment: (\\n            <InputAdornment position=\\\"end\\\">\\n              <IconButton\\n                edge=\\\"end\\\"\\n                aria-label=\\\"Toggle password visibility\\\"\\n                onClick={handleClickShowPassword}\\n              >\\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\\n              </IconButton>\\n            </InputAdornment>\\n          ),\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\";","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/inputs/TextFieldsExamplesPage.js"],"names":["React","clsx","TextField","MenuItem","FormControl","Input","InputLabel","FormHelperText","OutlinedInput","FilledInput","InputBase","Paper","IconButton","Divider","InputAdornment","Grid","green","fade","withStyles","makeStyles","createMuiTheme","ThemeProvider","Visibility","VisibilityOff","AccountCircle","Notice","KTCodeExample","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","dense","marginTop","menu","currencies","value","label","useStyles2","useStyles3","useStyles4","formControl","margin","useStyles5","input","useStyles6","CssTextField","root","color","borderBottomColor","borderColor","BootstrapInput","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","padding","transition","transitions","create","fontFamily","join","boxShadow","primary","main","useStylesReddit","overflow","focused","RedditTextField","props","classes","disableUnderline","useStyles7","theme7","useStyles8","alignItems","flex","iconButton","divider","height","ranges","useStyles9","withoutLabel","flexBasis","useStyles10","useStyles11","useStyles12","TextFieldsExamplesPage","useState","name","age","multiline","currency","values","setValues","handleChange","event","target","classes2","values2","setValues2","handleChange2","classes3","values3","setValues3","handleChange3","labelWidth4","setLabelWidth4","name4","setName4","labelRef4","useRef","classes4","useEffect","current","offsetWidth","handleChange4","classes5","classes6","classes7","classes8","classes9","amount","password","weight","weightRange","showPassword","values9","setValues9","handleChange9","prop","handleClickShowPassword9","classes10","classes11","values11","setValues11","handleChange11","handleClickShowPassword11","classes12","values12","setValues12","handleChange12","handleClickShowPassword12","jsCode1","readOnly","shrink","MenuProps","className","map","option","native","jsCode3","jsCode5","jsCode7","jsCode9","startAdornment","jsCode11","endAdornment","jsCode2","jsCode4","jsCode6","jsCode8","jsCode10","jsCode12"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport {\n  TextField,\n  MenuItem,\n  FormControl,\n  Input,\n  InputLabel,\n  FormHelperText,\n  OutlinedInput,\n  FilledInput,\n  InputBase,\n  Paper,\n  IconButton,\n  Divider,\n  InputAdornment,\n  Grid\n} from \"@material-ui/core\";\nimport {green} from \"@material-ui/core/colors\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme\n} from \"@material-ui/core/styles\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\n\n// Example 1\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  }\n}));\n\nconst currencies = [\n  {\n    value: \"USD\",\n    label: \"$\"\n  },\n  {\n    value: \"EUR\",\n    label: \"€\"\n  },\n  {\n    value: \"BTC\",\n    label: \"฿\"\n  },\n  {\n    value: \"JPY\",\n    label: \"¥\"\n  }\n];\n\n// Example 2\nconst useStyles2 = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n}));\n\n// Example 3\nconst useStyles3 = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n}));\n\n// Example 4\nconst useStyles4 = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  }\n}));\n\n// Example 5\nconst useStyles5 = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  input: {\n    margin: theme.spacing(1)\n  }\n}));\n\n// Example 6\nconst useStyles6 = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\n// Example 7\nconst CssTextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"green\"\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"green\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"red\"\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"yellow\"\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"green\"\n      }\n    }\n  }\n})(TextField);\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.common.white,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"auto\",\n    padding: \"10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}))(InputBase);\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\n  );\n}\n\nconst useStyles7 = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst theme7 = createMuiTheme({\n  palette: {\n    primary: green\n  }\n});\n\n// Example 8\nconst useStyles8 = makeStyles({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 400\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n});\n\n// Example 9\nconst ranges = [\n  {\n    value: \"0-20\",\n    label: \"0 to 20\"\n  },\n  {\n    value: \"21-50\",\n    label: \"21 to 50\"\n  },\n  {\n    value: \"51-100\",\n    label: \"51 to 100\"\n  }\n];\n\nconst useStyles9 = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    flexBasis: 200\n  }\n}));\n\n// Example 10\nconst useStyles10 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\n// Example 11\nconst useStyles11 = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    flexBasis: 200\n  }\n}));\n\n// Example 12\nconst useStyles12 = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    flexBasis: 200\n  }\n}));\n\nexport default function TextFieldsExamplesPage() {\n  // Example 1\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: \"Cat in the Hat\",\n    age: \"\",\n    multiline: \"Controlled\",\n    currency: \"EUR\"\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  // Example 2\n  const classes2 = useStyles2();\n  const [values2, setValues2] = React.useState({\n    name: \"Cat in the Hat\",\n    age: \"\",\n    multiline: \"Controlled\",\n    currency: \"EUR\"\n  });\n\n  const handleChange2 = name => event => {\n    setValues2({ ...values2, [name]: event.target.value });\n  };\n\n  // Example 3\n  const classes3 = useStyles3();\n  const [values3, setValues3] = React.useState({\n    name: \"Cat in the Hat\",\n    age: \"\",\n    multiline: \"Controlled\",\n    currency: \"EUR\"\n  });\n\n  const handleChange3 = name => event => {\n    setValues3({ ...values3, [name]: event.target.value });\n  };\n\n  // Example 4\n  const [labelWidth4, setLabelWidth4] = React.useState(0);\n  const [name4, setName4] = React.useState(\"Composed TextField\");\n  const labelRef4 = React.useRef(null);\n  const classes4 = useStyles4();\n\n  React.useEffect(() => {\n    setLabelWidth4(labelRef4.current.offsetWidth);\n  }, []);\n\n  function handleChange4(event) {\n    setName4(event.target.value);\n  }\n\n  // Example 5\n  const classes5 = useStyles5();\n\n  // Example 6\n  const classes6 = useStyles6();\n\n  // Example 7\n  const classes7 = useStyles7();\n\n  // Example 8\n  const classes8 = useStyles8();\n\n  // Example 9\n  const classes9 = useStyles9();\n  const [values9, setValues9] = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false\n  });\n\n  const handleChange9 = prop => event => {\n    setValues9({ ...values9, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword9 = () => {\n    setValues9({ ...values9, showPassword: !values9.showPassword });\n  };\n\n  // Example 10\n  const classes10 = useStyles10();\n\n  // Example 11\n  const classes11 = useStyles11();\n  const [values11, setValues11] = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false\n  });\n\n  const handleChange11 = prop => event => {\n    setValues11({ ...values11, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword11 = () => {\n    setValues11({ ...values11, showPassword: !values11.showPassword });\n  };\n\n  // Example 12\n  const classes12 = useStyles12();\n  const [values12, setValues12] = React.useState({\n    amount: \"\",\n    password: \"\",\n    weight: \"\",\n    weightRange: \"\",\n    showPassword: false\n  });\n\n  const handleChange12 = prop => event => {\n    setValues12({ ...values12, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword12 = () => {\n    setValues({ ...values12, showPassword: !values12.showPassword });\n  };\n\n  return (\n    <>\n      <Notice icon=\"flaticon-warning font-primary\">\n        <span>Text fields let users enter and edit text.</span>{\" \"}\n        <span>\n          For more info please check the components's official{\" \"}\n          <a\n            target=\"_blank\"\n            className=\"font-weight-bold\"\n            rel=\"noopener noreferrer\"\n            href=\"https://material-ui.com/components/text-fields/\"\n          >\n            demos & documentation\n          </a>\n        </span>\n      </Notice>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <KTCodeExample\n            jsCode={jsCode1}\n            beforeCodeTitle=\"TextField\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>\n              The <code>TextField</code> wrapper component is a complete form\n              control including a label, input and help text.\n            </span>\n            <div className=\"separator separator-dashed my-7\" />\n            <form className={classes.container} noValidate autoComplete=\"off\">\n              <TextField\n                id=\"standard-name\"\n                label=\"Name\"\n                className={classes.textField}\n                value={values.name}\n                onChange={handleChange(\"name\")}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-uncontrolled\"\n                label=\"Uncontrolled\"\n                defaultValue=\"foo\"\n                className={classes.textField}\n                margin=\"normal\"\n              />\n              <TextField\n                required\n                id=\"standard-required\"\n                label=\"Required\"\n                defaultValue=\"Hello World\"\n                className={classes.textField}\n                margin=\"normal\"\n              />\n              <TextField\n                error\n                id=\"standard-error\"\n                label=\"Error\"\n                defaultValue=\"Hello World\"\n                className={classes.textField}\n                margin=\"normal\"\n              />\n              <TextField\n                disabled\n                id=\"standard-disabled\"\n                label=\"Disabled\"\n                defaultValue=\"Hello World\"\n                className={classes.textField}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-password-input\"\n                label=\"Password\"\n                className={classes.textField}\n                type=\"password\"\n                autoComplete=\"current-password\"\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-read-only-input\"\n                label=\"Read Only\"\n                defaultValue=\"Hello World\"\n                className={classes.textField}\n                margin=\"normal\"\n                InputProps={{\n                  readOnly: true\n                }}\n              />\n              <TextField\n                id=\"standard-dense\"\n                label=\"Dense\"\n                className={clsx(classes.textField, classes.dense)}\n                margin=\"dense\"\n              />\n              <TextField\n                id=\"standard-multiline-flexible\"\n                label=\"Multiline\"\n                multiline\n                rowsMax=\"4\"\n                value={values.multiline}\n                onChange={handleChange(\"multiline\")}\n                className={classes.textField}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-multiline-static\"\n                label=\"Multiline\"\n                multiline\n                rows=\"4\"\n                defaultValue=\"Default Value\"\n                className={classes.textField}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-helperText\"\n                label=\"Helper text\"\n                defaultValue=\"Default Value\"\n                className={classes.textField}\n                helperText=\"Some important text\"\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-with-placeholder\"\n                label=\"With placeholder\"\n                placeholder=\"Placeholder\"\n                className={classes.textField}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-textarea\"\n                label=\"With placeholder multiline\"\n                placeholder=\"Placeholder\"\n                multiline\n                className={classes.textField}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-number\"\n                label=\"Number\"\n                value={values.age}\n                onChange={handleChange(\"age\")}\n                type=\"number\"\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-search\"\n                label=\"Search field\"\n                type=\"search\"\n                className={classes.textField}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-select-currency\"\n                select\n                label=\"Select\"\n                className={classes.textField}\n                value={values.currency}\n                onChange={handleChange(\"currency\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n                helperText=\"Please select your currency\"\n                margin=\"normal\"\n              >\n                {currencies.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                id=\"standard-select-currency-native\"\n                select\n                label=\"Native select\"\n                className={classes.textField}\n                value={values.currency}\n                onChange={handleChange(\"currency\")}\n                SelectProps={{\n                  native: true,\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n                helperText=\"Please select your currency\"\n                margin=\"normal\"\n              >\n                {currencies.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n              <TextField\n                id=\"standard-full-width\"\n                label=\"Label\"\n                style={{ margin: 8 }}\n                placeholder=\"Placeholder\"\n                helperText=\"Full width!\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n              <TextField\n                id=\"standard-bare\"\n                className={classes.textField}\n                defaultValue=\"Bare\"\n                margin=\"normal\"\n                inputProps={{ \"aria-label\": \"bare\" }}\n              />\n            </form>\n          </KTCodeExample>\n          <KTCodeExample\n            jsCode={jsCode3}\n            beforeCodeTitle=\"Filled\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>\n              <code>TextField</code> supports filled styling.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <form className={classes3.container} noValidate autoComplete=\"off\">\n              <TextField\n                id=\"filled-name\"\n                label=\"Name\"\n                className={classes3.textField}\n                value={values3.name}\n                onChange={handleChange(\"name\")}\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-uncontrolled\"\n                label=\"Uncontrolled\"\n                defaultValue=\"foo\"\n                className={classes3.textField}\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                required\n                id=\"filled-required\"\n                label=\"Required\"\n                defaultValue=\"Hello World\"\n                className={classes3.textField}\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                error\n                id=\"filled-error\"\n                label=\"Error\"\n                defaultValue=\"Hello World\"\n                className={classes3.textField}\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                disabled\n                id=\"filled-disabled\"\n                label=\"Disabled\"\n                defaultValue=\"Hello World\"\n                className={classes3.textField}\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-email-input\"\n                label=\"Email\"\n                className={classes3.textField}\n                type=\"email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-password-input\"\n                label=\"Password\"\n                className={classes3.textField}\n                type=\"password\"\n                autoComplete=\"current-password\"\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-read-only-input\"\n                label=\"Read Only\"\n                defaultValue=\"Hello World\"\n                className={classes3.textField}\n                margin=\"normal\"\n                InputProps={{\n                  readOnly: true\n                }}\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-dense\"\n                label=\"Dense\"\n                className={clsx(classes3.textField, classes3.dense)}\n                margin=\"dense\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-dense-multiline\"\n                label=\"Dense multiline\"\n                className={clsx(classes3.textField, classes3.dense)}\n                margin=\"dense\"\n                variant=\"filled\"\n                multiline\n                rowsMax=\"4\"\n              />\n              <TextField\n                id=\"filled-multiline-flexible\"\n                label=\"Multiline\"\n                multiline\n                rowsMax=\"4\"\n                value={values3.multiline}\n                onChange={handleChange3(\"multiline\")}\n                className={classes3.textField}\n                margin=\"normal\"\n                helperText=\"hello\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-multiline-static\"\n                label=\"Multiline\"\n                multiline\n                rows=\"4\"\n                defaultValue=\"Default Value\"\n                className={classes3.textField}\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-helperText\"\n                label=\"Helper text\"\n                defaultValue=\"Default Value\"\n                className={classes3.textField}\n                helperText=\"Some important text\"\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-with-placeholder\"\n                label=\"With placeholder\"\n                placeholder=\"Placeholder\"\n                className={classes3.textField}\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-textarea\"\n                label=\"Multiline Placeholder\"\n                placeholder=\"Placeholder\"\n                multiline\n                className={classes3.textField}\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-number\"\n                label=\"Number\"\n                value={values3.age}\n                onChange={handleChange3(\"age\")}\n                type=\"number\"\n                className={classes3.textField}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-search\"\n                label=\"Search field\"\n                type=\"search\"\n                className={classes3.textField}\n                margin=\"normal\"\n                variant=\"filled\"\n              />\n              <TextField\n                id=\"filled-select-currency\"\n                select\n                label=\"Select\"\n                className={classes3.textField}\n                value={values3.currency}\n                onChange={handleChange3(\"currency\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes3.menu\n                  }\n                }}\n                helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"filled\"\n              >\n                {currencies.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                id=\"filled-select-currency-native\"\n                select\n                label=\"Native select\"\n                className={classes3.textField}\n                value={values3.currency}\n                onChange={handleChange3(\"currency\")}\n                SelectProps={{\n                  native: true,\n                  MenuProps: {\n                    className: classes3.menu\n                  }\n                }}\n                helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"filled\"\n              >\n                {currencies.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n              <TextField\n                id=\"filled-full-width\"\n                label=\"Label\"\n                style={{ margin: 8 }}\n                placeholder=\"Placeholder\"\n                helperText=\"Full width!\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"filled\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n              <TextField\n                id=\"filled-bare\"\n                className={classes3.textField}\n                defaultValue=\"Bare\"\n                margin=\"normal\"\n                variant=\"filled\"\n                inputProps={{ \"aria-label\": \"bare\" }}\n              />\n            </form>\n          </KTCodeExample>\n          <KTCodeExample\n            jsCode={jsCode5}\n            beforeCodeTitle=\"Inputs\"\n            codeBlockHeight=\"400px\"\n          >\n            <div className={classes5.container}>\n              <Input\n                defaultValue=\"Hello world\"\n                className={classes5.input}\n                inputProps={{\n                  \"aria-label\": \"Description\"\n                }}\n              />\n              <Input\n                placeholder=\"Placeholder\"\n                className={classes5.input}\n                inputProps={{\n                  \"aria-label\": \"Description\"\n                }}\n              />\n              <Input\n                value=\"Disabled\"\n                className={classes5.input}\n                disabled\n                inputProps={{\n                  \"aria-label\": \"Description\"\n                }}\n              />\n              <Input\n                defaultValue=\"Error\"\n                className={classes5.input}\n                error\n                inputProps={{\n                  \"aria-label\": \"Description\"\n                }}\n              />\n            </div>\n          </KTCodeExample>\n          <KTCodeExample\n            jsCode={jsCode7}\n            beforeCodeTitle=\"Customized inputs\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>Here are some examples of customizing the component.</span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div className={classes7.root}>\n              <CssTextField\n                className={classes7.margin}\n                id=\"custom-css-standard-input\"\n                label=\"Custom CSS\"\n              />\n              <CssTextField\n                className={classes7.margin}\n                label=\"Custom CSS\"\n                variant=\"outlined\"\n                id=\"custom-css-outlined-input\"\n              />\n              <ThemeProvider theme={theme7}>\n                <TextField\n                  className={classes7.margin}\n                  label=\"ThemeProvider\"\n                  id=\"mui-theme-provider-standard-input\"\n                />\n                <TextField\n                  className={classes7.margin}\n                  label=\"ThemeProvider\"\n                  variant=\"outlined\"\n                  id=\"mui-theme-provider-outlined-input\"\n                />\n              </ThemeProvider>\n              <FormControl className={classes7.margin}>\n                <InputLabel shrink htmlFor=\"bootstrap-input\">\n                  Bootstrap\n                </InputLabel>\n                <BootstrapInput\n                  defaultValue=\"react-bootstrap\"\n                  id=\"bootstrap-input\"\n                />\n              </FormControl>\n              <RedditTextField\n                label=\"Reddit\"\n                className={classes7.margin}\n                defaultValue=\"react-reddit\"\n                variant=\"filled\"\n                id=\"reddit-input\"\n              />\n              <InputBase\n                className={classes7.margin}\n                defaultValue=\"Naked input\"\n                inputProps={{ \"aria-label\": \"naked\" }}\n              />\n            </div>\n          </KTCodeExample>\n          <KTCodeExample\n            jsCode={jsCode9}\n            beforeCodeTitle=\"Input Adornments\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>\n              <code>Input</code> allows the provision of{\" \"}\n              <code>InputAdornment</code>. These can be used to add a prefix, a\n              suffix or an action to an input. For instance, you can use an icon\n              button to hide or reveal the password.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div className={classes9.root}>\n              <TextField\n                label=\"With normal TextField\"\n                id=\"simple-start-adornment\"\n                className={clsx(classes9.margin, classes9.textField)}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\n                  )\n                }}\n              />\n              <TextField\n                select\n                label=\"With Select\"\n                className={clsx(classes9.margin, classes9.textField)}\n                value={values9.weightRange}\n                onChange={handleChange9(\"weightRange\")}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\n                  )\n                }}\n              >\n                {ranges.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <FormControl fullWidth className={classes9.margin}>\n                <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\n                <Input\n                  id=\"adornment-amount\"\n                  value={values9.amount}\n                  onChange={handleChange9(\"amount\")}\n                  startAdornment={\n                    <InputAdornment position=\"start\">$</InputAdornment>\n                  }\n                />\n              </FormControl>\n              <FormControl\n                className={clsx(\n                  classes9.margin,\n                  classes9.withoutLabel,\n                  classes9.textField\n                )}\n              >\n                <Input\n                  id=\"adornment-weight\"\n                  value={values9.weight}\n                  onChange={handleChange9(\"weight\")}\n                  endAdornment={\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\n                  }\n                  aria-describedby=\"weight-helper-text\"\n                  inputProps={{\n                    \"aria-label\": \"Weight\"\n                  }}\n                />\n                <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n              </FormControl>\n              <FormControl\n                className={clsx(classes9.margin, classes9.textField)}\n              >\n                <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n                <Input\n                  id=\"adornment-password\"\n                  type={values9.showPassword ? \"text\" : \"password\"}\n                  value={values9.password}\n                  onChange={handleChange9(\"password\")}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"Toggle password visibility\"\n                        onClick={handleClickShowPassword9}\n                      >\n                        {values9.showPassword ? (\n                          <Visibility />\n                        ) : (\n                          <VisibilityOff />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            </div>\n          </KTCodeExample>\n          <KTCodeExample\n            jsCode={jsCode11}\n            beforeCodeTitle=\"Filled Input Adornments\"\n            codeBlockHeight=\"400px\"\n          >\n            {\" \"}\n            <div className={classes11.root}>\n              <TextField\n                id=\"filled-simple-start-adornment\"\n                className={clsx(classes11.margin, classes11.textField)}\n                variant=\"filled\"\n                label=\"With filled TextField\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\n                  )\n                }}\n              />\n              <TextField\n                select\n                className={clsx(classes11.margin, classes11.textField)}\n                variant=\"filled\"\n                label=\"With Select\"\n                value={values11.weightRange}\n                onChange={handleChange11(\"weightRange\")}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\n                  )\n                }}\n              >\n                {ranges.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                id=\"filled-adornment-amount\"\n                className={clsx(classes11.margin, classes11.textField)}\n                variant=\"filled\"\n                label=\"Amount\"\n                value={values11.amount}\n                onChange={handleChange11(\"amount\")}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">$</InputAdornment>\n                  )\n                }}\n              />\n              <TextField\n                id=\"filled-adornment-weight\"\n                className={clsx(classes11.margin, classes11.textField)}\n                variant=\"filled\"\n                label=\"Weight\"\n                value={values11.weight}\n                onChange={handleChange11(\"weight\")}\n                helperText=\"Weight\"\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\n                  )\n                }}\n              />\n              <TextField\n                id=\"filled-adornment-password\"\n                className={clsx(classes11.margin, classes11.textField)}\n                variant=\"filled\"\n                type={values11.showPassword ? \"text\" : \"password\"}\n                label=\"Password\"\n                value={values11.password}\n                onChange={handleChange11(\"password\")}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"Toggle password visibility\"\n                        onClick={handleClickShowPassword11}\n                      >\n                        {values11.showPassword ? (\n                          <VisibilityOff />\n                        ) : (\n                          <Visibility />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n              />\n            </div>\n          </KTCodeExample>\n        </div>\n        <div className=\"col-md-6\">\n          <KTCodeExample\n            jsCode={jsCode2}\n            beforeCodeTitle=\"Outlined\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>\n              <code>TextField</code> supports outlined styling.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <form className={classes2.container} noValidate autoComplete=\"off\">\n              <TextField\n                id=\"outlined-name\"\n                label=\"Name\"\n                className={classes2.textField}\n                value={values2.name}\n                onChange={handleChange2(\"name\")}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-uncontrolled\"\n                label=\"Uncontrolled\"\n                defaultValue=\"foo\"\n                className={classes2.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                required\n                id=\"outlined-required\"\n                label=\"Required\"\n                defaultValue=\"Hello World\"\n                className={classes2.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                error\n                id=\"outlined-error\"\n                label=\"Error\"\n                defaultValue=\"Hello World\"\n                className={classes2.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                disabled\n                id=\"outlined-disabled\"\n                label=\"Disabled\"\n                defaultValue=\"Hello World\"\n                className={classes2.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-email-input\"\n                label=\"Email\"\n                className={classes2.textField}\n                type=\"email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-password-input\"\n                label=\"Password\"\n                className={classes2.textField}\n                type=\"password\"\n                autoComplete=\"current-password\"\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-read-only-input\"\n                label=\"Read Only\"\n                defaultValue=\"Hello World\"\n                className={classes2.textField}\n                margin=\"normal\"\n                InputProps={{\n                  readOnly: true\n                }}\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-dense\"\n                label=\"Dense\"\n                className={clsx(classes2.textField, classes2.dense)}\n                margin=\"dense\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-dense-multiline\"\n                label=\"Dense multiline\"\n                className={clsx(classes2.textField, classes2.dense)}\n                margin=\"dense\"\n                variant=\"outlined\"\n                multiline\n                rowsMax=\"4\"\n              />\n              <TextField\n                id=\"outlined-multiline-flexible\"\n                label=\"Multiline\"\n                multiline\n                rowsMax=\"4\"\n                value={values2.multiline}\n                onChange={handleChange2(\"multiline\")}\n                className={classes2.textField}\n                margin=\"normal\"\n                helperText=\"hello\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Multiline\"\n                multiline\n                rows=\"4\"\n                defaultValue=\"Default Value\"\n                className={classes2.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-helperText\"\n                label=\"Helper text\"\n                defaultValue=\"Default Value\"\n                className={classes2.textField}\n                helperText=\"Some important text\"\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-with-placeholder\"\n                label=\"With placeholder\"\n                placeholder=\"Placeholder\"\n                className={classes2.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-textarea\"\n                label=\"Multiline Placeholder\"\n                placeholder=\"Placeholder\"\n                multiline\n                className={classes2.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-number\"\n                label=\"Number\"\n                value={values2.age}\n                onChange={handleChange2(\"age\")}\n                type=\"number\"\n                className={classes2.textField}\n                InputLabelProps={{\n                  shrink: true\n                }}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-search\"\n                label=\"Search field\"\n                type=\"search\"\n                className={classes2.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"outlined-select-currency\"\n                select\n                label=\"Select\"\n                className={classes2.textField}\n                value={values2.currency}\n                onChange={handleChange2(\"currency\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes2.menu\n                  }\n                }}\n                helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"outlined\"\n              >\n                {currencies.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                id=\"outlined-select-currency-native\"\n                select\n                label=\"Native select\"\n                className={classes2.textField}\n                value={values2.currency}\n                onChange={handleChange(\"currency\")}\n                SelectProps={{\n                  native: true,\n                  MenuProps: {\n                    className: classes2.menu\n                  }\n                }}\n                helperText=\"Please select your currency\"\n                margin=\"normal\"\n                variant=\"outlined\"\n              >\n                {currencies.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n              <TextField\n                id=\"outlined-full-width\"\n                label=\"Label\"\n                style={{ margin: 8 }}\n                placeholder=\"Placeholder\"\n                helperText=\"Full width!\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n              <TextField\n                id=\"outlined-bare\"\n                className={classes2.textField}\n                defaultValue=\"Bare\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                inputProps={{ \"aria-label\": \"bare\" }}\n              />\n            </form>\n          </KTCodeExample>\n\n          <KTCodeExample\n            jsCode={jsCode4}\n            beforeCodeTitle=\"Components\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>\n              <code>TextField</code> is composed of smaller components ({\" \"}\n              <code>FormControl</code>, <code>Input</code>,{\" \"}\n              <code>FilledInput</code>, <code>InputLabel</code>,{\" \"}\n              <code>OutlinedInput</code>, and <code>FormHelperText</code> ) that\n              you can leverage directly to significantly customize your form\n              inputs.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div className={classes4.container}>\n              <FormControl className={classes4.formControl}>\n                <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n                <Input\n                  id=\"component-simple\"\n                  value={name4}\n                  onChange={handleChange4}\n                />\n              </FormControl>\n              <FormControl className={classes4.formControl}>\n                <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\n                <Input\n                  id=\"component-helper\"\n                  value={name4}\n                  onChange={handleChange4}\n                  aria-describedby=\"component-helper-text\"\n                />\n                <FormHelperText id=\"component-helper-text\">\n                  Some important helper text\n                </FormHelperText>\n              </FormControl>\n              <FormControl className={classes4.formControl} disabled>\n                <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\n                <Input\n                  id=\"component-disabled\"\n                  value={name4}\n                  onChange={handleChange4}\n                />\n                <FormHelperText>Disabled</FormHelperText>\n              </FormControl>\n              <FormControl className={classes4.formControl} error>\n                <InputLabel htmlFor=\"component-error\">Name</InputLabel>\n                <Input\n                  id=\"component-error\"\n                  value={name4}\n                  onChange={handleChange4}\n                  aria-describedby=\"component-error-text\"\n                />\n                <FormHelperText id=\"component-error-text\">Error</FormHelperText>\n              </FormControl>\n              <FormControl className={classes4.formControl} variant=\"outlined\">\n                <InputLabel ref={labelRef4} htmlFor=\"component-outlined\">\n                  Name\n                </InputLabel>\n                <OutlinedInput\n                  id=\"component-outlined\"\n                  value={name4}\n                  onChange={handleChange4}\n                  labelWidth={labelWidth4}\n                />\n              </FormControl>\n              <FormControl className={classes4.formControl} variant=\"filled\">\n                <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\n                <FilledInput\n                  id=\"component-filled\"\n                  value={name4}\n                  onChange={handleChange4}\n                />\n              </FormControl>\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample\n            jsCode={jsCode6}\n            beforeCodeTitle=\"Layout\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>\n              <code>TextField</code>, <code>FormControl</code> allow the\n              specification of <code>margin</code> to alter the vertical spacing\n              of inputs. Using <code>none</code> (default) will not apply\n              margins to the <code>FormControl</code>, whereas{\" \"}\n              <code>dense</code> and <code>normal</code> will as well as alter\n              other styles to meet the specification.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div className={classes6.container}>\n              <TextField\n                label=\"None\"\n                id=\"margin-none\"\n                defaultValue=\"Default Value\"\n                className={classes6.textField}\n                helperText=\"Some important text\"\n              />\n              <TextField\n                label=\"Dense\"\n                id=\"margin-dense\"\n                defaultValue=\"Default Value\"\n                className={classes6.textField}\n                helperText=\"Some important text\"\n                margin=\"dense\"\n              />\n              <TextField\n                label=\"Normal\"\n                id=\"margin-normal\"\n                defaultValue=\"Default Value\"\n                className={classes6.textField}\n                helperText=\"Some important text\"\n                margin=\"normal\"\n              />\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample\n            jsCode={jsCode8}\n            beforeCodeTitle=\"Customized inputs using InputBase\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>\n              Customization does not stop at CSS, you can use composition to\n              build custom components and give your app a unique feel. Below is\n              an example using the <code>InputBase</code> component, inspired by\n              Google Maps.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <Paper className={classes8.root}>\n              <IconButton className={classes8.iconButton} aria-label=\"Menu\">\n                <i className=\"flaticon-layer\"></i>\n              </IconButton>\n              <InputBase\n                className={classes8.input}\n                placeholder=\"Search Google Maps\"\n                inputProps={{ \"aria-label\": \"Search Google Maps\" }}\n              />\n              <IconButton className={classes8.iconButton} aria-label=\"Search\">\n                <i className=\"flaticon-search\"></i>\n              </IconButton>\n              <Divider className={classes8.divider} />\n              <IconButton\n                color=\"primary\"\n                className={classes8.iconButton}\n                aria-label=\"Directions\"\n              >\n                <i className=\"fa fa-chevron-circle-right\"></i>\n              </IconButton>\n            </Paper>\n          </KTCodeExample>\n\n          <KTCodeExample\n            jsCode={jsCode10}\n            beforeCodeTitle=\"With icon\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>Icons can be specified as prepended or appended.</span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div>\n              <FormControl className={classes10.margin}>\n                <InputLabel htmlFor=\"input-with-icon-adornment\">\n                  With a start adornment\n                </InputLabel>\n                <Input\n                  id=\"input-with-icon-adornment\"\n                  startAdornment={\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n              <TextField\n                className={classes10.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"TextField\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  )\n                }}\n              />\n              <div className={classes10.margin}>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <AccountCircle />\n                  </Grid>\n                  <Grid item>\n                    <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample\n            jsCode={jsCode12}\n            beforeCodeTitle=\"Outlined Input Adornments\"\n            codeBlockHeight=\"400px\"\n          >\n            <div className={classes12.root}>\n              <TextField\n                id=\"outlined-simple-start-adornment\"\n                className={clsx(classes12.margin, classes12.textField)}\n                variant=\"outlined\"\n                label=\"With outlined TextField\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\n                  )\n                }}\n              />\n              <TextField\n                select\n                className={clsx(classes12.margin, classes12.textField)}\n                variant=\"outlined\"\n                label=\"With Select\"\n                value={values12.weightRange}\n                onChange={handleChange12(\"weightRange\")}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\n                  )\n                }}\n              >\n                {ranges.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                id=\"outlined-adornment-amount\"\n                className={clsx(classes12.margin, classes12.textField)}\n                variant=\"outlined\"\n                label=\"Amount\"\n                value={values12.amount}\n                onChange={handleChange12(\"amount\")}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">$</InputAdornment>\n                  )\n                }}\n              />\n              <TextField\n                id=\"outlined-adornment-weight\"\n                className={clsx(classes12.margin, classes12.textField)}\n                variant=\"outlined\"\n                label=\"Weight\"\n                value={values12.weight}\n                onChange={handleChange12(\"weight\")}\n                helperText=\"Weight\"\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\n                  )\n                }}\n              />\n              <TextField\n                id=\"outlined-adornment-password\"\n                className={clsx(classes12.margin, classes12.textField)}\n                variant=\"outlined\"\n                type={values12.showPassword ? \"text\" : \"password\"}\n                label=\"Password\"\n                value={values12.password}\n                onChange={handleChange12(\"password\")}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"Toggle password visibility\"\n                        onClick={handleClickShowPassword12}\n                      >\n                        {values12.showPassword ? (\n                          <VisibilityOff />\n                        ) : (\n                          <Visibility />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n              />\n            </div>\n          </KTCodeExample>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst jsCode1 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '€',\n  },\n  {\n    value: 'BTC',\n    label: '฿',\n  },\n  {\n    value: 'JPY',\n    label: '¥',\n  },\n];\n\nexport default function TextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"standard-name\"\n        label=\"Name\"\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange('name')}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-uncontrolled\"\n        label=\"Uncontrolled\"\n        defaultValue=\"foo\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        required\n        id=\"standard-required\"\n        label=\"Required\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        error\n        id=\"standard-error\"\n        label=\"Error\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        disabled\n        id=\"standard-disabled\"\n        label=\"Disabled\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-password-input\"\n        label=\"Password\"\n        className={classes.textField}\n        type=\"password\"\n        autoComplete=\"current-password\"\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-read-only-input\"\n        label=\"Read Only\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n      <TextField\n        id=\"standard-dense\"\n        label=\"Dense\"\n        className={clsx(classes.textField, classes.dense)}\n        margin=\"dense\"\n      />\n      <TextField\n        id=\"standard-multiline-flexible\"\n        label=\"Multiline\"\n        multiline\n        rowsMax=\"4\"\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-multiline-static\"\n        label=\"Multiline\"\n        multiline\n        rows=\"4\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-helperText\"\n        label=\"Helper text\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-with-placeholder\"\n        label=\"With placeholder\"\n        placeholder=\"Placeholder\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-textarea\"\n        label=\"With placeholder multiline\"\n        placeholder=\"Placeholder\"\n        multiline\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-number\"\n        label=\"Number\"\n        value={values.age}\n        onChange={handleChange('age')}\n        type=\"number\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-search\"\n        label=\"Search field\"\n        type=\"search\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"standard-select-currency\"\n        select\n        label=\"Select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your currency\"\n        margin=\"normal\"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"standard-select-currency-native\"\n        select\n        label=\"Native select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your currency\"\n        margin=\"normal\"\n      >\n        {currencies.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id=\"standard-full-width\"\n        label=\"Label\"\n        style={{ margin: 8 }}\n        placeholder=\"Placeholder\"\n        helperText=\"Full width!\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id=\"standard-bare\"\n        className={classes.textField}\n        defaultValue=\"Bare\"\n        margin=\"normal\"\n        inputProps={{ 'aria-label': 'bare' }}\n      />\n    </form>\n  );\n}\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '€',\n  },\n  {\n    value: 'BTC',\n    label: '฿',\n  },\n  {\n    value: 'JPY',\n    label: '¥',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function OutlinedTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"outlined-name\"\n        label=\"Name\"\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange('name')}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-uncontrolled\"\n        label=\"Uncontrolled\"\n        defaultValue=\"foo\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Required\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        error\n        id=\"outlined-error\"\n        label=\"Error\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        disabled\n        id=\"outlined-disabled\"\n        label=\"Disabled\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-email-input\"\n        label=\"Email\"\n        className={classes.textField}\n        type=\"email\"\n        name=\"email\"\n        autoComplete=\"email\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-password-input\"\n        label=\"Password\"\n        className={classes.textField}\n        type=\"password\"\n        autoComplete=\"current-password\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-read-only-input\"\n        label=\"Read Only\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        InputProps={{\n          readOnly: true,\n        }}\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-dense\"\n        label=\"Dense\"\n        className={clsx(classes.textField, classes.dense)}\n        margin=\"dense\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-dense-multiline\"\n        label=\"Dense multiline\"\n        className={clsx(classes.textField, classes.dense)}\n        margin=\"dense\"\n        variant=\"outlined\"\n        multiline\n        rowsMax=\"4\"\n      />\n      <TextField\n        id=\"outlined-multiline-flexible\"\n        label=\"Multiline\"\n        multiline\n        rowsMax=\"4\"\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin=\"normal\"\n        helperText=\"hello\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-multiline-static\"\n        label=\"Multiline\"\n        multiline\n        rows=\"4\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-helperText\"\n        label=\"Helper text\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-with-placeholder\"\n        label=\"With placeholder\"\n        placeholder=\"Placeholder\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Multiline Placeholder\"\n        placeholder=\"Placeholder\"\n        multiline\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-number\"\n        label=\"Number\"\n        value={values.age}\n        onChange={handleChange('age')}\n        type=\"number\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-search\"\n        label=\"Search field\"\n        type=\"search\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"outlined-select-currency\"\n        select\n        label=\"Select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your currency\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"outlined-select-currency-native\"\n        select\n        label=\"Native select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your currency\"\n        margin=\"normal\"\n        variant=\"outlined\"\n      >\n        {currencies.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id=\"outlined-full-width\"\n        label=\"Label\"\n        style={{ margin: 8 }}\n        placeholder=\"Placeholder\"\n        helperText=\"Full width!\"\n        fullWidth\n        margin=\"normal\"\n        variant=\"outlined\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id=\"outlined-bare\"\n        className={classes.textField}\n        defaultValue=\"Bare\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        inputProps={{ 'aria-label': 'bare' }}\n      />\n    </form>\n  );\n}\n`;\nconst jsCode3 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$',\n  },\n  {\n    value: 'EUR',\n    label: '€',\n  },\n  {\n    value: 'BTC',\n    label: '฿',\n  },\n  {\n    value: 'JPY',\n    label: '¥',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function FilledTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"filled-name\"\n        label=\"Name\"\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange('name')}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-uncontrolled\"\n        label=\"Uncontrolled\"\n        defaultValue=\"foo\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        required\n        id=\"filled-required\"\n        label=\"Required\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        error\n        id=\"filled-error\"\n        label=\"Error\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        disabled\n        id=\"filled-disabled\"\n        label=\"Disabled\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-email-input\"\n        label=\"Email\"\n        className={classes.textField}\n        type=\"email\"\n        name=\"email\"\n        autoComplete=\"email\"\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-password-input\"\n        label=\"Password\"\n        className={classes.textField}\n        type=\"password\"\n        autoComplete=\"current-password\"\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-read-only-input\"\n        label=\"Read Only\"\n        defaultValue=\"Hello World\"\n        className={classes.textField}\n        margin=\"normal\"\n        InputProps={{\n          readOnly: true,\n        }}\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-dense\"\n        label=\"Dense\"\n        className={clsx(classes.textField, classes.dense)}\n        margin=\"dense\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-dense-multiline\"\n        label=\"Dense multiline\"\n        className={clsx(classes.textField, classes.dense)}\n        margin=\"dense\"\n        variant=\"filled\"\n        multiline\n        rowsMax=\"4\"\n      />\n      <TextField\n        id=\"filled-multiline-flexible\"\n        label=\"Multiline\"\n        multiline\n        rowsMax=\"4\"\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin=\"normal\"\n        helperText=\"hello\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-multiline-static\"\n        label=\"Multiline\"\n        multiline\n        rows=\"4\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-helperText\"\n        label=\"Helper text\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-with-placeholder\"\n        label=\"With placeholder\"\n        placeholder=\"Placeholder\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-textarea\"\n        label=\"Multiline Placeholder\"\n        placeholder=\"Placeholder\"\n        multiline\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-number\"\n        label=\"Number\"\n        value={values.age}\n        onChange={handleChange('age')}\n        type=\"number\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-search\"\n        label=\"Search field\"\n        type=\"search\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-select-currency\"\n        select\n        label=\"Select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your currency\"\n        margin=\"normal\"\n        variant=\"filled\"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"filled-select-currency-native\"\n        select\n        label=\"Native select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText=\"Please select your currency\"\n        margin=\"normal\"\n        variant=\"filled\"\n      >\n        {currencies.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id=\"filled-full-width\"\n        label=\"Label\"\n        style={{ margin: 8 }}\n        placeholder=\"Placeholder\"\n        helperText=\"Full width!\"\n        fullWidth\n        margin=\"normal\"\n        variant=\"filled\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id=\"filled-bare\"\n        className={classes.textField}\n        defaultValue=\"Bare\"\n        margin=\"normal\"\n        variant=\"filled\"\n        inputProps={{ 'aria-label': 'bare' }}\n      />\n    </form>\n  );\n}\n`;\nconst jsCode4 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function ComposedTextField() {\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const [name, setName] = React.useState('Composed TextField');\n  const labelRef = React.useRef(null);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    setLabelWidth(labelRef.current.offsetWidth);\n  }, []);\n\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n        <Input id=\"component-simple\" value={name} onChange={handleChange} />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\n        <Input\n          id=\"component-helper\"\n          value={name}\n          onChange={handleChange}\n          aria-describedby=\"component-helper-text\"\n        />\n        <FormHelperText id=\"component-helper-text\">Some important helper text</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} disabled>\n        <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\n        <Input id=\"component-disabled\" value={name} onChange={handleChange} />\n        <FormHelperText>Disabled</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} error>\n        <InputLabel htmlFor=\"component-error\">Name</InputLabel>\n        <Input\n          id=\"component-error\"\n          value={name}\n          onChange={handleChange}\n          aria-describedby=\"component-error-text\"\n        />\n        <FormHelperText id=\"component-error-text\">Error</FormHelperText>\n      </FormControl>\n      <FormControl className={classes.formControl} variant=\"outlined\">\n        <InputLabel ref={labelRef} htmlFor=\"component-outlined\">\n          Name\n        </InputLabel>\n        <OutlinedInput\n          id=\"component-outlined\"\n          value={name}\n          onChange={handleChange}\n          labelWidth={labelWidth}\n        />\n      </FormControl>\n      <FormControl className={classes.formControl} variant=\"filled\">\n        <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\n        <FilledInput id=\"component-filled\" value={name} onChange={handleChange} />\n      </FormControl>\n    </div>\n  );\n}\n`;\nconst jsCode5 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  input: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function Inputs() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <Input\n        defaultValue=\"Hello world\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n      <Input\n        placeholder=\"Placeholder\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n      <Input\n        value=\"Disabled\"\n        className={classes.input}\n        disabled\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n      <Input\n        defaultValue=\"Error\"\n        className={classes.input}\n        error\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode6 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nexport default function TextFieldMargins() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <TextField\n        label=\"None\"\n        id=\"margin-none\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n      />\n      <TextField\n        label=\"Dense\"\n        id=\"margin-dense\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"dense\"\n      />\n      <TextField\n        label=\"Normal\"\n        id=\"margin-normal\"\n        defaultValue=\"Default Value\"\n        className={classes.textField}\n        helperText=\"Some important text\"\n        margin=\"normal\"\n      />\n    </div>\n  );\n}\n`;\nconst jsCode7 = `\nimport React from 'react';\nimport { fade, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { green } from '@material-ui/core/colors';\n\nconst CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'green',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red',\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green',\n      },\n    },\n  },\n})(TextField);\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      boxShadow: \\`\\${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem\\`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: '1px solid #e2e2e1',\n    overflow: 'hidden',\n    borderRadius: 4,\n    backgroundColor: '#fcfcfb',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    '&:hover': {\n      backgroundColor: '#fff',\n    },\n    '&$focused': {\n      backgroundColor: '#fff',\n      boxShadow: \\`\\${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px\\`,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  focused: {},\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nexport default function CustomizedInputs() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssTextField className={classes.margin} id=\"custom-css-standard-input\" label=\"Custom CSS\" />\n      <CssTextField\n        className={classes.margin}\n        label=\"Custom CSS\"\n        variant=\"outlined\"\n        id=\"custom-css-outlined-input\"\n      />\n      <ThemeProvider theme={theme}>\n        <TextField\n          className={classes.margin}\n          label=\"ThemeProvider\"\n          id=\"mui-theme-provider-standard-input\"\n        />\n        <TextField\n          className={classes.margin}\n          label=\"ThemeProvider\"\n          variant=\"outlined\"\n          id=\"mui-theme-provider-outlined-input\"\n        />\n      </ThemeProvider>\n      <FormControl className={classes.margin}>\n        <InputLabel shrink htmlFor=\"bootstrap-input\">\n          Bootstrap\n        </InputLabel>\n        <BootstrapInput defaultValue=\"react-bootstrap\" id=\"bootstrap-input\" />\n      </FormControl>\n      <RedditTextField\n        label=\"Reddit\"\n        className={classes.margin}\n        defaultValue=\"react-reddit\"\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n      <InputBase\n        className={classes.margin}\n        defaultValue=\"Naked input\"\n        inputProps={{ 'aria-label': 'naked' }}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode8 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n});\n\nexport default function CustomizedInputBase() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <IconButton className={classes.iconButton} aria-label=\"Menu\">\n        <MenuIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search Google Maps\"\n        inputProps={{ 'aria-label': 'Search Google Maps' }}\n      />\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\">\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n`;\nconst jsCode9 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function InputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        label=\"With normal TextField\"\n        id=\"simple-start-adornment\"\n        className={clsx(classes.margin, classes.textField)}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        label=\"With Select\"\n        className={clsx(classes.margin, classes.textField)}\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\n        <Input\n          id=\"adornment-amount\"\n          value={values.amount}\n          onChange={handleChange('amount')}\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n        />\n      </FormControl>\n      <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\n        <Input\n          id=\"adornment-weight\"\n          value={values.weight}\n          onChange={handleChange('weight')}\n          endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n          aria-describedby=\"weight-helper-text\"\n          inputProps={{\n            'aria-label': 'Weight',\n          }}\n        />\n        <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n      </FormControl>\n      <FormControl className={clsx(classes.margin, classes.textField)}>\n        <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n        <Input\n          id=\"adornment-password\"\n          type={values.showPassword ? 'text' : 'password'}\n          value={values.password}\n          onChange={handleChange('password')}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton aria-label=\"Toggle password visibility\" onClick={handleClickShowPassword}>\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    </div>\n  );\n}\n`;\nconst jsCode10 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function InputWithIcon() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"input-with-icon-adornment\">With a start adornment</InputLabel>\n        <Input\n          id=\"input-with-icon-adornment\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <TextField\n        className={classes.margin}\n        id=\"input-with-icon-textfield\"\n        label=\"TextField\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <div className={classes.margin}>\n        <Grid container spacing={1} alignItems=\"flex-end\">\n          <Grid item>\n            <AccountCircle />\n          </Grid>\n          <Grid item>\n            <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n`;\nconst jsCode11 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function FilledInputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id=\"filled-simple-start-adornment\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"filled\"\n        label=\"With filled TextField\"\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"filled\"\n        label=\"With Select\"\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"filled-adornment-amount\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"filled\"\n        label=\"Amount\"\n        value={values.amount}\n        onChange={handleChange('amount')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"filled-adornment-weight\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"filled\"\n        label=\"Weight\"\n        value={values.weight}\n        onChange={handleChange('weight')}\n        helperText=\"Weight\"\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"filled-adornment-password\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"filled\"\n        type={values.showPassword ? 'text' : 'password'}\n        label=\"Password\"\n        value={values.password}\n        onChange={handleChange('password')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                edge=\"end\"\n                aria-label=\"Toggle password visibility\"\n                onClick={handleClickShowPassword}\n              >\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode12 = `\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nexport default function OutlinedInputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id=\"outlined-simple-start-adornment\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"With outlined TextField\"\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"With Select\"\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"outlined-adornment-amount\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"Amount\"\n        value={values.amount}\n        onChange={handleChange('amount')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"outlined-adornment-weight\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"Weight\"\n        value={values.weight}\n        onChange={handleChange('weight')}\n        helperText=\"Weight\"\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"outlined-adornment-password\"\n        className={clsx(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        type={values.showPassword ? 'text' : 'password'}\n        label=\"Password\"\n        value={values.password}\n        onChange={handleChange('password')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                edge=\"end\"\n                aria-label=\"Toggle password visibility\"\n                onClick={handleClickShowPassword}\n              >\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n}\n`;\n"]},"metadata":{},"sourceType":"module"}