{"ast":null,"code":"import _slicedToArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/UserProfile/AccountInformation.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\nimport * as auth from \"../Auth\";\n\nfunction AccountInformation(props) {\n  // Fields\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setloading = _useState2[1];\n\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  }, shallowEqual);\n  useEffect(function () {}, [user]); // Methods\n\n  var saveUser = function saveUser(values, setStatus, setSubmitting) {\n    setloading(true);\n    var updatedUser = Object.assign(user, {\n      username: values.username,\n      email: values.email,\n      language: values.language,\n      timeZone: values.timeZone,\n      communication: {\n        email: values.communicationEmail,\n        sms: values.communicationSMS,\n        phone: values.communicationPhone\n      }\n    }); // user for update preparation\n\n    dispatch(props.setUser(updatedUser));\n    setTimeout(function () {\n      setloading(false);\n      setSubmitting(false); // Do request to your server for user update, we just imitate user update there, For example:\n      // update(updatedUser)\n      //  .then(()) => {\n      //    setloading(false);\n      //  })\n      //  .catch((error) => {\n      //    setloading(false);\n      //    setSubmitting(false);\n      //    setStatus(error);\n      // });\n    }, 1000);\n  }; // UI Helpers\n\n\n  var initialValues = {\n    username: user.username,\n    email: user.email,\n    language: user.language,\n    timeZone: user.timeZone,\n    communicationEmail: user.communication.email,\n    communicationSMS: user.communication.sms,\n    communicationPhone: user.communication.phone\n  };\n  var Schema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required\"),\n    email: Yup.string().email(\"Wrong email format\").required(\"Email is required\"),\n    language: Yup.string(),\n    timeZone: Yup.string(),\n    communicationEmail: Yup.bool(),\n    communicationSMS: Yup.bool(),\n    communicationPhone: Yup.bool()\n  });\n\n  var getInputClasses = function getInputClasses(fieldname) {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n\n  var formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: Schema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setStatus = _ref.setStatus,\n          setSubmitting = _ref.setSubmitting;\n      saveUser(values, setStatus, setSubmitting);\n    },\n    onReset: function onReset(values, _ref2) {\n      var resetForm = _ref2.resetForm;\n      resetForm();\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"card card-custom\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(ModalProgressBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title align-items-start flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-label font-weight-bolder text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Account Information\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-muted font-weight-bold font-size-sm mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Change your account settings\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success mr-2\",\n    disabled: formik.isSubmitting || formik.touched && !formik.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Save Changes\", formik.isSubmitting), /*#__PURE__*/React.createElement(Link, {\n    to: \"/user-profile/profile-overview\",\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-weight-bold mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Account:\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    className: \"form-control form-control-lg form-control-solid \".concat(getInputClasses(\"username\")),\n    name: \"username\"\n  }, formik.getFieldProps(\"username\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  })), formik.touched.username && formik.errors.username ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, formik.errors.username) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg input-group-solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-at\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Email\",\n    className: \"form-control form-control-lg form-control-solid \".concat(getInputClasses(\"email\")),\n    name: \"email\"\n  }, formik.getFieldProps(\"email\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  })), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, formik.errors.email) : null), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"Email will not be publicly displayed.\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, \"Learn more\"), \".\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \"Language\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", Object.assign({\n    className: \"form-control form-control-lg form-control-solid\",\n    name: \"language\"\n  }, formik.getFieldProps(\"language\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Select Language...\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, \"Bahasa Indonesia - Indonesian\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"msa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, \"Bahasa Melayu - Malay\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ca\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \"Catal\\xE0 - Catalan\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"cs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"\\u010Ce\\u0161tina - Czech\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"da\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"Dansk - Danish\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"de\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, \"Deutsch - German\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, \"English\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en-gb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, \"English UK - British English\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"es\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, \"Espa\\xF1ol - Spanish\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"eu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, \"Euskara - Basque (beta)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"fil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, \"Filipino\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"fr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, \"Fran\\xE7ais - French\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, \"Portugu\\xEAs - Portuguese\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \"Rom\\xE2n\\u0103 - Romanian\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ru\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439 - Russian\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, \"\\u0421\\u0440\\u043F\\u0441\\u043A\\u0438 - Serbian\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"uk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, \"\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430 \\u043C\\u043E\\u0432\\u0430 - Ukrainian\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, \"Time Zone\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", Object.assign({\n    className: \"form-control form-control-lg form-control-solid\",\n    name: \"timeZone\"\n  }, formik.getFieldProps(\"timeZone\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"International Date Line West\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, \"(GMT-11:00) International Date Line West\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Midway Island\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"(GMT-11:00) Midway Island\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Central America\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"(GMT-06:00) Central America\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Central Time (US & Canada)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, \"(GMT-05:00) Central Time (US & Canada)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Eastern Time (US & Canada)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, \"(GMT-04:00) Eastern Time (US & Canada)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Indiana (East)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, \"(GMT-04:00) Indiana (East)\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Georgetown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, \"(GMT-04:00) Georgetown\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Buenos Aires\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, \"(GMT-03:00) Buenos Aires\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Newfoundland\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, \"(GMT-02:30) Newfoundland\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Mid-Atlantic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, \"(GMT-02:00) Mid-Atlantic\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Cape Verde Is.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, \"(GMT-01:00) Cape Verde Is.\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"UTC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, \"(GMT) UTC\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Dublin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, \"(GMT+01:00) Dublin\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Edinburgh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, \"(GMT+01:00) Edinburgh\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"London\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, \"(GMT+01:00) London\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Prague\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, \"(GMT+02:00) Prague\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Helsinki\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, \"(GMT+03:00) Helsinki\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Abu Dhabi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, \"(GMT+04:00) Abu Dhabi\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Tehran\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, \"(GMT+04:30) Tehran\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Islamabad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, \"(GMT+05:00) Islamabad\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Karachi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, \"(GMT+05:00) Karachi\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Tashkent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, \"(GMT+05:00) Tashkent\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Kathmandu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, \"(GMT+05:45) Kathmandu\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Astana\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, \"(GMT+06:00) Astana\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"Communication\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"communicationEmail\",\n    checked: formik.values.communicationEmail,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }), \"Email\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"checkbox\",\n    name: \"communicationSMS\",\n    checked: formik.values.communicationSMS\n  }, formik.getFieldProps(\"communicationSMS\"), {\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 19\n    }\n  }), \"SMS\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"checkbox\",\n    name: \"communicationPhone\",\n    checked: formik.values.communicationPhone\n  }, formik.getFieldProps(\"communicationPhone\"), {\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  }), \"Phone\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-weight-bold mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, \"Security:\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, \"Login verification\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light-primary font-weight-bold btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }, \"Setup login verification\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-text text-muted pt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, \"After you log in, you will be asked for additional information to confirm your identity and protect your account from being compromised. \", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  }, \"Learn more\"), \".\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"col-xl-3 col-lg-3 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }, \"Password reset verification\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 19\n    }\n  }), \"Require personal information to reset your password.\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-text text-muted py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, \"For extra security, this requires you to confirm your email or phone number when you reset your password.\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"font-weight-boldk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  }, \"Learn more\"), \".\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light-danger font-weight-bold btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  }, \"Deactivate your account ?\"))))));\n}\n\nexport default connect(null, auth.actions)(AccountInformation);","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/UserProfile/AccountInformation.js"],"names":["React","useState","useEffect","Link","useSelector","shallowEqual","connect","useDispatch","useFormik","Yup","ModalProgressBar","auth","AccountInformation","props","loading","setloading","dispatch","user","state","saveUser","values","setStatus","setSubmitting","updatedUser","Object","assign","username","email","language","timeZone","communication","communicationEmail","sms","communicationSMS","phone","communicationPhone","setUser","setTimeout","initialValues","Schema","object","shape","string","required","bool","getInputClasses","fieldname","formik","touched","errors","validationSchema","onSubmit","onReset","resetForm","handleSubmit","isSubmitting","isValid","getFieldProps","handleChange","actions"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\nimport * as auth from \"../Auth\";\n\nfunction AccountInformation(props) {\n  // Fields\n  const [loading, setloading] = useState(false);\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.auth.user, shallowEqual);\n  useEffect(() => {}, [user]);\n\n  // Methods\n  const saveUser = (values, setStatus, setSubmitting) => {\n    setloading(true);\n    const updatedUser = Object.assign(user, {\n      username: values.username,\n      email: values.email,\n      language: values.language,\n      timeZone: values.timeZone,\n      communication: {\n        email: values.communicationEmail,\n        sms: values.communicationSMS,\n        phone: values.communicationPhone,\n      },\n    });\n    // user for update preparation\n    dispatch(props.setUser(updatedUser));\n    setTimeout(() => {\n      setloading(false);\n      setSubmitting(false);\n      // Do request to your server for user update, we just imitate user update there, For example:\n      // update(updatedUser)\n      //  .then(()) => {\n      //    setloading(false);\n      //  })\n      //  .catch((error) => {\n      //    setloading(false);\n      //    setSubmitting(false);\n      //    setStatus(error);\n      // });\n    }, 1000);\n  };\n  // UI Helpers\n  const initialValues = {\n    username: user.username,\n    email: user.email,\n    language: user.language,\n    timeZone: user.timeZone,\n    communicationEmail: user.communication.email,\n    communicationSMS: user.communication.sms,\n    communicationPhone: user.communication.phone,\n  };\n  const Schema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required\"),\n    email: Yup.string()\n      .email(\"Wrong email format\")\n      .required(\"Email is required\"),\n    language: Yup.string(),\n    timeZone: Yup.string(),\n    communicationEmail: Yup.bool(),\n    communicationSMS: Yup.bool(),\n    communicationPhone: Yup.bool(),\n  });\n  const getInputClasses = (fieldname) => {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Schema,\n    onSubmit: (values, { setStatus, setSubmitting }) => {\n      saveUser(values, setStatus, setSubmitting);\n    },\n    onReset: (values, { resetForm }) => {\n      resetForm();\n    },\n  });\n\n  return (\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\n      {loading && <ModalProgressBar />}\n\n      {/* begin::Header */}\n      <div className=\"card-header py-3\">\n        <div className=\"card-title align-items-start flex-column\">\n          <h3 className=\"card-label font-weight-bolder text-dark\">\n            Account Information\n          </h3>\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\n            Change your account settings\n          </span>\n        </div>\n        <div className=\"card-toolbar\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-success mr-2\"\n            disabled={\n              formik.isSubmitting || (formik.touched && !formik.isValid)\n            }\n          >\n            Save Changes\n            {formik.isSubmitting}\n          </button>\n          <Link\n            to=\"/user-profile/profile-overview\"\n            className=\"btn btn-secondary\"\n          >\n            Cancel\n          </Link>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Form */}\n      <div className=\"form\">\n        <div className=\"card-body\">\n          {/* begin::Heading */}\n          <div className=\"row\">\n            <label className=\"col-xl-3\"></label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <h5 className=\"font-weight-bold mb-6\">Account:</h5>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Username</label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div>\n                <input\n                  type=\"text\"\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\n                    \"username\"\n                  )}`}\n                  name=\"username\"\n                  {...formik.getFieldProps(\"username\")}\n                />\n                {formik.touched.username && formik.errors.username ? (\n                  <div className=\"invalid-feedback\">\n                    {formik.errors.username}\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Email Address\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div className=\"input-group input-group-lg input-group-solid\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">\n                    <i className=\"fa fa-at\"></i>\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\n                    \"email\"\n                  )}`}\n                  name=\"email\"\n                  {...formik.getFieldProps(\"email\")}\n                />\n                {formik.touched.email && formik.errors.email ? (\n                  <div className=\"invalid-feedback\">{formik.errors.email}</div>\n                ) : null}\n              </div>\n              <span className=\"form-text text-muted\">\n                Email will not be publicly displayed.{` `}\n                <a href=\"#\" className=\"font-weight-bold\">\n                  Learn more\n                </a>\n                .\n              </span>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Language</label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <select\n                className=\"form-control form-control-lg form-control-solid\"\n                name=\"language\"\n                {...formik.getFieldProps(\"language\")}\n              >\n                <option>Select Language...</option>\n                <option value=\"id\">Bahasa Indonesia - Indonesian</option>\n                <option value=\"msa\">Bahasa Melayu - Malay</option>\n                <option value=\"ca\">Català - Catalan</option>\n                <option value=\"cs\">Čeština - Czech</option>\n                <option value=\"da\">Dansk - Danish</option>\n                <option value=\"de\">Deutsch - German</option>\n                <option value=\"en\">English</option>\n                <option value=\"en-gb\">English UK - British English</option>\n                <option value=\"es\">Español - Spanish</option>\n                <option value=\"eu\">Euskara - Basque (beta)</option>\n                <option value=\"fil\">Filipino</option>\n                <option value=\"fr\">Français - French</option>\n                <option value=\"pt\">Português - Portuguese</option>\n                <option value=\"ro\">Română - Romanian</option>\n                <option value=\"ru\">Русский - Russian</option>\n                <option value=\"sr\">Српски - Serbian</option>\n                <option value=\"uk\">Українська мова - Ukrainian</option>\n              </select>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Time Zone\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <select\n                className=\"form-control form-control-lg form-control-solid\"\n                name=\"timeZone\"\n                {...formik.getFieldProps(\"timeZone\")}\n              >\n                <option value=\"International Date Line West\">\n                  (GMT-11:00) International Date Line West\n                </option>\n                <option value=\"Midway Island\">(GMT-11:00) Midway Island</option>\n\n                <option value=\"Central America\">\n                  (GMT-06:00) Central America\n                </option>\n                <option value=\"Central Time (US &amp; Canada)\">\n                  (GMT-05:00) Central Time (US &amp; Canada)\n                </option>\n                <option value=\"Eastern Time (US &amp; Canada)\">\n                  (GMT-04:00) Eastern Time (US &amp; Canada)\n                </option>\n                <option value=\"Indiana (East)\">\n                  (GMT-04:00) Indiana (East)\n                </option>\n\n                <option value=\"Georgetown\">(GMT-04:00) Georgetown</option>\n\n                <option value=\"Buenos Aires\">(GMT-03:00) Buenos Aires</option>\n                <option value=\"Newfoundland\">(GMT-02:30) Newfoundland</option>\n                <option value=\"Mid-Atlantic\">(GMT-02:00) Mid-Atlantic</option>\n                <option value=\"Cape Verde Is.\">\n                  (GMT-01:00) Cape Verde Is.\n                </option>\n                <option value=\"UTC\">(GMT) UTC</option>\n                <option value=\"Dublin\">(GMT+01:00) Dublin</option>\n                <option value=\"Edinburgh\">(GMT+01:00) Edinburgh</option>\n                <option value=\"London\">(GMT+01:00) London</option>\n                <option value=\"Prague\">(GMT+02:00) Prague</option>\n                <option value=\"Helsinki\">(GMT+03:00) Helsinki</option>\n                <option value=\"Abu Dhabi\">(GMT+04:00) Abu Dhabi</option>\n                <option value=\"Tehran\">(GMT+04:30) Tehran</option>\n                <option value=\"Islamabad\">(GMT+05:00) Islamabad</option>\n                <option value=\"Karachi\">(GMT+05:00) Karachi</option>\n                <option value=\"Tashkent\">(GMT+05:00) Tashkent</option>\n                <option value=\"Kathmandu\">(GMT+05:45) Kathmandu</option>\n                <option value=\"Astana\">(GMT+06:00) Astana</option>\n              </select>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row align-items-center\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Communication\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div className=\"checkbox-inline\">\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"communicationEmail\"\n                    checked={formik.values.communicationEmail}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>Email\n                </label>\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"communicationSMS\"\n                    checked={formik.values.communicationSMS}\n                    {...formik.getFieldProps(\"communicationSMS\")}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>SMS\n                </label>\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"communicationPhone\"\n                    checked={formik.values.communicationPhone}\n                    {...formik.getFieldProps(\"communicationPhone\")}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>Phone\n                </label>\n              </div>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"separator separator-dashed my-5\"></div>\n          {/* begin::Form Group */}\n          <div className=\"row\">\n            <label className=\"col-xl-3\"></label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <h5 className=\"font-weight-bold mb-6\">Security:</h5>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Login verification\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bold btn-sm\"\n              >\n                Setup login verification\n              </button>\n              <p className=\"form-text text-muted pt-2\">\n                After you log in, you will be asked for additional information\n                to confirm your identity and protect your account from being\n                compromised. {` `}\n                <a href=\"#\" className=\"font-weight-bold\">\n                  Learn more\n                </a>\n                .\n              </p>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Password reset verification\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div className=\"checkbox-inline\">\n                <label className=\"checkbox m-0\">\n                  <input type=\"checkbox\" />\n                  <span></span>Require personal information to reset your\n                  password.\n                </label>\n              </div>\n              <p className=\"form-text text-muted py-2\">\n                For extra security, this requires you to confirm your email or\n                phone number when you reset your password.\n                <a href=\"#\" className=\"font-weight-boldk\">\n                  Learn more\n                </a>\n                .\n              </p>\n              <button\n                type=\"button\"\n                className=\"btn btn-light-danger font-weight-bold btn-sm\"\n              >\n                Deactivate your account ?\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end::Form */}\n    </form>\n  );\n}\nexport default connect(null, auth.actions)(AccountInformation);\n"]},"metadata":{},"sourceType":"module"}