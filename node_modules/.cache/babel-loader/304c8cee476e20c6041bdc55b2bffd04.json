{"ast":null,"code":"var _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/_metronic/_partials/widgets/mixed/MixedWidget1.js\";\n\n/* eslint-disable react/jsx-no-undef */\n\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React, { useMemo, useEffect } from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport objectPath from \"object-path\";\nimport ApexCharts from \"apexcharts\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { toAbsoluteUrl } from \"../../../_helpers\";\nimport { useHtmlClassService } from \"../../../layout\";\nimport { DropdownMenu2 } from \"../../dropdowns\";\nexport function MixedWidget1(_ref) {\n  var className = _ref.className;\n  var uiService = useHtmlClassService();\n  var layoutProps = useMemo(function () {\n    return {\n      colorsGrayGray500: objectPath.get(uiService.config, \"js.colors.gray.gray500\"),\n      colorsGrayGray200: objectPath.get(uiService.config, \"js.colors.gray.gray200\"),\n      colorsGrayGray300: objectPath.get(uiService.config, \"js.colors.gray.gray300\"),\n      colorsThemeBaseDanger: objectPath.get(uiService.config, \"js.colors.theme.base.danger\"),\n      fontFamily: objectPath.get(uiService.config, \"js.fontFamily\")\n    };\n  }, [uiService]);\n  useEffect(function () {\n    var element = document.getElementById(\"kt_mixed_widget_1_chart\");\n\n    if (!element) {\n      return;\n    }\n\n    var options = getChartOptions(layoutProps);\n    var chart = new ApexCharts(element, options);\n    chart.render();\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [layoutProps]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card card-custom bg-gray-100 \".concat(className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header border-0 bg-danger py-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-title font-weight-bolder text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Sales Stat\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"dropdown-inline\",\n    drop: \"down\",\n    alignRight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    className: \"btn btn-transparent-white btn-sm font-weight-bolder dropdown-toggle px-5\",\n    variant: \"transparent\",\n    id: \"dropdown-toggle-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Export\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"dropdown-menu dropdown-menu-sm dropdown-menu-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownMenu2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body p-0 position-relative overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"kt_mixed_widget_1_chart\",\n    className: \"card-rounded-bottom bg-danger\",\n    style: {\n      height: \"200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-spacer mt-n25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col bg-light-warning px-6 py-8 rounded-xl mr-7 mb-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"svg-icon svg-icon-3x svg-icon-warning d-block my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SVG, {\n    src: toAbsoluteUrl(\"/media/svg/icons/Media/Equalizer.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"text-warning font-weight-bold font-size-h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Weekly Sales\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col bg-light-primary px-6 py-8 rounded-xl mb-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"svg-icon svg-icon-3x svg-icon-primary d-block my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SVG, {\n    src: toAbsoluteUrl(\"/media/svg/icons/Communication/Add-user.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"text-primary font-weight-bold font-size-h6 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"New Users\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col bg-light-danger px-6 py-8 rounded-xl mr-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"svg-icon svg-icon-3x svg-icon-danger d-block my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SVG, {\n    src: toAbsoluteUrl(\"/media/svg/icons/Design/Layers.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"text-danger font-weight-bold font-size-h6 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"Item Orders\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col bg-light-success px-6 py-8 rounded-xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"svg-icon svg-icon-3x svg-icon-success d-block my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SVG, {\n    src: toAbsoluteUrl(\"/media/svg/icons/Communication/Urgent-mail.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"text-success font-weight-bold font-size-h6 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Bug Reports\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resize-triggers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expand-trigger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"411px\",\n      height: \"461px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contract-trigger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction getChartOptions(layoutProps) {\n  var strokeColor = \"#D13647\";\n  var options = {\n    series: [{\n      name: \"Net Profit\",\n      data: [30, 45, 32, 70, 40, 40, 40]\n    }],\n    chart: {\n      type: \"area\",\n      height: 200,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        enabledOnSeries: undefined,\n        top: 5,\n        left: 0,\n        blur: 3,\n        color: strokeColor,\n        opacity: 0.5\n      }\n    },\n    plotOptions: {},\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: \"solid\",\n      opacity: 0\n    },\n    stroke: {\n      curve: \"smooth\",\n      show: true,\n      width: 3,\n      colors: [strokeColor]\n    },\n    xaxis: {\n      categories: [\"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\"],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false,\n        style: {\n          colors: layoutProps.colorsGrayGray500,\n          fontSize: \"12px\",\n          fontFamily: layoutProps.fontFamily\n        }\n      },\n      crosshairs: {\n        show: false,\n        position: \"front\",\n        stroke: {\n          color: layoutProps.colorsGrayGray300,\n          width: 1,\n          dashArray: 3\n        }\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 80,\n      labels: {\n        show: false,\n        style: {\n          colors: layoutProps.colorsGrayGray500,\n          fontSize: \"12px\",\n          fontFamily: layoutProps.fontFamily\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: \"none\",\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: \"none\",\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: \"none\",\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: \"12px\",\n        fontFamily: layoutProps.fontFamily\n      },\n      y: {\n        formatter: function formatter(val) {\n          return \"$\" + val + \" thousands\";\n        }\n      },\n      marker: {\n        show: false\n      }\n    },\n    colors: [\"transparent\"],\n    markers: {\n      colors: layoutProps.colorsThemeBaseDanger,\n      strokeColor: [strokeColor],\n      strokeWidth: 3\n    }\n  };\n  return options;\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/_metronic/_partials/widgets/mixed/MixedWidget1.js"],"names":["React","useMemo","useEffect","SVG","objectPath","ApexCharts","Dropdown","toAbsoluteUrl","useHtmlClassService","DropdownMenu2","MixedWidget1","className","uiService","layoutProps","colorsGrayGray500","get","config","colorsGrayGray200","colorsGrayGray300","colorsThemeBaseDanger","fontFamily","element","document","getElementById","options","getChartOptions","chart","render","cleanUp","destroy","height","width","strokeColor","series","name","data","type","toolbar","show","zoom","enabled","sparkline","dropShadow","enabledOnSeries","undefined","top","left","blur","color","opacity","plotOptions","legend","dataLabels","fill","stroke","curve","colors","xaxis","categories","axisBorder","axisTicks","labels","style","fontSize","crosshairs","position","dashArray","yaxis","min","max","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","tooltip","y","formatter","val","marker","markers","strokeWidth"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAeC,OAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,aAAR,QAA4B,mBAA5B;AACA,SAAQC,mBAAR,QAAkC,iBAAlC;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,OAAO,SAASC,YAAT,OAAqC;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAC1C,MAAMC,SAAS,GAAGJ,mBAAmB,EAArC;AAEA,MAAMK,WAAW,GAAGZ,OAAO,CAAC,YAAM;AAChC,WAAO;AACLa,MAAAA,iBAAiB,EAAEV,UAAU,CAACW,GAAX,CACjBH,SAAS,CAACI,MADO,EAEjB,wBAFiB,CADd;AAKLC,MAAAA,iBAAiB,EAAEb,UAAU,CAACW,GAAX,CACjBH,SAAS,CAACI,MADO,EAEjB,wBAFiB,CALd;AASLE,MAAAA,iBAAiB,EAAEd,UAAU,CAACW,GAAX,CACjBH,SAAS,CAACI,MADO,EAEjB,wBAFiB,CATd;AAaLG,MAAAA,qBAAqB,EAAEf,UAAU,CAACW,GAAX,CACrBH,SAAS,CAACI,MADW,EAErB,6BAFqB,CAblB;AAiBLI,MAAAA,UAAU,EAAEhB,UAAU,CAACW,GAAX,CAAeH,SAAS,CAACI,MAAzB,EAAiC,eAAjC;AAjBP,KAAP;AAmBD,GApB0B,EAoBxB,CAACJ,SAAD,CApBwB,CAA3B;AAsBAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMmB,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,yBAAxB,CAAhB;;AACA,QAAI,CAACF,OAAL,EAAc;AACZ;AACD;;AAED,QAAMG,OAAO,GAAGC,eAAe,CAACZ,WAAD,CAA/B;AAEA,QAAMa,KAAK,GAAG,IAAIrB,UAAJ,CAAegB,OAAf,EAAwBG,OAAxB,CAAd;AACAE,IAAAA,KAAK,CAACC,MAAN;AACA,WAAO,SAASC,OAAT,GAAmB;AACxBF,MAAAA,KAAK,CAACG,OAAN;AACD,KAFD;AAGD,GAbQ,EAaN,CAAChB,WAAD,CAbM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,yCAAkCF,SAAlC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,0CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,iBAApB;AAAsC,IAAA,IAAI,EAAC,MAA3C;AAAkD,IAAA,UAAU,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,CAAU,MAAV;AACE,IAAA,SAAS,EAAC,0EADZ;AAEE,IAAA,OAAO,EAAC,aAFV;AAGE,IAAA,EAAE,EAAC,qBAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,SAAS,EAAC,oDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CAFF,CAFF,eAmBE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,EAAE,EAAC,yBADL;AAEE,IAAA,SAAS,EAAC,+BAFZ;AAGE,IAAA,KAAK,EAAE;AAAEmB,MAAAA,MAAM,EAAE;AAAV,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,oDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEvB,aAAa,CAAC,sCAAD,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAME;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,SAAS,EAAC,4CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,oDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEA,aAAa,CAChB,6CADgB,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,SAAS,EAAC,iDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,CAdF,CADF,eA+BE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,mDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEA,aAAa,CAAC,oCAAD,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAME;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,SAAS,EAAC,gDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,oDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEA,aAAa,CAChB,gDADgB,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,SAAS,EAAC,iDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,CAdF,CA/BF,CATF,eAyEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEwB,MAAAA,KAAK,EAAE,OAAT;AAAkBD,MAAAA,MAAM,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAzEF,CAnBF,CADF;AAsGD;;AAED,SAASL,eAAT,CAAyBZ,WAAzB,EAAsC;AACpC,MAAMmB,WAAW,GAAG,SAApB;AAEA,MAAMR,OAAO,GAAG;AACdS,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAE,YADR;AAEEC,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAFR,KADM,CADM;AAOdT,IAAAA,KAAK,EAAE;AACLU,MAAAA,IAAI,EAAE,MADD;AAELN,MAAAA,MAAM,EAAE,GAFH;AAGLO,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC,OAHJ;AAMLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL,OAND;AASLC,MAAAA,SAAS,EAAE;AACTD,QAAAA,OAAO,EAAE;AADA,OATN;AAYLE,MAAAA,UAAU,EAAE;AACVF,QAAAA,OAAO,EAAE,IADC;AAEVG,QAAAA,eAAe,EAAEC,SAFP;AAGVC,QAAAA,GAAG,EAAE,CAHK;AAIVC,QAAAA,IAAI,EAAE,CAJI;AAKVC,QAAAA,IAAI,EAAE,CALI;AAMVC,QAAAA,KAAK,EAAEhB,WANG;AAOViB,QAAAA,OAAO,EAAE;AAPC;AAZP,KAPO;AA6BdC,IAAAA,WAAW,EAAE,EA7BC;AA8BdC,IAAAA,MAAM,EAAE;AACNb,MAAAA,IAAI,EAAE;AADA,KA9BM;AAiCdc,IAAAA,UAAU,EAAE;AACVZ,MAAAA,OAAO,EAAE;AADC,KAjCE;AAoCda,IAAAA,IAAI,EAAE;AACJjB,MAAAA,IAAI,EAAE,OADF;AAEJa,MAAAA,OAAO,EAAE;AAFL,KApCQ;AAwCdK,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,QADD;AAENjB,MAAAA,IAAI,EAAE,IAFA;AAGNP,MAAAA,KAAK,EAAE,CAHD;AAINyB,MAAAA,MAAM,EAAE,CAACxB,WAAD;AAJF,KAxCM;AA8CdyB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CADP;AAELC,MAAAA,UAAU,EAAE;AACVrB,QAAAA,IAAI,EAAE;AADI,OAFP;AAKLsB,MAAAA,SAAS,EAAE;AACTtB,QAAAA,IAAI,EAAE;AADG,OALN;AAQLuB,MAAAA,MAAM,EAAE;AACNvB,QAAAA,IAAI,EAAE,KADA;AAENwB,QAAAA,KAAK,EAAE;AACLN,UAAAA,MAAM,EAAE3C,WAAW,CAACC,iBADf;AAELiD,UAAAA,QAAQ,EAAE,MAFL;AAGL3C,UAAAA,UAAU,EAAEP,WAAW,CAACO;AAHnB;AAFD,OARH;AAgBL4C,MAAAA,UAAU,EAAE;AACV1B,QAAAA,IAAI,EAAE,KADI;AAEV2B,QAAAA,QAAQ,EAAE,OAFA;AAGVX,QAAAA,MAAM,EAAE;AACNN,UAAAA,KAAK,EAAEnC,WAAW,CAACK,iBADb;AAENa,UAAAA,KAAK,EAAE,CAFD;AAGNmC,UAAAA,SAAS,EAAE;AAHL;AAHE;AAhBP,KA9CO;AAwEdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,GAAG,EAAE,CADA;AAELC,MAAAA,GAAG,EAAE,EAFA;AAGLR,MAAAA,MAAM,EAAE;AACNvB,QAAAA,IAAI,EAAE,KADA;AAENwB,QAAAA,KAAK,EAAE;AACLN,UAAAA,MAAM,EAAE3C,WAAW,CAACC,iBADf;AAELiD,UAAAA,QAAQ,EAAE,MAFL;AAGL3C,UAAAA,UAAU,EAAEP,WAAW,CAACO;AAHnB;AAFD;AAHH,KAxEO;AAoFdkD,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE;AACNpC,UAAAA,IAAI,EAAE,MADA;AAENqC,UAAAA,KAAK,EAAE;AAFD;AADF,OADF;AAONC,MAAAA,KAAK,EAAE;AACLF,QAAAA,MAAM,EAAE;AACNpC,UAAAA,IAAI,EAAE,MADA;AAENqC,UAAAA,KAAK,EAAE;AAFD;AADH,OAPD;AAaNE,MAAAA,MAAM,EAAE;AACNC,QAAAA,gCAAgC,EAAE,KAD5B;AAENJ,QAAAA,MAAM,EAAE;AACNpC,UAAAA,IAAI,EAAE,MADA;AAENqC,UAAAA,KAAK,EAAE;AAFD;AAFF;AAbF,KApFM;AAyGdI,IAAAA,OAAO,EAAE;AACPf,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,MADL;AAEL3C,QAAAA,UAAU,EAAEP,WAAW,CAACO;AAFnB,OADA;AAKP0D,MAAAA,CAAC,EAAE;AACDC,QAAAA,SAAS,EAAE,mBAASC,GAAT,EAAc;AACvB,iBAAO,MAAMA,GAAN,GAAY,YAAnB;AACD;AAHA,OALI;AAUPC,MAAAA,MAAM,EAAE;AACN3C,QAAAA,IAAI,EAAE;AADA;AAVD,KAzGK;AAuHdkB,IAAAA,MAAM,EAAE,CAAC,aAAD,CAvHM;AAwHd0B,IAAAA,OAAO,EAAE;AACP1B,MAAAA,MAAM,EAAE3C,WAAW,CAACM,qBADb;AAEPa,MAAAA,WAAW,EAAE,CAACA,WAAD,CAFN;AAGPmD,MAAAA,WAAW,EAAE;AAHN;AAxHK,GAAhB;AA8HA,SAAO3D,OAAP;AACD","sourcesContent":["/* eslint-disable react/jsx-no-undef */\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React, {useMemo, useEffect} from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport objectPath from \"object-path\";\nimport ApexCharts from \"apexcharts\";\nimport {Dropdown} from \"react-bootstrap\";\nimport {toAbsoluteUrl} from \"../../../_helpers\";\nimport {useHtmlClassService} from \"../../../layout\";\nimport {DropdownMenu2} from \"../../dropdowns\";\n\nexport function MixedWidget1({ className }) {\n  const uiService = useHtmlClassService();\n\n  const layoutProps = useMemo(() => {\n    return {\n      colorsGrayGray500: objectPath.get(\n        uiService.config,\n        \"js.colors.gray.gray500\"\n      ),\n      colorsGrayGray200: objectPath.get(\n        uiService.config,\n        \"js.colors.gray.gray200\"\n      ),\n      colorsGrayGray300: objectPath.get(\n        uiService.config,\n        \"js.colors.gray.gray300\"\n      ),\n      colorsThemeBaseDanger: objectPath.get(\n        uiService.config,\n        \"js.colors.theme.base.danger\"\n      ),\n      fontFamily: objectPath.get(uiService.config, \"js.fontFamily\")\n    };\n  }, [uiService]);\n\n  useEffect(() => {\n    const element = document.getElementById(\"kt_mixed_widget_1_chart\");\n    if (!element) {\n      return;\n    }\n\n    const options = getChartOptions(layoutProps);\n\n    const chart = new ApexCharts(element, options);\n    chart.render();\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [layoutProps]);\n\n  return (\n    <div className={`card card-custom bg-gray-100 ${className}`}>\n      {/* Header */}\n      <div className=\"card-header border-0 bg-danger py-5\">\n        <h3 className=\"card-title font-weight-bolder text-white\">Sales Stat</h3>\n        <div className=\"card-toolbar\">\n          <Dropdown className=\"dropdown-inline\" drop=\"down\" alignRight>\n            <Dropdown.Toggle\n              className=\"btn btn-transparent-white btn-sm font-weight-bolder dropdown-toggle px-5\"\n              variant=\"transparent\"\n              id=\"dropdown-toggle-top\">\n              Export\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"dropdown-menu dropdown-menu-sm dropdown-menu-right\">\n              <DropdownMenu2 />\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      </div>\n      {/* Body */}\n      <div className=\"card-body p-0 position-relative overflow-hidden\">\n        {/* Chart */}\n        <div\n          id=\"kt_mixed_widget_1_chart\"\n          className=\"card-rounded-bottom bg-danger\"\n          style={{ height: \"200px\" }}\n        ></div>\n\n        {/* Stat */}\n        <div className=\"card-spacer mt-n25\">\n          <div className=\"row m-0\">\n            <div className=\"col bg-light-warning px-6 py-8 rounded-xl mr-7 mb-7\">\n              <span className=\"svg-icon svg-icon-3x svg-icon-warning d-block my-2\">\n                <SVG\n                  src={toAbsoluteUrl(\"/media/svg/icons/Media/Equalizer.svg\")}\n                ></SVG>\n              </span>\n              <a\n                href=\"#\"\n                className=\"text-warning font-weight-bold font-size-h6\"\n              >\n                Weekly Sales\n              </a>\n            </div>\n            <div className=\"col bg-light-primary px-6 py-8 rounded-xl mb-7\">\n              <span className=\"svg-icon svg-icon-3x svg-icon-primary d-block my-2\">\n                <SVG\n                  src={toAbsoluteUrl(\n                    \"/media/svg/icons/Communication/Add-user.svg\"\n                  )}\n                ></SVG>\n              </span>\n              <a\n                href=\"#\"\n                className=\"text-primary font-weight-bold font-size-h6 mt-2\"\n              >\n                New Users\n              </a>\n            </div>\n          </div>\n          <div className=\"row m-0\">\n            <div className=\"col bg-light-danger px-6 py-8 rounded-xl mr-7\">\n              <span className=\"svg-icon svg-icon-3x svg-icon-danger d-block my-2\">\n                <SVG\n                  src={toAbsoluteUrl(\"/media/svg/icons/Design/Layers.svg\")}\n                ></SVG>\n              </span>\n              <a\n                href=\"#\"\n                className=\"text-danger font-weight-bold font-size-h6 mt-2\"\n              >\n                Item Orders\n              </a>\n            </div>\n            <div className=\"col bg-light-success px-6 py-8 rounded-xl\">\n              <span className=\"svg-icon svg-icon-3x svg-icon-success d-block my-2\">\n                <SVG\n                  src={toAbsoluteUrl(\n                    \"/media/svg/icons/Communication/Urgent-mail.svg\"\n                  )}\n                ></SVG>\n              </span>\n              <a\n                href=\"#\"\n                className=\"text-success font-weight-bold font-size-h6 mt-2\"\n              >\n                Bug Reports\n              </a>\n            </div>\n          </div>\n        </div>\n\n        {/* Resize */}\n        <div className=\"resize-triggers\">\n          <div className=\"expand-trigger\">\n            <div style={{ width: \"411px\", height: \"461px\" }} />\n          </div>\n          <div className=\"contract-trigger\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction getChartOptions(layoutProps) {\n  const strokeColor = \"#D13647\";\n\n  const options = {\n    series: [\n      {\n        name: \"Net Profit\",\n        data: [30, 45, 32, 70, 40, 40, 40]\n      }\n    ],\n    chart: {\n      type: \"area\",\n      height: 200,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        enabledOnSeries: undefined,\n        top: 5,\n        left: 0,\n        blur: 3,\n        color: strokeColor,\n        opacity: 0.5\n      }\n    },\n    plotOptions: {},\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: \"solid\",\n      opacity: 0\n    },\n    stroke: {\n      curve: \"smooth\",\n      show: true,\n      width: 3,\n      colors: [strokeColor]\n    },\n    xaxis: {\n      categories: [\"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\"],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false,\n        style: {\n          colors: layoutProps.colorsGrayGray500,\n          fontSize: \"12px\",\n          fontFamily: layoutProps.fontFamily\n        }\n      },\n      crosshairs: {\n        show: false,\n        position: \"front\",\n        stroke: {\n          color: layoutProps.colorsGrayGray300,\n          width: 1,\n          dashArray: 3\n        }\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 80,\n      labels: {\n        show: false,\n        style: {\n          colors: layoutProps.colorsGrayGray500,\n          fontSize: \"12px\",\n          fontFamily: layoutProps.fontFamily\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: \"none\",\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: \"none\",\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: \"none\",\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: \"12px\",\n        fontFamily: layoutProps.fontFamily\n      },\n      y: {\n        formatter: function(val) {\n          return \"$\" + val + \" thousands\";\n        }\n      },\n      marker: {\n        show: false\n      }\n    },\n    colors: [\"transparent\"],\n    markers: {\n      colors: layoutProps.colorsThemeBaseDanger,\n      strokeColor: [strokeColor],\n      strokeWidth: 3\n    }\n  };\n  return options;\n}\n"]},"metadata":{},"sourceType":"module"}