{"ast":null,"code":"var _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/products-loading-dialog/ProductsLoadingDialog.js\";\nimport React, { useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\nexport function ProductsLoadingDialog() {\n  var _useSelector = useSelector(function (state) {\n    return {\n      isLoading: state.products.listLoading\n    };\n  }, shallowEqual),\n      isLoading = _useSelector.isLoading;\n\n  useEffect(function () {}, [isLoading]);\n  return /*#__PURE__*/React.createElement(LoadingDialog, {\n    isLoading: isLoading,\n    text: \"Loading ...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/products-loading-dialog/ProductsLoadingDialog.js"],"names":["React","useEffect","shallowEqual","useSelector","LoadingDialog","ProductsLoadingDialog","state","isLoading","products","listLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAAQC,aAAR,QAA4B,gDAA5B;AAEA,OAAO,SAASC,qBAAT,GAAiC;AACtC,qBAAsBF,WAAW,CAC/B,UAAAG,KAAK;AAAA,WAAK;AAAEC,MAAAA,SAAS,EAAED,KAAK,CAACE,QAAN,CAAeC;AAA5B,KAAL;AAAA,GAD0B,EAE/BP,YAF+B,CAAjC;AAAA,MAAQK,SAAR,gBAAQA,SAAR;;AAIAN,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,CAACM,SAAD,CAAX,CAAT;AACA,sBAAO,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEA,SAA1B;AAAqC,IAAA,IAAI,EAAC,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React, {useEffect} from \"react\";\nimport {shallowEqual, useSelector} from \"react-redux\";\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\n\nexport function ProductsLoadingDialog() {\n  const { isLoading } = useSelector(\n    state => ({ isLoading: state.products.listLoading }),\n    shallowEqual\n  );\n  useEffect(() => {}, [isLoading]);\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\n}\n"]},"metadata":{},"sourceType":"module"}