{"ast":null,"code":"var _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditForm.js\";\n// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Select, Input } from \"../../../../../../../_metronic/_partials/controls\";\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\"; // Validation schema\n\nvar SpecificationEditSchema = Yup.object().shape({\n  value: Yup.string().min(2, \"Minimum 2 symbols\").max(50, \"Maximum 50 symbols\").required(\"Value is required\"),\n  specId: Yup.number().required(\"Specification type is required\")\n});\nexport function SpecificationEditForm(_ref) {\n  var _this = this;\n\n  var saveSpecification = _ref.saveSpecification,\n      specification = _ref.specification,\n      actionsLoading = _ref.actionsLoading,\n      onHide = _ref.onHide;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: specification,\n    validationSchema: SpecificationEditSchema,\n    onSubmit: function onSubmit(values) {\n      saveSpecification(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal.Body, {\n      className: \"overlay overlay-block cursor-default\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, actionsLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay-layer bg-transparent\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner spinner-lg spinner-success\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form, {\n      className: \"form form-label-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"specId\",\n      label: \"Specification Type\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, SPECIFICATIONS_DICTIONARY.map(function (spec) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: spec.id,\n        value: spec.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, spec.name);\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"value\",\n      component: Input,\n      placeholder: \"Value\",\n      label: \"Value\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: onHide,\n      className: \"btn btn-light btn-elevate\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(React.Fragment, null, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: function onClick() {\n        return handleSubmit();\n      },\n      className: \"btn btn-primary btn-elevate\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"Save\")));\n  }));\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditForm.js"],"names":["React","Modal","Formik","Form","Field","Yup","Select","Input","SPECIFICATIONS_DICTIONARY","SpecificationEditSchema","object","shape","value","string","min","max","required","specId","number","SpecificationEditForm","saveSpecification","specification","actionsLoading","onHide","values","handleSubmit","map","spec","id","name"],"mappings":"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","sourcesContent":["// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Select,\n  Input,\n} from \"../../../../../../../_metronic/_partials/controls\";\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\n\n// Validation schema\nconst SpecificationEditSchema = Yup.object().shape({\n  value: Yup.string()\n    .min(2, \"Minimum 2 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Value is required\"),\n  specId: Yup.number().required(\"Specification type is required\"),\n});\n\nexport function SpecificationEditForm({\n  saveSpecification,\n  specification,\n  actionsLoading,\n  onHide,\n}) {\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={specification}\n        validationSchema={SpecificationEditSchema}\n        onSubmit={(values) => {\n          saveSpecification(values);\n        }}\n      >\n        {({ handleSubmit }) => (\n          <>\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\n              {actionsLoading && (\n                <div className=\"overlay-layer bg-transparent\">\n                  <div className=\"spinner spinner-lg spinner-success\" />\n                </div>\n              )}\n              <Form className=\"form form-label-right\">\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-12\">\n                    <Select name=\"specId\" label=\"Specification Type\">\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\n                        <option key={spec.id} value={spec.id}>\n                          {spec.name}\n                        </option>\n                      ))}\n                    </Select>\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-12\">\n                    <Field\n                      name=\"value\"\n                      component={Input}\n                      placeholder=\"Value\"\n                      label=\"Value\"\n                    />\n                  </div>\n                </div>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <button\n                type=\"button\"\n                onClick={onHide}\n                className=\"btn btn-light btn-elevate\"\n              >\n                Cancel\n              </button>\n              <> </>\n              <button\n                type=\"submit\"\n                onClick={() => handleSubmit()}\n                className=\"btn btn-primary btn-elevate\"\n              >\n                Save\n              </button>\n            </Modal.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}