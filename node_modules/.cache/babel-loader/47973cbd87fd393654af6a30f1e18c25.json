{"ast":null,"code":"import _defineProperty from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"classes\"];\n\nvar _this = this,\n    _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/inputs/SwitchesExamplesPage.js\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport { Switch, FormGroup, FormControl, FormControlLabel, FormLabel, FormHelperText, Grid, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { purple } from \"@material-ui/core/colors\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 4\n\nvar PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    \"&$checked\": {\n      color: purple[500]\n    },\n    \"&$checked + $track\": {\n      backgroundColor: purple[500]\n    }\n  },\n  checked: {},\n  track: {}\n})(Switch);\nvar IOSSwitch = withStyles(function (theme) {\n  return {\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(1)\n    },\n    switchBase: {\n      padding: 1,\n      \"&$checked\": {\n        transform: \"translateX(16px)\",\n        color: theme.palette.common.white,\n        \"& + $track\": {\n          backgroundColor: \"#52d869\",\n          opacity: 1,\n          border: \"none\"\n        }\n      },\n      \"&$focusVisible $thumb\": {\n        color: \"#52d869\",\n        border: \"6px solid #fff\"\n      }\n    },\n    thumb: {\n      width: 24,\n      height: 24\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: \"1px solid \".concat(theme.palette.grey[400]),\n      backgroundColor: theme.palette.grey[50],\n      opacity: 1,\n      transition: theme.transitions.create([\"background-color\", \"border\"])\n    },\n    checked: {},\n    focusVisible: {}\n  };\n})(function (_ref) {\n  var classes = _ref.classes,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Switch, Object.assign({\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: true,\n    classes: {\n      root: classes.root,\n      switchBase: classes.switchBase,\n      thumb: classes.thumb,\n      track: classes.track,\n      checked: classes.checked\n    }\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }));\n});\nvar AntSwitch = withStyles(function (theme) {\n  return {\n    root: {\n      width: 28,\n      height: 16,\n      padding: 0,\n      display: \"flex\"\n    },\n    switchBase: {\n      padding: 2,\n      color: theme.palette.grey[500],\n      \"&$checked\": {\n        transform: \"translateX(12px)\",\n        color: theme.palette.common.white,\n        \"& + $track\": {\n          opacity: 1,\n          backgroundColor: theme.palette.primary.main,\n          borderColor: theme.palette.primary.main\n        }\n      }\n    },\n    thumb: {\n      width: 12,\n      height: 12,\n      boxShadow: \"none\"\n    },\n    track: {\n      border: \"1px solid \".concat(theme.palette.grey[500]),\n      borderRadius: 16 / 2,\n      opacity: 1,\n      backgroundColor: theme.palette.common.white\n    },\n    checked: {}\n  };\n})(Switch);\nexport default function SwitchesExamplesPage() {\n  // Example 1\n  var _React$useState = React.useState({\n    checkedA: true,\n    checkedB: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, event.target.checked)));\n    };\n  }; // Example 2\n\n\n  var _React$useState3 = React.useState({\n    checkedA: true,\n    checkedB: true\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state2 = _React$useState4[0],\n      setState2 = _React$useState4[1];\n\n  var handleChange2 = function handleChange2(name) {\n    return function (event) {\n      setState2(_objectSpread(_objectSpread({}, state2), {}, _defineProperty({}, name, event.target.checked)));\n    };\n  }; // Example 3\n\n\n  var _React$useState5 = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: true\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      state3 = _React$useState6[0],\n      setState3 = _React$useState6[1];\n\n  var handleChange3 = function handleChange3(name) {\n    return function (event) {\n      setState3(_objectSpread(_objectSpread({}, state3), {}, _defineProperty({}, name, event.target.checked)));\n    };\n  }; // Example 4\n\n\n  var _React$useState7 = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      state4 = _React$useState8[0],\n      setState4 = _React$useState8[1];\n\n  var handleChange4 = function handleChange4(name) {\n    return function (event) {\n      setState4(_objectSpread(_objectSpread({}, state4), {}, _defineProperty({}, name, event.target.checked)));\n    };\n  }; // Example 5\n\n\n  var _React$useState9 = React.useState(\"female\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      value = _React$useState10[0],\n      setValue = _React$useState10[1];\n\n  function handleChange5(event) {\n    setValue(event.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"Switches toggle the state of a single setting on or off.\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/switches/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Swithces\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, \"Switches\"), \" toggle the state of a single setting on or off.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, \"Switches are the preferred way to adjust settings on mobile. The option that the switch controls, as well as the state it\\u2019s in, should be made clear from the corresponding inline label.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    checked: state.checkedA,\n    onChange: handleChange(\"checkedA\"),\n    value: \"checkedA\",\n    inputProps: {\n      \"aria-label\": \"secondary checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    checked: state.checkedB,\n    onChange: handleChange(\"checkedB\"),\n    value: \"checkedB\",\n    color: \"primary\",\n    inputProps: {\n      \"aria-label\": \"primary checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    value: \"checkedC\",\n    inputProps: {\n      \"aria-label\": \"primary checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    disabled: true,\n    value: \"checkedD\",\n    inputProps: {\n      \"aria-label\": \"disabled checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    disabled: true,\n    checked: true,\n    value: \"checkedE\",\n    inputProps: {\n      \"aria-label\": \"primary checkbox\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    defaultChecked: true,\n    value: \"checkedF\",\n    color: \"default\",\n    inputProps: {\n      \"aria-label\": \"checkbox with default color\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Switches with FormControlLabel\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, \"Switch\"), \" can also be used with a label description thanks to the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 29\n    }\n  }, \"FormControlLabel\"), \" component.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: state2.checkedA,\n      onChange: handleChange2(\"checkedA\"),\n      value: \"checkedA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }\n    }),\n    label: \"Secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: state2.checkedB,\n      onChange: handleChange2(\"checkedB\"),\n      value: \"checkedB\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }),\n    label: \"Primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      value: \"checkedC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 26\n      }\n    }),\n    label: \"Uncontrolled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    disabled: true,\n    control: /*#__PURE__*/React.createElement(Switch, {\n      value: \"checkedD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 26\n      }\n    }),\n    label: \"Disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    disabled: true,\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: true,\n      value: \"checkedE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 26\n      }\n    }),\n    label: \"Disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode4,\n    beforeCodeTitle: \"Customized switches\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, \"Here are some examples of customizing the component. You can learn more about this in the overrides documentation page.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(PurpleSwitch, {\n      checked: state4.checkedA,\n      onChange: handleChange4(\"checkedA\"),\n      value: \"checkedA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 19\n      }\n    }),\n    label: \"Custom color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(IOSSwitch, {\n      checked: state4.checkedB,\n      onChange: handleChange4(\"checkedB\"),\n      value: \"checkedB\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }),\n    label: \"iOS style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    component: \"label\",\n    container: true,\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 19\n    }\n  }, \"Off\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AntSwitch, {\n    checked: state4.checkedC,\n    onChange: handleChange4(\"checkedC\"),\n    value: \"checkedC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 19\n    }\n  }, \"On\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode3,\n    beforeCodeTitle: \"Switches with FormGroup\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, \"FormGroup\"), \" is a helpful wrapper used to group selection controls components that provides an easier API. However, we encourage you to use a \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 50\n    }\n  }, \"checkbox\"), \" instead.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 15\n    }\n  }, \"Assign responsibility\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: state3.gilad,\n      onChange: handleChange3(\"gilad\"),\n      value: \"gilad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }\n    }),\n    label: \"Gilad Gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: state3.jason,\n      onChange: handleChange3(\"jason\"),\n      value: \"jason\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }),\n    label: \"Jason Killian\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: state3.antoine,\n      onChange: handleChange3(\"antoine\"),\n      value: \"antoine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 21\n      }\n    }),\n    label: \"Antoine Llorca\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 15\n    }\n  }, \"Be careful\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode5,\n    beforeCodeTitle: \"Label placement\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, \"You can change the placement of the label:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }\n  }, \"labelPlacement\"), /*#__PURE__*/React.createElement(FormGroup, {\n    \"aria-label\": \"position\",\n    name: \"position\",\n    value: value,\n    onChange: handleChange5,\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"top\",\n    control: /*#__PURE__*/React.createElement(Switch, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 28\n      }\n    }),\n    label: \"Top\",\n    labelPlacement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"start\",\n    control: /*#__PURE__*/React.createElement(Switch, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 28\n      }\n    }),\n    label: \"Start\",\n    labelPlacement: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"bottom\",\n    control: /*#__PURE__*/React.createElement(Switch, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 28\n      }\n    }),\n    label: \"Bottom\",\n    labelPlacement: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"end\",\n    control: /*#__PURE__*/React.createElement(Switch, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 28\n      }\n    }),\n    label: \"End\",\n    labelPlacement: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  })))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport Switch from '@material-ui/core/Switch';\\n\\nexport default function Switches() {\\n  const [state, setState] = React.useState({\\n    checkedA: true,\\n    checkedB: true,\\n  });\\n\\n  const handleChange = name => event => {\\n    setState({ ...state, [name]: event.target.checked });\\n  };\\n\\n  return (\\n    <div>\\n      <Switch\\n        checked={state.checkedA}\\n        onChange={handleChange('checkedA')}\\n        value=\\\"checkedA\\\"\\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\\n      />\\n      <Switch\\n        checked={state.checkedB}\\n        onChange={handleChange('checkedB')}\\n        value=\\\"checkedB\\\"\\n        color=\\\"primary\\\"\\n        inputProps={{ 'aria-label': 'primary checkbox' }}\\n      />\\n      <Switch value=\\\"checkedC\\\" inputProps={{ 'aria-label': 'primary checkbox' }} />\\n      <Switch disabled value=\\\"checkedD\\\" inputProps={{ 'aria-label': 'disabled checkbox' }} />\\n      <Switch disabled checked value=\\\"checkedE\\\" inputProps={{ 'aria-label': 'primary checkbox' }} />\\n      <Switch\\n        defaultChecked\\n        value=\\\"checkedF\\\"\\n        color=\\\"default\\\"\\n        inputProps={{ 'aria-label': 'checkbox with default color' }}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport FormGroup from '@material-ui/core/FormGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\n\\nexport default function SwitchLabels() {\\n  const [state, setState] = React.useState({\\n    checkedA: true,\\n    checkedB: true,\\n  });\\n\\n  const handleChange = name => event => {\\n    setState({ ...state, [name]: event.target.checked });\\n  };\\n\\n  return (\\n    <FormGroup row>\\n      <FormControlLabel\\n        control={\\n          <Switch checked={state.checkedA} onChange={handleChange('checkedA')} value=\\\"checkedA\\\" />\\n        }\\n        label=\\\"Secondary\\\"\\n      />\\n      <FormControlLabel\\n        control={\\n          <Switch\\n            checked={state.checkedB}\\n            onChange={handleChange('checkedB')}\\n            value=\\\"checkedB\\\"\\n            color=\\\"primary\\\"\\n          />\\n        }\\n        label=\\\"Primary\\\"\\n      />\\n      <FormControlLabel control={<Switch value=\\\"checkedC\\\" />} label=\\\"Uncontrolled\\\" />\\n      <FormControlLabel disabled control={<Switch value=\\\"checkedD\\\" />} label=\\\"Disabled\\\" />\\n      <FormControlLabel disabled control={<Switch checked value=\\\"checkedE\\\" />} label=\\\"Disabled\\\" />\\n    </FormGroup>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport FormLabel from '@material-ui/core/FormLabel';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormGroup from '@material-ui/core/FormGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport FormHelperText from '@material-ui/core/FormHelperText';\\nimport Switch from '@material-ui/core/Switch';\\n\\nexport default function SwitchesGroup() {\\n  const [state, setState] = React.useState({\\n    gilad: true,\\n    jason: false,\\n    antoine: true,\\n  });\\n\\n  const handleChange = name => event => {\\n    setState({ ...state, [name]: event.target.checked });\\n  };\\n\\n  return (\\n    <FormControl component=\\\"fieldset\\\">\\n      <FormLabel component=\\\"legend\\\">Assign responsibility</FormLabel>\\n      <FormGroup>\\n        <FormControlLabel\\n          control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\\\"gilad\\\" />}\\n          label=\\\"Gilad Gray\\\"\\n        />\\n        <FormControlLabel\\n          control={<Switch checked={state.jason} onChange={handleChange('jason')} value=\\\"jason\\\" />}\\n          label=\\\"Jason Killian\\\"\\n        />\\n        <FormControlLabel\\n          control={\\n            <Switch checked={state.antoine} onChange={handleChange('antoine')} value=\\\"antoine\\\" />\\n          }\\n          label=\\\"Antoine Llorca\\\"\\n        />\\n      </FormGroup>\\n      <FormHelperText>Be careful</FormHelperText>\\n    </FormControl>\\n  );\\n}\\n\";\nvar jsCode4 = \"\\nimport React from 'react';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport { purple } from '@material-ui/core/colors';\\nimport FormGroup from '@material-ui/core/FormGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport Switch from '@material-ui/core/Switch';\\nimport Grid from '@material-ui/core/Grid';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst PurpleSwitch = withStyles({\\n  switchBase: {\\n    color: purple[300],\\n    '&$checked': {\\n      color: purple[500],\\n    },\\n    '&$checked + $track': {\\n      backgroundColor: purple[500],\\n    },\\n  },\\n  checked: {},\\n  track: {},\\n})(Switch);\\n\\nconst IOSSwitch = withStyles(theme => ({\\n  root: {\\n    width: 42,\\n    height: 26,\\n    padding: 0,\\n    margin: theme.spacing(1),\\n  },\\n  switchBase: {\\n    padding: 1,\\n    '&$checked': {\\n      transform: 'translateX(16px)',\\n      color: theme.palette.common.white,\\n      '& + $track': {\\n        backgroundColor: '#52d869',\\n        opacity: 1,\\n        border: 'none',\\n      },\\n    },\\n    '&$focusVisible $thumb': {\\n      color: '#52d869',\\n      border: '6px solid #fff',\\n    },\\n  },\\n  thumb: {\\n    width: 24,\\n    height: 24,\\n  },\\n  track: {\\n    borderRadius: 26 / 2,\\n    border: `1px solid ${theme.palette.grey[400]}`,\\n    backgroundColor: theme.palette.grey[50],\\n    opacity: 1,\\n    transition: theme.transitions.create(['background-color', 'border']),\\n  },\\n  checked: {},\\n  focusVisible: {},\\n}))(({ classes, ...props }) => {\\n  return (\\n    <Switch\\n      focusVisibleClassName={classes.focusVisible}\\n      disableRipple\\n      classes={{\\n        root: classes.root,\\n        switchBase: classes.switchBase,\\n        thumb: classes.thumb,\\n        track: classes.track,\\n        checked: classes.checked,\\n      }}\\n      {...props}\\n    />\\n  );\\n});\\n\\nconst AntSwitch = withStyles(theme => ({\\n  root: {\\n    width: 28,\\n    height: 16,\\n    padding: 0,\\n    display: 'flex',\\n  },\\n  switchBase: {\\n    padding: 2,\\n    color: theme.palette.grey[500],\\n    '&$checked': {\\n      transform: 'translateX(12px)',\\n      color: theme.palette.common.white,\\n      '& + $track': {\\n        opacity: 1,\\n        backgroundColor: theme.palette.primary.main,\\n        borderColor: theme.palette.primary.main,\\n      },\\n    },\\n  },\\n  thumb: {\\n    width: 12,\\n    height: 12,\\n    boxShadow: 'none',\\n  },\\n  track: {\\n    border: `1px solid ${theme.palette.grey[500]}`,\\n    borderRadius: 16 / 2,\\n    opacity: 1,\\n    backgroundColor: theme.palette.common.white,\\n  },\\n  checked: {},\\n}))(Switch);\\n\\nexport default function CustomizedSwitches() {\\n  const [state, setState] = React.useState({\\n    checkedA: true,\\n    checkedB: true,\\n    checkedC: true,\\n  });\\n\\n  const handleChange = name => event => {\\n    setState({ ...state, [name]: event.target.checked });\\n  };\\n\\n  return (\\n    <FormGroup>\\n      <FormControlLabel\\n        control={\\n          <PurpleSwitch\\n            checked={state.checkedA}\\n            onChange={handleChange('checkedA')}\\n            value=\\\"checkedA\\\"\\n          />\\n        }\\n        label=\\\"Custom color\\\"\\n      />\\n      <FormControlLabel\\n        control={\\n          <IOSSwitch\\n            checked={state.checkedB}\\n            onChange={handleChange('checkedB')}\\n            value=\\\"checkedB\\\"\\n          />\\n        }\\n        label=\\\"iOS style\\\"\\n      />\\n      <Typography component=\\\"div\\\">\\n        <Grid component=\\\"label\\\" container alignItems=\\\"center\\\" spacing={1}>\\n          <Grid item>Off</Grid>\\n          <Grid item>\\n            <AntSwitch\\n              checked={state.checkedC}\\n              onChange={handleChange('checkedC')}\\n              value=\\\"checkedC\\\"\\n            />\\n          </Grid>\\n          <Grid item>On</Grid>\\n        </Grid>\\n      </Typography>\\n    </FormGroup>\\n  );\\n}\\n\";\nvar jsCode5 = \"\\nimport React from 'react';\\nimport Switch from '@material-ui/core/Switch';\\nimport FormGroup from '@material-ui/core/FormGroup';\\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\\nimport FormControl from '@material-ui/core/FormControl';\\nimport FormLabel from '@material-ui/core/FormLabel';\\n\\nfunction FormControlLabelPosition() {\\n  const [value, setValue] = React.useState('female');\\n\\n  function handleChange(event) {\\n    setValue(event.target.value);\\n  }\\n\\n  return (\\n    <FormControl component=\\\"fieldset\\\">\\n      <FormLabel component=\\\"legend\\\">labelPlacement</FormLabel>\\n      <FormGroup aria-label=\\\"position\\\" name=\\\"position\\\" value={value} onChange={handleChange} row>\\n        <FormControlLabel\\n          value=\\\"top\\\"\\n          control={<Switch color=\\\"primary\\\" />}\\n          label=\\\"Top\\\"\\n          labelPlacement=\\\"top\\\"\\n        />\\n        <FormControlLabel\\n          value=\\\"start\\\"\\n          control={<Switch color=\\\"primary\\\" />}\\n          label=\\\"Start\\\"\\n          labelPlacement=\\\"start\\\"\\n        />\\n        <FormControlLabel\\n          value=\\\"bottom\\\"\\n          control={<Switch color=\\\"primary\\\" />}\\n          label=\\\"Bottom\\\"\\n          labelPlacement=\\\"bottom\\\"\\n        />\\n        <FormControlLabel\\n          value=\\\"end\\\"\\n          control={<Switch color=\\\"primary\\\" />}\\n          label=\\\"End\\\"\\n          labelPlacement=\\\"end\\\"\\n        />\\n      </FormGroup>\\n    </FormControl>\\n  );\\n}\\n\\nexport default FormControlLabelPosition;\\n\";","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/inputs/SwitchesExamplesPage.js"],"names":["React","Switch","FormGroup","FormControl","FormControlLabel","FormLabel","FormHelperText","Grid","Typography","withStyles","purple","Notice","KTCodeExample","PurpleSwitch","switchBase","color","backgroundColor","checked","track","IOSSwitch","theme","root","width","height","padding","margin","spacing","transform","palette","common","white","opacity","border","thumb","borderRadius","grey","transition","transitions","create","focusVisible","classes","props","AntSwitch","display","primary","main","borderColor","boxShadow","SwitchesExamplesPage","useState","checkedA","checkedB","state","setState","handleChange","name","event","target","state2","setState2","handleChange2","gilad","jason","antoine","state3","setState3","handleChange3","checkedC","state4","setState4","handleChange4","value","setValue","handleChange5","jsCode1","jsCode2","jsCode4","jsCode3","jsCode5"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport {\n  Switch,\n  FormGroup,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  FormHelperText,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {purple} from \"@material-ui/core/colors\";\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\n\n// Example 4\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    \"&$checked\": {\n      color: purple[500]\n    },\n    \"&$checked + $track\": {\n      backgroundColor: purple[500]\n    }\n  },\n  checked: {},\n  track: {}\n})(Switch);\n\nconst IOSSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1)\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(16px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#52d869\",\n        opacity: 1,\n        border: \"none\"\n      }\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#52d869\",\n      border: \"6px solid #fff\"\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"])\n  },\n  checked: {},\n  focusVisible: {}\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked\n      }}\n      {...props}\n    />\n  );\n});\n\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: \"flex\"\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    \"&$checked\": {\n      transform: \"translateX(12px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: \"none\"\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\n\nexport default function SwitchesExamplesPage() {\n  // Example 1\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  // Example 2\n  const [state2, setState2] = React.useState({\n    checkedA: true,\n    checkedB: true\n  });\n\n  const handleChange2 = name => event => {\n    setState2({ ...state2, [name]: event.target.checked });\n  };\n\n  // Example 3\n  const [state3, setState3] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: true\n  });\n\n  const handleChange3 = name => event => {\n    setState3({ ...state3, [name]: event.target.checked });\n  };\n\n  // Example 4\n  const [state4, setState4] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true\n  });\n\n  const handleChange4 = name => event => {\n    setState4({ ...state4, [name]: event.target.checked });\n  };\n\n  // Example 5\n  const [value, setValue] = React.useState(\"female\");\n\n  function handleChange5(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <>\n      <Notice icon=\"flaticon-warning font-primary\">\n        <span>Switches toggle the state of a single setting on or off.</span>\n        <span>\n          For more info please check the components's official{\" \"}\n          <a\n            target=\"_blank\"\n            className=\"font-weight-bold\"\n            rel=\"noopener noreferrer\"\n            href=\"https://material-ui.com/components/switches/\"\n          >\n            demos & documentation\n          </a>\n        </span>\n      </Notice>\n\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <KTCodeExample\n            jsCode={jsCode1}\n            beforeCodeTitle=\"Swithces\"\n            codeBlockHeight=\"400px\"\n          >\n            <span className=\"pb-3\">\n              <code>Switches</code> toggle the state of a single setting on or\n              off.\n            </span>\n            <div>\n              Switches are the preferred way to adjust settings on mobile. The\n              option that the switch controls, as well as the state it’s in,\n              should be made clear from the corresponding inline label.\n            </div>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div>\n              <Switch\n                checked={state.checkedA}\n                onChange={handleChange(\"checkedA\")}\n                value=\"checkedA\"\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n              />\n              <Switch\n                checked={state.checkedB}\n                onChange={handleChange(\"checkedB\")}\n                value=\"checkedB\"\n                color=\"primary\"\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\n              />\n              <Switch\n                value=\"checkedC\"\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\n              />\n              <Switch\n                disabled\n                value=\"checkedD\"\n                inputProps={{ \"aria-label\": \"disabled checkbox\" }}\n              />\n              <Switch\n                disabled\n                checked\n                value=\"checkedE\"\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\n              />\n              <Switch\n                defaultChecked\n                value=\"checkedF\"\n                color=\"default\"\n                inputProps={{ \"aria-label\": \"checkbox with default color\" }}\n              />\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample\n            jsCode={jsCode2}\n            beforeCodeTitle=\"Switches with FormControlLabel\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>\n              <code>Switch</code> can also be used with a label description\n              thanks to the <code>FormControlLabel</code> component.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <FormGroup row>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={state2.checkedA}\n                    onChange={handleChange2(\"checkedA\")}\n                    value=\"checkedA\"\n                  />\n                }\n                label=\"Secondary\"\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={state2.checkedB}\n                    onChange={handleChange2(\"checkedB\")}\n                    value=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Primary\"\n              />\n              <FormControlLabel\n                control={<Switch value=\"checkedC\" />}\n                label=\"Uncontrolled\"\n              />\n              <FormControlLabel\n                disabled\n                control={<Switch value=\"checkedD\" />}\n                label=\"Disabled\"\n              />\n              <FormControlLabel\n                disabled\n                control={<Switch checked value=\"checkedE\" />}\n                label=\"Disabled\"\n              />\n            </FormGroup>\n          </KTCodeExample>\n          <KTCodeExample\n            jsCode={jsCode4}\n            beforeCodeTitle=\"Customized switches\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>\n              Here are some examples of customizing the component. You can learn\n              more about this in the overrides documentation page.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <PurpleSwitch\n                    checked={state4.checkedA}\n                    onChange={handleChange4(\"checkedA\")}\n                    value=\"checkedA\"\n                  />\n                }\n                label=\"Custom color\"\n              />\n              <FormControlLabel\n                control={\n                  <IOSSwitch\n                    checked={state4.checkedB}\n                    onChange={handleChange4(\"checkedB\")}\n                    value=\"checkedB\"\n                  />\n                }\n                label=\"iOS style\"\n              />\n              <Typography component=\"div\">\n                <Grid\n                  component=\"label\"\n                  container\n                  alignItems=\"center\"\n                  spacing={1}\n                >\n                  <Grid item>Off</Grid>\n                  <Grid item>\n                    <AntSwitch\n                      checked={state4.checkedC}\n                      onChange={handleChange4(\"checkedC\")}\n                      value=\"checkedC\"\n                    />\n                  </Grid>\n                  <Grid item>On</Grid>\n                </Grid>\n              </Typography>\n            </FormGroup>\n          </KTCodeExample>\n        </div>\n        <div className=\"col-md-6\">\n          <KTCodeExample\n            jsCode={jsCode3}\n            beforeCodeTitle=\"Switches with FormGroup\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>\n              <code>FormGroup</code> is a helpful wrapper used to group\n              selection controls components that provides an easier API.\n              However, we encourage you to use a <code>checkbox</code> instead.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={state3.gilad}\n                      onChange={handleChange3(\"gilad\")}\n                      value=\"gilad\"\n                    />\n                  }\n                  label=\"Gilad Gray\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={state3.jason}\n                      onChange={handleChange3(\"jason\")}\n                      value=\"jason\"\n                    />\n                  }\n                  label=\"Jason Killian\"\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={state3.antoine}\n                      onChange={handleChange3(\"antoine\")}\n                      value=\"antoine\"\n                    />\n                  }\n                  label=\"Antoine Llorca\"\n                />\n              </FormGroup>\n              <FormHelperText>Be careful</FormHelperText>\n            </FormControl>\n          </KTCodeExample>\n          <KTCodeExample\n            jsCode={jsCode5}\n            beforeCodeTitle=\"Label placement\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>You can change the placement of the label:</span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">labelPlacement</FormLabel>\n              <FormGroup\n                aria-label=\"position\"\n                name=\"position\"\n                value={value}\n                onChange={handleChange5}\n                row\n              >\n                <FormControlLabel\n                  value=\"top\"\n                  control={<Switch color=\"primary\" />}\n                  label=\"Top\"\n                  labelPlacement=\"top\"\n                />\n                <FormControlLabel\n                  value=\"start\"\n                  control={<Switch color=\"primary\" />}\n                  label=\"Start\"\n                  labelPlacement=\"start\"\n                />\n                <FormControlLabel\n                  value=\"bottom\"\n                  control={<Switch color=\"primary\" />}\n                  label=\"Bottom\"\n                  labelPlacement=\"bottom\"\n                />\n                <FormControlLabel\n                  value=\"end\"\n                  control={<Switch color=\"primary\" />}\n                  label=\"End\"\n                  labelPlacement=\"end\"\n                />\n              </FormGroup>\n            </FormControl>\n          </KTCodeExample>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst jsCode1 = `\nimport React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function Switches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <div>\n      <Switch\n        checked={state.checkedA}\n        onChange={handleChange('checkedA')}\n        value=\"checkedA\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n      <Switch\n        checked={state.checkedB}\n        onChange={handleChange('checkedB')}\n        value=\"checkedB\"\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      <Switch value=\"checkedC\" inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Switch disabled value=\"checkedD\" inputProps={{ 'aria-label': 'disabled checkbox' }} />\n      <Switch disabled checked value=\"checkedE\" inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Switch\n        defaultChecked\n        value=\"checkedF\"\n        color=\"default\"\n        inputProps={{ 'aria-label': 'checkbox with default color' }}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchLabels() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Switch checked={state.checkedA} onChange={handleChange('checkedA')} value=\"checkedA\" />\n        }\n        label=\"Secondary\"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedB}\n            onChange={handleChange('checkedB')}\n            value=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Primary\"\n      />\n      <FormControlLabel control={<Switch value=\"checkedC\" />} label=\"Uncontrolled\" />\n      <FormControlLabel disabled control={<Switch value=\"checkedD\" />} label=\"Disabled\" />\n      <FormControlLabel disabled control={<Switch checked value=\"checkedE\" />} label=\"Disabled\" />\n    </FormGroup>\n  );\n}\n`;\nconst jsCode3 = `\nimport React from 'react';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchesGroup() {\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: true,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\n          label=\"Gilad Gray\"\n        />\n        <FormControlLabel\n          control={<Switch checked={state.jason} onChange={handleChange('jason')} value=\"jason\" />}\n          label=\"Jason Killian\"\n        />\n        <FormControlLabel\n          control={\n            <Switch checked={state.antoine} onChange={handleChange('antoine')} value=\"antoine\" />\n          }\n          label=\"Antoine Llorca\"\n        />\n      </FormGroup>\n      <FormHelperText>Be careful</FormHelperText>\n    </FormControl>\n  );\n}\n`;\nconst jsCode4 = `\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    '&$checked': {\n      color: purple[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst IOSSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: \\`1px solid \\${theme.palette.grey[400]}\\`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: 'flex',\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none',\n  },\n  track: {\n    border: \\`1px solid \\${theme.palette.grey[500]}\\`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white,\n  },\n  checked: {},\n}))(Switch);\n\nexport default function CustomizedSwitches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <PurpleSwitch\n            checked={state.checkedA}\n            onChange={handleChange('checkedA')}\n            value=\"checkedA\"\n          />\n        }\n        label=\"Custom color\"\n      />\n      <FormControlLabel\n        control={\n          <IOSSwitch\n            checked={state.checkedB}\n            onChange={handleChange('checkedB')}\n            value=\"checkedB\"\n          />\n        }\n        label=\"iOS style\"\n      />\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n          <Grid item>Off</Grid>\n          <Grid item>\n            <AntSwitch\n              checked={state.checkedC}\n              onChange={handleChange('checkedC')}\n              value=\"checkedC\"\n            />\n          </Grid>\n          <Grid item>On</Grid>\n        </Grid>\n      </Typography>\n    </FormGroup>\n  );\n}\n`;\nconst jsCode5 = `\nimport React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nfunction FormControlLabelPosition() {\n  const [value, setValue] = React.useState('female');\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">labelPlacement</FormLabel>\n      <FormGroup aria-label=\"position\" name=\"position\" value={value} onChange={handleChange} row>\n        <FormControlLabel\n          value=\"top\"\n          control={<Switch color=\"primary\" />}\n          label=\"Top\"\n          labelPlacement=\"top\"\n        />\n        <FormControlLabel\n          value=\"start\"\n          control={<Switch color=\"primary\" />}\n          label=\"Start\"\n          labelPlacement=\"start\"\n        />\n        <FormControlLabel\n          value=\"bottom\"\n          control={<Switch color=\"primary\" />}\n          label=\"Bottom\"\n          labelPlacement=\"bottom\"\n        />\n        <FormControlLabel\n          value=\"end\"\n          control={<Switch color=\"primary\" />}\n          label=\"End\"\n          labelPlacement=\"end\"\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n\nexport default FormControlLabelPosition;\n`;\n"]},"metadata":{},"sourceType":"module"}