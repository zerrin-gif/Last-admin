{"ast":null,"code":"import * as utils from \"./LocalStorageHelpers\";\nvar localStorageLastLocationKey = \"metronic-lastLocation\";\n\nfunction acceptLocation(lastLocation) {\n  if (lastLocation && lastLocation.pathname && lastLocation.pathname !== \"/\" && lastLocation.pathname.indexOf(\"auth\") === -1 && lastLocation.pathname !== \"/logout\") {\n    return true;\n  }\n\n  return false;\n}\n\nexport function saveLastLocation(lastLocation) {\n  if (acceptLocation(lastLocation)) {\n    utils.setStorage(localStorageLastLocationKey, JSON.stringify(lastLocation), 120);\n  }\n}\nexport function forgotLastLocation() {\n  utils.removeStorage(localStorageLastLocationKey);\n}\nexport function getLastLocation() {\n  var defaultLocation = {\n    pathname: \"/\",\n    title: \"Dashboard\"\n  };\n  var localStorateLocations = utils.getStorage(localStorageLastLocationKey);\n\n  if (!localStorateLocations) {\n    return {\n      pathname: \"/\",\n      title: \"Dashboard\"\n    };\n  }\n\n  try {\n    var result = JSON.parse(localStorateLocations);\n    return result;\n  } catch (error) {\n    console.error(error);\n    return defaultLocation;\n  }\n}\nexport function getCurrentUrl(location) {\n  return location.pathname.split(/[?#]/)[0];\n}\nexport function checkIsActive(location, url) {\n  var current = getCurrentUrl(location);\n\n  if (!current || !url) {\n    return false;\n  }\n\n  if (current === url) {\n    return true;\n  }\n\n  if (current.indexOf(url) > -1) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/_metronic/_helpers/RouterHelpers.js"],"names":["utils","localStorageLastLocationKey","acceptLocation","lastLocation","pathname","indexOf","saveLastLocation","setStorage","JSON","stringify","forgotLastLocation","removeStorage","getLastLocation","defaultLocation","title","localStorateLocations","getStorage","result","parse","error","console","getCurrentUrl","location","split","checkIsActive","url","current"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,uBAAvB;AAEA,IAAMC,2BAA2B,GAAG,uBAApC;;AAEA,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AAClC,MACIA,YAAY,IACZA,YAAY,CAACC,QADb,IAEAD,YAAY,CAACC,QAAb,KAA0B,GAF1B,IAGAD,YAAY,CAACC,QAAb,CAAsBC,OAAtB,CAA8B,MAA9B,MAA0C,CAAC,CAH3C,IAIAF,YAAY,CAACC,QAAb,KAA0B,SAL9B,EAME;AACE,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH;;AAED,OAAO,SAASE,gBAAT,CAA0BH,YAA1B,EAAwC;AAC3C,MAAID,cAAc,CAACC,YAAD,CAAlB,EAAkC;AAC9BH,IAAAA,KAAK,CAACO,UAAN,CACIN,2BADJ,EAEIO,IAAI,CAACC,SAAL,CAAeN,YAAf,CAFJ,EAGI,GAHJ;AAKH;AACJ;AAED,OAAO,SAASO,kBAAT,GAA8B;AACjCV,EAAAA,KAAK,CAACW,aAAN,CAAoBV,2BAApB;AACH;AAED,OAAO,SAASW,eAAT,GAA2B;AAC9B,MAAMC,eAAe,GAAG;AAAET,IAAAA,QAAQ,EAAE,GAAZ;AAAiBU,IAAAA,KAAK,EAAE;AAAxB,GAAxB;AACA,MAAMC,qBAAqB,GAAGf,KAAK,CAACgB,UAAN,CAAiBf,2BAAjB,CAA9B;;AACA,MAAI,CAACc,qBAAL,EAA4B;AACxB,WAAO;AAAEX,MAAAA,QAAQ,EAAE,GAAZ;AAAiBU,MAAAA,KAAK,EAAE;AAAxB,KAAP;AACH;;AAED,MAAI;AACA,QAAMG,MAAM,GAAGT,IAAI,CAACU,KAAL,CAAWH,qBAAX,CAAf;AACA,WAAOE,MAAP;AACH,GAHD,CAGE,OAAOE,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAON,eAAP;AACH;AACJ;AAED,OAAO,SAASQ,aAAT,CAAuBC,QAAvB,EAAiC;AACpC,SAAOA,QAAQ,CAAClB,QAAT,CAAkBmB,KAAlB,CAAwB,MAAxB,EAAgC,CAAhC,CAAP;AACH;AAED,OAAO,SAASC,aAAT,CAAuBF,QAAvB,EAAiCG,GAAjC,EAAsC;AACzC,MAAMC,OAAO,GAAGL,aAAa,CAACC,QAAD,CAA7B;;AACA,MAAI,CAACI,OAAD,IAAY,CAACD,GAAjB,EAAsB;AAClB,WAAQ,KAAR;AACH;;AAED,MAAIC,OAAO,KAAKD,GAAhB,EAAqB;AACjB,WAAQ,IAAR;AACH;;AAED,MAAIC,OAAO,CAACrB,OAAR,CAAgBoB,GAAhB,IAAuB,CAAC,CAA5B,EAA+B;AAC3B,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH","sourcesContent":["import * as utils from \"./LocalStorageHelpers\";\n\nconst localStorageLastLocationKey = \"metronic-lastLocation\";\n\nfunction acceptLocation(lastLocation) {\n    if (\n        lastLocation &&\n        lastLocation.pathname &&\n        lastLocation.pathname !== \"/\" &&\n        lastLocation.pathname.indexOf(\"auth\") === -1 &&\n        lastLocation.pathname !== \"/logout\"\n    ) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function saveLastLocation(lastLocation) {\n    if (acceptLocation(lastLocation)) {\n        utils.setStorage(\n            localStorageLastLocationKey,\n            JSON.stringify(lastLocation),\n            120\n        );\n    }\n}\n\nexport function forgotLastLocation() {\n    utils.removeStorage(localStorageLastLocationKey);\n}\n\nexport function getLastLocation() {\n    const defaultLocation = { pathname: \"/\", title: \"Dashboard\"};\n    const localStorateLocations = utils.getStorage(localStorageLastLocationKey);\n    if (!localStorateLocations) {\n        return { pathname: \"/\", title: \"Dashboard\"};\n    }\n\n    try {\n        const result = JSON.parse(localStorateLocations);\n        return result;\n    } catch (error) {\n        console.error(error);\n        return defaultLocation;\n    }\n}\n\nexport function getCurrentUrl(location) {\n    return location.pathname.split(/[?#]/)[0];\n}\n\nexport function checkIsActive(location, url) {\n    const current = getCurrentUrl(location);\n    if (!current || !url) {\n        return  false;\n    }\n\n    if (current === url) {\n        return  true;\n    }\n\n    if (current.indexOf(url) > -1) {\n        return true;\n    }\n\n    return false;\n}\n"]},"metadata":{},"sourceType":"module"}