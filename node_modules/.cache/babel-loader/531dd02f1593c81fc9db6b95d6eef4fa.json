{"ast":null,"code":"var _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/product-edit/ProductEditForm.js\";\n// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Input, Select } from \"../../../../../../_metronic/_partials/controls\";\nimport { AVAILABLE_COLORS, AVAILABLE_MANUFACTURES, ProductStatusTitles, ProductConditionTitles } from \"../ProductsUIHelpers\"; // Validation schema\n\nvar ProductEditSchema = Yup.object().shape({\n  model: Yup.string().min(2, \"Minimum 2 symbols\").max(50, \"Maximum 50 symbols\").required(\"Model is required\"),\n  manufacture: Yup.string().min(2, \"Minimum 2 symbols\").max(50, \"Maximum 50 symbols\").required(\"Manufacture is required\"),\n  modelYear: Yup.number().min(1950, \"1950 is minimum\").max(2020, \"2020 is maximum\").required(\"Model year is required\"),\n  mileage: Yup.number().min(0, \"0 is minimum\").max(1000000, \"1000000 is maximum\").required(\"Mileage is required\"),\n  color: Yup.string().required(\"Color is required\"),\n  price: Yup.number().min(1, \"$1 is minimum\").max(1000000, \"$1000000 is maximum\").required(\"Price is required\"),\n  VINCode: Yup.string().required(\"VINCode is required\")\n});\nexport function ProductEditForm(_ref) {\n  var _this = this;\n\n  var product = _ref.product,\n      btnRef = _ref.btnRef,\n      saveProduct = _ref.saveProduct;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: product,\n    validationSchema: ProductEditSchema,\n    onSubmit: function onSubmit(values) {\n      saveProduct(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n      className: \"form form-label-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"model\",\n      component: Input,\n      placeholder: \"Model\",\n      label: \"Model\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"manufacture\",\n      label: \"Manufacture\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, AVAILABLE_MANUFACTURES.map(function (manufacture) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: manufacture,\n        value: manufacture,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }\n      }, manufacture);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"number\",\n      name: \"modelYear\",\n      component: Input,\n      placeholder: \"Model year\",\n      label: \"Model year\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"number\",\n      name: \"mileage\",\n      component: Input,\n      placeholder: \"Mileage\",\n      label: \"Mileage\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"color\",\n      label: \"Color\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, AVAILABLE_COLORS.map(function (color) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: color,\n        value: color,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 23\n        }\n      }, color);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"number\",\n      name: \"price\",\n      component: Input,\n      placeholder: \"Price\",\n      label: \"Price ($)\",\n      customFeedbackLabel: \"Please enter Price\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"VINCode\",\n      component: Input,\n      placeholder: \"VIN code\",\n      label: \"VIN code\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"status\",\n      label: \"Status\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, ProductStatusTitles.map(function (status, index) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: status,\n        value: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 23\n        }\n      }, status);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"condition\",\n      label: \"Condition\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, ProductConditionTitles.map(function (condition, index) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: condition,\n        value: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 23\n        }\n      }, condition);\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      as: \"textarea\",\n      className: \"form-control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      style: {\n        display: \"none\"\n      },\n      ref: btnRef,\n      onSubmit: function onSubmit() {\n        return handleSubmit();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    })));\n  }));\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/product-edit/ProductEditForm.js"],"names":["React","Formik","Form","Field","Yup","Input","Select","AVAILABLE_COLORS","AVAILABLE_MANUFACTURES","ProductStatusTitles","ProductConditionTitles","ProductEditSchema","object","shape","model","string","min","max","required","manufacture","modelYear","number","mileage","color","price","VINCode","ProductEditForm","product","btnRef","saveProduct","values","handleSubmit","map","status","index","condition","display"],"mappings":"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","sourcesContent":["// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Input, Select } from \"../../../../../../_metronic/_partials/controls\";\nimport {\n  AVAILABLE_COLORS,\n  AVAILABLE_MANUFACTURES,\n  ProductStatusTitles,\n  ProductConditionTitles,\n} from \"../ProductsUIHelpers\";\n\n// Validation schema\nconst ProductEditSchema = Yup.object().shape({\n  model: Yup.string()\n    .min(2, \"Minimum 2 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Model is required\"),\n  manufacture: Yup.string()\n    .min(2, \"Minimum 2 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Manufacture is required\"),\n  modelYear: Yup.number()\n    .min(1950, \"1950 is minimum\")\n    .max(2020, \"2020 is maximum\")\n    .required(\"Model year is required\"),\n  mileage: Yup.number()\n    .min(0, \"0 is minimum\")\n    .max(1000000, \"1000000 is maximum\")\n    .required(\"Mileage is required\"),\n  color: Yup.string().required(\"Color is required\"),\n  price: Yup.number()\n    .min(1, \"$1 is minimum\")\n    .max(1000000, \"$1000000 is maximum\")\n    .required(\"Price is required\"),\n  VINCode: Yup.string().required(\"VINCode is required\"),\n});\n\nexport function ProductEditForm({\n  product,\n  btnRef,\n  saveProduct,\n}) {\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={product}\n        validationSchema={ProductEditSchema}\n        onSubmit={(values) => {\n          saveProduct(values);\n        }}\n      >\n        {({ handleSubmit }) => (\n          <>\n            <Form className=\"form form-label-right\">\n              <div className=\"form-group row\">\n                <div className=\"col-lg-4\">\n                  <Field\n                    name=\"model\"\n                    component={Input}\n                    placeholder=\"Model\"\n                    label=\"Model\"\n                  />\n                </div>\n                <div className=\"col-lg-4\">\n                  <Select name=\"manufacture\" label=\"Manufacture\">\n                    {AVAILABLE_MANUFACTURES.map((manufacture) => (\n                      <option key={manufacture} value={manufacture}>\n                        {manufacture}\n                      </option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"col-lg-4\">\n                  <Field\n                    type=\"number\"\n                    name=\"modelYear\"\n                    component={Input}\n                    placeholder=\"Model year\"\n                    label=\"Model year\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <div className=\"col-lg-4\">\n                  <Field\n                    type=\"number\"\n                    name=\"mileage\"\n                    component={Input}\n                    placeholder=\"Mileage\"\n                    label=\"Mileage\"\n                  />\n                </div>\n                <div className=\"col-lg-4\">\n                  <Select name=\"color\" label=\"Color\">\n                    {AVAILABLE_COLORS.map((color) => (\n                      <option key={color} value={color}>\n                        {color}\n                      </option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"col-lg-4\">\n                  <Field\n                    type=\"number\"\n                    name=\"price\"\n                    component={Input}\n                    placeholder=\"Price\"\n                    label=\"Price ($)\"\n                    customFeedbackLabel=\"Please enter Price\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <div className=\"col-lg-4\">\n                  <Field\n                    name=\"VINCode\"\n                    component={Input}\n                    placeholder=\"VIN code\"\n                    label=\"VIN code\"\n                  />\n                </div>\n                <div className=\"col-lg-4\">\n                  <Select name=\"status\" label=\"Status\">\n                    {ProductStatusTitles.map((status, index) => (\n                      <option key={status} value={index}>\n                        {status}\n                      </option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"col-lg-4\">\n                  <Select name=\"condition\" label=\"Condition\">\n                    {ProductConditionTitles.map((condition, index) => (\n                      <option key={condition} value={index}>\n                        {condition}\n                      </option>\n                    ))}\n                  </Select>\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label>Description</label>\n                <Field\n                  name=\"description\"\n                  as=\"textarea\"\n                  className=\"form-control\"\n                />\n              </div>\n              <button\n                type=\"submit\"\n                style={{ display: \"none\" }}\n                ref={btnRef}\n                onSubmit={() => handleSubmit()}\n              ></button>\n            </Form>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}