{"ast":null,"code":"import _slicedToArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/customers/customers-update-status-dialog/CustomersUpdateStateDialog.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { CustomerStatusCssClasses, CustomerStatusTitles } from \"../CustomersUIHelpers\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nvar selectedCustomers = function selectedCustomers(entities, ids) {\n  var _customers = [];\n  ids.forEach(function (id) {\n    var customer = entities.find(function (el) {\n      return el.id === id;\n    });\n\n    if (customer) {\n      _customers.push(customer);\n    }\n  });\n  return _customers;\n};\n\nexport function CustomersUpdateStateDialog(_ref) {\n  var _this = this;\n\n  var show = _ref.show,\n      onHide = _ref.onHide;\n  // Customers UI Context\n  var customersUIContext = useCustomersUIContext();\n  var customersUIProps = useMemo(function () {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams\n    };\n  }, [customersUIContext]); // Customers Redux state\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      customers: selectedCustomers(state.customers.entities, customersUIProps.ids),\n      isLoading: state.customers.actionsLoading\n    };\n  }, shallowEqual),\n      customers = _useSelector.customers,\n      isLoading = _useSelector.isLoading; // if !id we should close modal\n\n\n  useEffect(function () {\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\n      onHide();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [customersUIProps.ids]);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var updateStatus = function updateStatus() {\n    // server request for update customers status by selected ids\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(function () {\n      // refresh list after deletion\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(function () {\n        // clear selections list\n        customersUIProps.setIds([]); // closing delete modal\n\n        onHide();\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: onHide,\n    \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Status has been updated for selected customers\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"overlay overlay-block cursor-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-layer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner spinner-lg spinner-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table table-head-custom table-vertical-center overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"STATUS\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"CUSTOMER\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, customers.map(function (customer) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"id\".concat(customer.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, customer.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"label label-lg label-light-\".concat(CustomerStatusCssClasses[customer.status], \" label-inline\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, \" \", CustomerStatusTitles[customer.status])), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, customer.lastName, \", \", customer.firstName)));\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    value: status,\n    onChange: function onChange(e) {\n      return setStatus(+e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Suspended\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Pending\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onHide,\n    className: \"btn btn-light btn-elevate mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: updateStatus,\n    className: \"btn btn-primary btn-elevate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Update Status\"))));\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/customers/customers-update-status-dialog/CustomersUpdateStateDialog.js"],"names":["React","useEffect","useState","useMemo","Modal","shallowEqual","useDispatch","useSelector","CustomerStatusCssClasses","CustomerStatusTitles","actions","useCustomersUIContext","selectedCustomers","entities","ids","_customers","forEach","id","customer","find","el","push","CustomersUpdateStateDialog","show","onHide","customersUIContext","customersUIProps","setIds","queryParams","state","customers","isLoading","actionsLoading","length","status","setStatus","dispatch","updateStatus","updateCustomersStatus","then","fetchCustomers","map","lastName","firstName","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport {\n  CustomerStatusCssClasses,\n  CustomerStatusTitles,\n} from \"../CustomersUIHelpers\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nconst selectedCustomers = (entities, ids) => {\n  const _customers = [];\n  ids.forEach((id) => {\n    const customer = entities.find((el) => el.id === id);\n    if (customer) {\n      _customers.push(customer);\n    }\n  });\n  return _customers;\n};\n\nexport function CustomersUpdateStateDialog({ show, onHide }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams,\n    };\n  }, [customersUIContext]);\n\n  // Customers Redux state\n  const { customers, isLoading } = useSelector(\n    (state) => ({\n      customers: selectedCustomers(\n        state.customers.entities,\n        customersUIProps.ids\n      ),\n      isLoading: state.customers.actionsLoading,\n    }),\n    shallowEqual\n  );\n\n  // if !id we should close modal\n  useEffect(() => {\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customersUIProps.ids]);\n\n  const [status, setStatus] = useState(0);\n\n  const dispatch = useDispatch();\n  const updateStatus = () => {\n    // server request for update customers status by selected ids\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(\n      () => {\n        // refresh list after deletion\n        dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\n          () => {\n            // clear selections list\n            customersUIProps.setIds([]);\n            // closing delete modal\n            onHide();\n          }\n        );\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Status has been updated for selected customers\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\n        {/*begin::Loading*/}\n        {isLoading && (\n          <div className=\"overlay-layer\">\n            <div className=\"spinner spinner-lg spinner-primary\" />\n          </div>\n        )}\n        {/*end::Loading*/}\n        <table className=\"table table table-head-custom table-vertical-center overflow-hidden\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>STATUS</th>\n              <th>CUSTOMER</th>\n            </tr>\n          </thead>\n          <tbody>\n            {customers.map((customer) => (\n              <tr key={`id${customer.id}`}>\n                <td>{customer.id}</td>\n                <td>\n                  <span\n                    className={`label label-lg label-light-${\n                      CustomerStatusCssClasses[customer.status]\n                    } label-inline`}\n                  >\n                    {\" \"}\n                    {CustomerStatusTitles[customer.status]}\n                  </span>\n                </td>\n                <td>\n                  <span className=\"ml-3\">\n                    {customer.lastName}, {customer.firstName}\n                  </span>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Modal.Body>\n      <Modal.Footer className=\"form\">\n        <div className=\"form-group\">\n          <select\n            className=\"form-control\"\n            value={status}\n            onChange={(e) => setStatus(+e.target.value)}\n          >\n            <option value=\"0\">Suspended</option>\n            <option value=\"1\">Active</option>\n            <option value=\"2\">Pending</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate mr-3\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            onClick={updateStatus}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Update Status\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}