{"ast":null,"code":"import _slicedToArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/inputs/TransferListExamplesPage.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, List, ListItem, Checkbox, Grid, Button, ListItemText, ListItemIcon, Card, CardHeader, Divider } from \"@material-ui/core\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      margin: \"auto\"\n    },\n    paper: {\n      width: 200,\n      height: 230,\n      overflow: \"auto\"\n    },\n    button: {\n      margin: theme.spacing(0.5, 0)\n    }\n  };\n});\n\nfunction not(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) === -1;\n  });\n}\n\nfunction intersection(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) !== -1;\n  });\n} // Example 2\n\n\nvar useStyles2 = makeStyles(function (theme) {\n  return {\n    root: {\n      margin: \"auto\"\n    },\n    cardHeader: {\n      padding: theme.spacing(1, 2)\n    },\n    list: {\n      width: 200,\n      height: 230,\n      backgroundColor: theme.palette.background.paper,\n      overflow: \"auto\"\n    },\n    button: {\n      margin: theme.spacing(0.5, 0)\n    }\n  };\n});\n\nfunction not2(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) === -1;\n  });\n}\n\nfunction intersection2(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) !== -1;\n  });\n}\n\nfunction union2(a, b) {\n  return [].concat(_toConsumableArray(a), _toConsumableArray(not2(b, a)));\n}\n\nexport default function TransferListExamplesPage() {\n  var _this = this;\n\n  // Example 1\n  var classes = useStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var _React$useState3 = React.useState([0, 1, 2, 3]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      left = _React$useState4[0],\n      setLeft = _React$useState4[1];\n\n  var _React$useState5 = React.useState([4, 5, 6, 7]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      right = _React$useState6[0],\n      setRight = _React$useState6[1];\n\n  var leftChecked = intersection(checked, left);\n  var rightChecked = intersection(checked, right);\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      var currentIndex = checked.indexOf(value);\n\n      var newChecked = _toConsumableArray(checked);\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setChecked(newChecked);\n    };\n  };\n\n  var handleAllRight = function handleAllRight() {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  var handleCheckedRight = function handleCheckedRight() {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  var handleCheckedLeft = function handleCheckedLeft() {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  var handleAllLeft = function handleAllLeft() {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  var customList = function customList(items) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, items.map(function (value) {\n      var labelId = \"transfer-list-item-\".concat(value, \"-label\");\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: value,\n        role: \"listitem\",\n        button: true,\n        onClick: handleToggle(value),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: checked.indexOf(value) !== -1,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          \"aria-labelledby\": labelId\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: \"List item \".concat(value + 1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    })));\n  }; // Example 2\n\n\n  var classes2 = useStyles2();\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      checked2 = _React$useState8[0],\n      setChecked2 = _React$useState8[1];\n\n  var _React$useState9 = React.useState([0, 1, 2, 3]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      left2 = _React$useState10[0],\n      setLeft2 = _React$useState10[1];\n\n  var _React$useState11 = React.useState([4, 5, 6, 7]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      right2 = _React$useState12[0],\n      setRight2 = _React$useState12[1];\n\n  var leftChecked2 = intersection2(checked2, left2);\n  var rightChecked2 = intersection2(checked2, right2);\n\n  var handleToggle2 = function handleToggle2(value) {\n    return function () {\n      var currentIndex2 = checked2.indexOf(value);\n\n      var newChecked2 = _toConsumableArray(checked2);\n\n      if (currentIndex2 === -1) {\n        newChecked2.push(value);\n      } else {\n        newChecked2.splice(currentIndex2, 1);\n      }\n\n      setChecked2(newChecked2);\n    };\n  };\n\n  var numberOfChecked2 = function numberOfChecked2(items) {\n    return intersection2(checked2, items).length;\n  };\n\n  var handleToggleAll2 = function handleToggleAll2(items) {\n    return function () {\n      if (numberOfChecked2(items) === items.length) {\n        setChecked2(not2(checked2, items));\n      } else {\n        setChecked2(union2(checked2, items));\n      }\n    };\n  };\n\n  var handleCheckedRight2 = function handleCheckedRight2() {\n    setRight2(right2.concat(leftChecked2));\n    setLeft2(not2(left2, leftChecked2));\n    setChecked2(not2(checked2, leftChecked2));\n  };\n\n  var handleCheckedLeft2 = function handleCheckedLeft2() {\n    setLeft2(left2.concat(rightChecked2));\n    setRight2(not2(right2, rightChecked2));\n    setChecked2(not2(checked2, rightChecked2));\n  };\n\n  var customList2 = function customList2(title, items) {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: classes2.cardHeader,\n      avatar: /*#__PURE__*/React.createElement(Checkbox, {\n        onClick: handleToggleAll2(items),\n        checked: numberOfChecked2(items) === items.length && items.length !== 0,\n        indeterminate: numberOfChecked2(items) !== items.length && numberOfChecked2(items) !== 0,\n        disabled: items.length === 0,\n        inputProps: {\n          \"aria-label\": \"all items selected\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }),\n      title: title,\n      subheader: \"\".concat(numberOfChecked2(items), \"/\").concat(items.length, \" selected\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      className: classes2.list,\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, items.map(function (value) {\n      var labelId = \"transfer-list-all-item-\".concat(value, \"-label\");\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: value,\n        role: \"listitem\",\n        button: true,\n        onClick: handleToggle2(value),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: checked2.indexOf(value) !== -1,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          \"aria-labelledby\": labelId\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: \"List item \".concat(value + 1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, \"A transfer list (or \\\"shuttle\\\") enables the user to move one or more list items between lists.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/transfer-list/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Simple Transfer List\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, \"For completeness, this example includes buttons for \\\"move all\\\", but not every transfer list needs these.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, customList(left)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleAllRight,\n    disabled: left.length === 0,\n    \"aria-label\": \"move all right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon2-fast-next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleCheckedRight,\n    disabled: leftChecked.length === 0,\n    \"aria-label\": \"move selected right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon2-next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: \"\".concat(classes.button),\n    onClick: handleCheckedLeft,\n    disabled: rightChecked.length === 0,\n    \"aria-label\": \"move selected left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon2-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleAllLeft,\n    disabled: right.length === 0,\n    \"aria-label\": \"move all left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon2-fast-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, customList(right))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Enhanced Transfer List\",\n    codeBlockHeight: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, \"This example exchanges the \\\"move all\\\" buttons for a \\\"select all / select none\\\" checkbox, and adds a counter.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes2.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, customList2(\"Choices\", left2)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes2.button,\n    onClick: handleCheckedRight2,\n    disabled: leftChecked2.length === 0,\n    \"aria-label\": \"move selected right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon2-next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes2.button,\n    onClick: handleCheckedLeft2,\n    disabled: rightChecked2.length === 0,\n    \"aria-label\": \"move selected left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"flaticon2-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }, customList2(\"Chosen\", right2)))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Grid from '@material-ui/core/Grid';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport Button from '@material-ui/core/Button';\\nimport Paper from '@material-ui/core/Paper';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    margin: 'auto',\\n  },\\n  paper: {\\n    width: 200,\\n    height: 230,\\n    overflow: 'auto',\\n  },\\n  button: {\\n    margin: theme.spacing(0.5, 0),\\n  },\\n}));\\n\\nfunction not(a, b) {\\n  return a.filter(value => b.indexOf(value) === -1);\\n}\\n\\nfunction intersection(a, b) {\\n  return a.filter(value => b.indexOf(value) !== -1);\\n}\\n\\nexport default function TransferList() {\\n  const classes = useStyles();\\n  const [checked, setChecked] = React.useState([]);\\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\\n\\n  const leftChecked = intersection(checked, left);\\n  const rightChecked = intersection(checked, right);\\n\\n  const handleToggle = value => () => {\\n    const currentIndex = checked.indexOf(value);\\n    const newChecked = [...checked];\\n\\n    if (currentIndex === -1) {\\n      newChecked.push(value);\\n    } else {\\n      newChecked.splice(currentIndex, 1);\\n    }\\n\\n    setChecked(newChecked);\\n  };\\n\\n  const handleAllRight = () => {\\n    setRight(right.concat(left));\\n    setLeft([]);\\n  };\\n\\n  const handleCheckedRight = () => {\\n    setRight(right.concat(leftChecked));\\n    setLeft(not(left, leftChecked));\\n    setChecked(not(checked, leftChecked));\\n  };\\n\\n  const handleCheckedLeft = () => {\\n    setLeft(left.concat(rightChecked));\\n    setRight(not(right, rightChecked));\\n    setChecked(not(checked, rightChecked));\\n  };\\n\\n  const handleAllLeft = () => {\\n    setLeft(left.concat(right));\\n    setRight([]);\\n  };\\n\\n  const customList = items => (\\n    <Paper className={classes.paper}>\\n      <List dense component=\\\"div\\\" role=\\\"list\\\">\\n        {items.map(value => {\\n          const labelId = `transfer-list-item-${value}-label`;\\n\\n          return (\\n            <ListItem key={value} role=\\\"listitem\\\" button onClick={handleToggle(value)}>\\n              <ListItemIcon>\\n                <Checkbox\\n                  checked={checked.indexOf(value) !== -1}\\n                  tabIndex={-1}\\n                  disableRipple\\n                  inputProps={{ 'aria-labelledby': labelId }}\\n                />\\n              </ListItemIcon>\\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\\n            </ListItem>\\n          );\\n        })}\\n        <ListItem />\\n      </List>\\n    </Paper>\\n  );\\n\\n  return (\\n    <Grid container spacing={2} justify=\\\"center\\\" alignItems=\\\"center\\\" className={classes.root}>\\n      <Grid item>{customList(left)}</Grid>\\n      <Grid item>\\n        <Grid container direction=\\\"column\\\" alignItems=\\\"center\\\">\\n          <Button\\n            variant=\\\"outlined\\\"\\n            size=\\\"small\\\"\\n            className={classes.button}\\n            onClick={handleAllRight}\\n            disabled={left.length === 0}\\n            aria-label=\\\"move all right\\\"\\n          >\\n            \\u226B\\n          </Button>\\n          <Button\\n            variant=\\\"outlined\\\"\\n            size=\\\"small\\\"\\n            className={classes.button}\\n            onClick={handleCheckedRight}\\n            disabled={leftChecked.length === 0}\\n            aria-label=\\\"move selected right\\\"\\n          >\\n            &gt;\\n          </Button>\\n          <Button\\n            variant=\\\"outlined\\\"\\n            size=\\\"small\\\"\\n            className={classes.button}\\n            onClick={handleCheckedLeft}\\n            disabled={rightChecked.length === 0}\\n            aria-label=\\\"move selected left\\\"\\n          >\\n            &lt;\\n          </Button>\\n          <Button\\n            variant=\\\"outlined\\\"\\n            size=\\\"small\\\"\\n            className={classes.button}\\n            onClick={handleAllLeft}\\n            disabled={right.length === 0}\\n            aria-label=\\\"move all left\\\"\\n          >\\n            \\u226A\\n          </Button>\\n        </Grid>\\n      </Grid>\\n      <Grid item>{customList(right)}</Grid>\\n    </Grid>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Grid from '@material-ui/core/Grid';\\nimport List from '@material-ui/core/List';\\nimport Card from '@material-ui/core/Card';\\nimport CardHeader from '@material-ui/core/CardHeader';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport Checkbox from '@material-ui/core/Checkbox';\\nimport Button from '@material-ui/core/Button';\\nimport Divider from '@material-ui/core/Divider';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    margin: 'auto',\\n  },\\n  cardHeader: {\\n    padding: theme.spacing(1, 2),\\n  },\\n  list: {\\n    width: 200,\\n    height: 230,\\n    backgroundColor: theme.palette.background.paper,\\n    overflow: 'auto',\\n  },\\n  button: {\\n    margin: theme.spacing(0.5, 0),\\n  },\\n}));\\n\\nfunction not(a, b) {\\n  return a.filter(value => b.indexOf(value) === -1);\\n}\\n\\nfunction intersection(a, b) {\\n  return a.filter(value => b.indexOf(value) !== -1);\\n}\\n\\nfunction union(a, b) {\\n  return [...a, ...not(b, a)];\\n}\\n\\nexport default function TransferList() {\\n  const classes = useStyles();\\n  const [checked, setChecked] = React.useState([]);\\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\\n\\n  const leftChecked = intersection(checked, left);\\n  const rightChecked = intersection(checked, right);\\n\\n  const handleToggle = value => () => {\\n    const currentIndex = checked.indexOf(value);\\n    const newChecked = [...checked];\\n\\n    if (currentIndex === -1) {\\n      newChecked.push(value);\\n    } else {\\n      newChecked.splice(currentIndex, 1);\\n    }\\n\\n    setChecked(newChecked);\\n  };\\n\\n  const numberOfChecked = items => intersection(checked, items).length;\\n\\n  const handleToggleAll = items => () => {\\n    if (numberOfChecked(items) === items.length) {\\n      setChecked(not(checked, items));\\n    } else {\\n      setChecked(union(checked, items));\\n    }\\n  };\\n\\n  const handleCheckedRight = () => {\\n    setRight(right.concat(leftChecked));\\n    setLeft(not(left, leftChecked));\\n    setChecked(not(checked, leftChecked));\\n  };\\n\\n  const handleCheckedLeft = () => {\\n    setLeft(left.concat(rightChecked));\\n    setRight(not(right, rightChecked));\\n    setChecked(not(checked, rightChecked));\\n  };\\n\\n  const customList = (title, items) => (\\n    <Card>\\n      <CardHeader\\n        className={classes.cardHeader}\\n        avatar={\\n          <Checkbox\\n            onClick={handleToggleAll(items)}\\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\\n            disabled={items.length === 0}\\n            inputProps={{ 'aria-label': 'all items selected' }}\\n          />\\n        }\\n        title={title}\\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\\n      />\\n      <Divider />\\n      <List className={classes.list} dense component=\\\"div\\\" role=\\\"list\\\">\\n        {items.map(value => {\\n          const labelId = `transfer-list-all-item-${value}-label`;\\n\\n          return (\\n            <ListItem key={value} role=\\\"listitem\\\" button onClick={handleToggle(value)}>\\n              <ListItemIcon>\\n                <Checkbox\\n                  checked={checked.indexOf(value) !== -1}\\n                  tabIndex={-1}\\n                  disableRipple\\n                  inputProps={{ 'aria-labelledby': labelId }}\\n                />\\n              </ListItemIcon>\\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\\n            </ListItem>\\n          );\\n        })}\\n        <ListItem />\\n      </List>\\n    </Card>\\n  );\\n\\n  return (\\n    <Grid container spacing={2} justify=\\\"center\\\" alignItems=\\\"center\\\" className={classes.root}>\\n      <Grid item>{customList('Choices', left)}</Grid>\\n      <Grid item>\\n        <Grid container direction=\\\"column\\\" alignItems=\\\"center\\\">\\n          <Button\\n            variant=\\\"outlined\\\"\\n            size=\\\"small\\\"\\n            className={classes.button}\\n            onClick={handleCheckedRight}\\n            disabled={leftChecked.length === 0}\\n            aria-label=\\\"move selected right\\\"\\n          >\\n            &gt;\\n          </Button>\\n          <Button\\n            variant=\\\"outlined\\\"\\n            size=\\\"small\\\"\\n            className={classes.button}\\n            onClick={handleCheckedLeft}\\n            disabled={rightChecked.length === 0}\\n            aria-label=\\\"move selected left\\\"\\n          >\\n            &lt;\\n          </Button>\\n        </Grid>\\n      </Grid>\\n      <Grid item>{customList('Chosen', right)}</Grid>\\n    </Grid>\\n  );\\n}\\n\";","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/inputs/TransferListExamplesPage.js"],"names":["React","makeStyles","Paper","List","ListItem","Checkbox","Grid","Button","ListItemText","ListItemIcon","Card","CardHeader","Divider","Notice","KTCodeExample","useStyles","theme","root","margin","paper","width","height","overflow","button","spacing","not","a","b","filter","value","indexOf","intersection","useStyles2","cardHeader","padding","list","backgroundColor","palette","background","not2","intersection2","union2","TransferListExamplesPage","classes","useState","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","handleAllRight","concat","handleCheckedRight","handleCheckedLeft","handleAllLeft","customList","items","map","labelId","classes2","checked2","setChecked2","left2","setLeft2","right2","setRight2","leftChecked2","rightChecked2","handleToggle2","currentIndex2","newChecked2","numberOfChecked2","length","handleToggleAll2","handleCheckedRight2","handleCheckedLeft2","customList2","title","jsCode1","jsCode2"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SACEC,KADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,IALF,EAMEC,MANF,EAOEC,YAPF,EAQEC,YARF,EASEC,IATF,EAUEC,UAVF,EAWEC,OAXF,QAYO,mBAZP;AAaA,SAAQC,MAAR,EAAgBC,aAAhB,QAAoC,0CAApC;AAEA,IAAMC,SAAS,GAAGd,UAAU,CAAC,UAAAe,KAAK;AAAA,SAAK;AACrCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE;AADJ,KAD+B;AAIrCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,GADF;AAELC,MAAAA,MAAM,EAAE,GAFH;AAGLC,MAAAA,QAAQ,EAAE;AAHL,KAJ8B;AASrCC,IAAAA,MAAM,EAAE;AACNL,MAAAA,MAAM,EAAEF,KAAK,CAACQ,OAAN,CAAc,GAAd,EAAmB,CAAnB;AADF;AAT6B,GAAL;AAAA,CAAN,CAA5B;;AAcA,SAASC,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACjB,SAAOD,CAAC,CAACE,MAAF,CAAS,UAAAC,KAAK;AAAA,WAAIF,CAAC,CAACG,OAAF,CAAUD,KAAV,MAAqB,CAAC,CAA1B;AAAA,GAAd,CAAP;AACD;;AAED,SAASE,YAAT,CAAsBL,CAAtB,EAAyBC,CAAzB,EAA4B;AAC1B,SAAOD,CAAC,CAACE,MAAF,CAAS,UAAAC,KAAK;AAAA,WAAIF,CAAC,CAACG,OAAF,CAAUD,KAAV,MAAqB,CAAC,CAA1B;AAAA,GAAd,CAAP;AACD,C,CAED;;;AACA,IAAMG,UAAU,GAAG/B,UAAU,CAAC,UAAAe,KAAK;AAAA,SAAK;AACtCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE;AADJ,KADgC;AAItCe,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAElB,KAAK,CAACQ,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADC,KAJ0B;AAOtCW,IAAAA,IAAI,EAAE;AACJf,MAAAA,KAAK,EAAE,GADH;AAEJC,MAAAA,MAAM,EAAE,GAFJ;AAGJe,MAAAA,eAAe,EAAEpB,KAAK,CAACqB,OAAN,CAAcC,UAAd,CAAyBnB,KAHtC;AAIJG,MAAAA,QAAQ,EAAE;AAJN,KAPgC;AAatCC,IAAAA,MAAM,EAAE;AACNL,MAAAA,MAAM,EAAEF,KAAK,CAACQ,OAAN,CAAc,GAAd,EAAmB,CAAnB;AADF;AAb8B,GAAL;AAAA,CAAN,CAA7B;;AAkBA,SAASe,IAAT,CAAcb,CAAd,EAAiBC,CAAjB,EAAoB;AAClB,SAAOD,CAAC,CAACE,MAAF,CAAS,UAAAC,KAAK;AAAA,WAAIF,CAAC,CAACG,OAAF,CAAUD,KAAV,MAAqB,CAAC,CAA1B;AAAA,GAAd,CAAP;AACD;;AAED,SAASW,aAAT,CAAuBd,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,SAAOD,CAAC,CAACE,MAAF,CAAS,UAAAC,KAAK;AAAA,WAAIF,CAAC,CAACG,OAAF,CAAUD,KAAV,MAAqB,CAAC,CAA1B;AAAA,GAAd,CAAP;AACD;;AAED,SAASY,MAAT,CAAgBf,CAAhB,EAAmBC,CAAnB,EAAsB;AACpB,sCAAWD,CAAX,sBAAiBa,IAAI,CAACZ,CAAD,EAAID,CAAJ,CAArB;AACD;;AAED,eAAe,SAASgB,wBAAT,GAAoC;AAAA;;AACjD;AACA,MAAMC,OAAO,GAAG5B,SAAS,EAAzB;;AACA,wBAA8Bf,KAAK,CAAC4C,QAAN,CAAe,EAAf,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,yBAAwB9C,KAAK,CAAC4C,QAAN,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAf,CAAxB;AAAA;AAAA,MAAOG,IAAP;AAAA,MAAaC,OAAb;;AACA,yBAA0BhD,KAAK,CAAC4C,QAAN,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAf,CAA1B;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,WAAW,GAAGpB,YAAY,CAACc,OAAD,EAAUE,IAAV,CAAhC;AACA,MAAMK,YAAY,GAAGrB,YAAY,CAACc,OAAD,EAAUI,KAAV,CAAjC;;AAEA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAAAxB,KAAK;AAAA,WAAI,YAAM;AAClC,UAAMyB,YAAY,GAAGT,OAAO,CAACf,OAAR,CAAgBD,KAAhB,CAArB;;AACA,UAAM0B,UAAU,sBAAOV,OAAP,CAAhB;;AAEA,UAAIS,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBC,QAAAA,UAAU,CAACC,IAAX,CAAgB3B,KAAhB;AACD,OAFD,MAEO;AACL0B,QAAAA,UAAU,CAACE,MAAX,CAAkBH,YAAlB,EAAgC,CAAhC;AACD;;AAEDR,MAAAA,UAAU,CAACS,UAAD,CAAV;AACD,KAXyB;AAAA,GAA1B;;AAaA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BR,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAaZ,IAAb,CAAD,CAAR;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAHD;;AAKA,MAAMY,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BV,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAaR,WAAb,CAAD,CAAR;AACAH,IAAAA,OAAO,CAACvB,GAAG,CAACsB,IAAD,EAAOI,WAAP,CAAJ,CAAP;AACAL,IAAAA,UAAU,CAACrB,GAAG,CAACoB,OAAD,EAAUM,WAAV,CAAJ,CAAV;AACD,GAJD;;AAMA,MAAMU,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9Bb,IAAAA,OAAO,CAACD,IAAI,CAACY,MAAL,CAAYP,YAAZ,CAAD,CAAP;AACAF,IAAAA,QAAQ,CAACzB,GAAG,CAACwB,KAAD,EAAQG,YAAR,CAAJ,CAAR;AACAN,IAAAA,UAAU,CAACrB,GAAG,CAACoB,OAAD,EAAUO,YAAV,CAAJ,CAAV;AACD,GAJD;;AAMA,MAAMU,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1Bd,IAAAA,OAAO,CAACD,IAAI,CAACY,MAAL,CAAYV,KAAZ,CAAD,CAAP;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAHD;;AAKA,MAAMa,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,wBACtB,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAErB,OAAO,CAACxB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAY,MAAA,SAAS,EAAC,KAAtB;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG6C,KAAK,CAACC,GAAN,CAAU,UAAApC,KAAK,EAAI;AAClB,UAAMqC,OAAO,gCAAyBrC,KAAzB,WAAb;AAEA,0BACE,oBAAC,QAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,MAAM,MAHR;AAIE,QAAA,OAAO,EAAEwB,YAAY,CAACxB,KAAD,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AACE,QAAA,OAAO,EAAEgB,OAAO,CAACf,OAAR,CAAgBD,KAAhB,MAA2B,CAAC,CADvC;AAEE,QAAA,QAAQ,EAAE,CAAC,CAFb;AAGE,QAAA,aAAa,MAHf;AAIE,QAAA,UAAU,EAAE;AAAE,6BAAmBqC;AAArB,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,eAcE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAEA,OAAlB;AAA2B,QAAA,OAAO,sBAAerC,KAAK,GAAG,CAAvB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF;AAkBD,KArBA,CADH,eAuBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF,CADsB;AAAA,GAAxB,CA7CiD,CA2EjD;;;AACA,MAAMsC,QAAQ,GAAGnC,UAAU,EAA3B;;AACA,yBAAgChC,KAAK,CAAC4C,QAAN,CAAe,EAAf,CAAhC;AAAA;AAAA,MAAOwB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,yBAA0BrE,KAAK,CAAC4C,QAAN,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAf,CAA1B;AAAA;AAAA,MAAO0B,KAAP;AAAA,MAAcC,QAAd;;AACA,0BAA4BvE,KAAK,CAAC4C,QAAN,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAf,CAA5B;AAAA;AAAA,MAAO4B,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,YAAY,GAAGlC,aAAa,CAAC4B,QAAD,EAAWE,KAAX,CAAlC;AACA,MAAMK,aAAa,GAAGnC,aAAa,CAAC4B,QAAD,EAAWI,MAAX,CAAnC;;AAEA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAA/C,KAAK;AAAA,WAAI,YAAM;AACnC,UAAMgD,aAAa,GAAGT,QAAQ,CAACtC,OAAT,CAAiBD,KAAjB,CAAtB;;AACA,UAAMiD,WAAW,sBAAOV,QAAP,CAAjB;;AAEA,UAAIS,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBC,QAAAA,WAAW,CAACtB,IAAZ,CAAiB3B,KAAjB;AACD,OAFD,MAEO;AACLiD,QAAAA,WAAW,CAACrB,MAAZ,CAAmBoB,aAAnB,EAAkC,CAAlC;AACD;;AAEDR,MAAAA,WAAW,CAACS,WAAD,CAAX;AACD,KAX0B;AAAA,GAA3B;;AAaA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAf,KAAK;AAAA,WAAIxB,aAAa,CAAC4B,QAAD,EAAWJ,KAAX,CAAb,CAA+BgB,MAAnC;AAAA,GAA9B;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAjB,KAAK;AAAA,WAAI,YAAM;AACtC,UAAIe,gBAAgB,CAACf,KAAD,CAAhB,KAA4BA,KAAK,CAACgB,MAAtC,EAA8C;AAC5CX,QAAAA,WAAW,CAAC9B,IAAI,CAAC6B,QAAD,EAAWJ,KAAX,CAAL,CAAX;AACD,OAFD,MAEO;AACLK,QAAAA,WAAW,CAAC5B,MAAM,CAAC2B,QAAD,EAAWJ,KAAX,CAAP,CAAX;AACD;AACF,KAN6B;AAAA,GAA9B;;AAQA,MAAMkB,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCT,IAAAA,SAAS,CAACD,MAAM,CAACb,MAAP,CAAce,YAAd,CAAD,CAAT;AACAH,IAAAA,QAAQ,CAAChC,IAAI,CAAC+B,KAAD,EAAQI,YAAR,CAAL,CAAR;AACAL,IAAAA,WAAW,CAAC9B,IAAI,CAAC6B,QAAD,EAAWM,YAAX,CAAL,CAAX;AACD,GAJD;;AAMA,MAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BZ,IAAAA,QAAQ,CAACD,KAAK,CAACX,MAAN,CAAagB,aAAb,CAAD,CAAR;AACAF,IAAAA,SAAS,CAAClC,IAAI,CAACiC,MAAD,EAASG,aAAT,CAAL,CAAT;AACAN,IAAAA,WAAW,CAAC9B,IAAI,CAAC6B,QAAD,EAAWO,aAAX,CAAL,CAAX;AACD,GAJD;;AAMA,MAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQrB,KAAR;AAAA,wBAClB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEG,QAAQ,CAAClC,UADtB;AAEE,MAAA,MAAM,eACJ,oBAAC,QAAD;AACE,QAAA,OAAO,EAAEgD,gBAAgB,CAACjB,KAAD,CAD3B;AAEE,QAAA,OAAO,EACLe,gBAAgB,CAACf,KAAD,CAAhB,KAA4BA,KAAK,CAACgB,MAAlC,IAA4ChB,KAAK,CAACgB,MAAN,KAAiB,CAHjE;AAKE,QAAA,aAAa,EACXD,gBAAgB,CAACf,KAAD,CAAhB,KAA4BA,KAAK,CAACgB,MAAlC,IACAD,gBAAgB,CAACf,KAAD,CAAhB,KAA4B,CAPhC;AASE,QAAA,QAAQ,EAAEA,KAAK,CAACgB,MAAN,KAAiB,CAT7B;AAUE,QAAA,UAAU,EAAE;AAAE,wBAAc;AAAhB,SAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAgBE,MAAA,KAAK,EAAEK,KAhBT;AAiBE,MAAA,SAAS,YAAKN,gBAAgB,CAACf,KAAD,CAArB,cAAgCA,KAAK,CAACgB,MAAtC,cAjBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAoBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,eAqBE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEb,QAAQ,CAAChC,IAA1B;AAAgC,MAAA,KAAK,MAArC;AAAsC,MAAA,SAAS,EAAC,KAAhD;AAAsD,MAAA,IAAI,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG6B,KAAK,CAACC,GAAN,CAAU,UAAApC,KAAK,EAAI;AAClB,UAAMqC,OAAO,oCAA6BrC,KAA7B,WAAb;AAEA,0BACE,oBAAC,QAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,MAAM,MAHR;AAIE,QAAA,OAAO,EAAE+C,aAAa,CAAC/C,KAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AACE,QAAA,OAAO,EAAEuC,QAAQ,CAACtC,OAAT,CAAiBD,KAAjB,MAA4B,CAAC,CADxC;AAEE,QAAA,QAAQ,EAAE,CAAC,CAFb;AAGE,QAAA,aAAa,MAHf;AAIE,QAAA,UAAU,EAAE;AAAE,6BAAmBqC;AAArB,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,eAcE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAEA,OAAlB;AAA2B,QAAA,OAAO,sBAAerC,KAAK,GAAG,CAAvB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF;AAkBD,KArBA,CADH,eAuBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CArBF,CADkB;AAAA,GAApB;;AAkDA,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,+BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGADF,EAIU,GAJV,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DACuD,GADvD,eAEE;AACE,IAAA,MAAM,EAAC,QADT;AAEE,IAAA,SAAS,EAAC,kBAFZ;AAGE,IAAA,GAAG,EAAC,qBAHN;AAIE,IAAA,IAAI,EAAC,mDAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CALF,CADF,eAmBE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,MAAM,EAAEyD,OADV;AAEE,IAAA,eAAe,EAAC,sBAFlB;AAGE,IAAA,eAAe,EAAC,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHALF,eASE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,SAAS,EAAE3C,OAAO,CAAC1B,IALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY8C,UAAU,CAAChB,IAAD,CAAtB,CAPF,eAQE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,UAAU,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,SAAS,EAAEJ,OAAO,CAACpB,MAHrB;AAIE,IAAA,OAAO,EAAEmC,cAJX;AAKE,IAAA,QAAQ,EAAEX,IAAI,CAACiC,MAAL,KAAgB,CAL5B;AAME,kBAAW,gBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,eAWE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,SAAS,EAAErC,OAAO,CAACpB,MAHrB;AAIE,IAAA,OAAO,EAAEqC,kBAJX;AAKE,IAAA,QAAQ,EAAET,WAAW,CAAC6B,MAAZ,KAAuB,CALnC;AAME,kBAAW,qBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAXF,eAqBE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,SAAS,YAAKrC,OAAO,CAACpB,MAAb,CAHX;AAIE,IAAA,OAAO,EAAEsC,iBAJX;AAKE,IAAA,QAAQ,EAAET,YAAY,CAAC4B,MAAb,KAAwB,CALpC;AAME,kBAAW,oBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CArBF,eA+BE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,SAAS,EAAErC,OAAO,CAACpB,MAHrB;AAIE,IAAA,OAAO,EAAEuC,aAJX;AAKE,IAAA,QAAQ,EAAEb,KAAK,CAAC+B,MAAN,KAAiB,CAL7B;AAME,kBAAW,eANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CA/BF,CADF,CARF,eAoDE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYjB,UAAU,CAACd,KAAD,CAAtB,CApDF,CAVF,CADF,CADF,eAoEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,MAAM,EAAEsC,OADV;AAEE,IAAA,eAAe,EAAC,wBAFlB;AAGE,IAAA,eAAe,EAAC,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wHALF,eASE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,SAAS,EAAEpB,QAAQ,CAAClD,IALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYmE,WAAW,CAAC,SAAD,EAAYd,KAAZ,CAAvB,CAPF,eAQE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,UAAU,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,SAAS,EAAEH,QAAQ,CAAC5C,MAHtB;AAIE,IAAA,OAAO,EAAE2D,mBAJX;AAKE,IAAA,QAAQ,EAAER,YAAY,CAACM,MAAb,KAAwB,CALpC;AAME,kBAAW,qBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,eAWE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,SAAS,EAAEb,QAAQ,CAAC5C,MAHtB;AAIE,IAAA,OAAO,EAAE4D,kBAJX;AAKE,IAAA,QAAQ,EAAER,aAAa,CAACK,MAAd,KAAyB,CALrC;AAME,kBAAW,oBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAXF,CADF,CARF,eAgCE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYI,WAAW,CAAC,QAAD,EAAWZ,MAAX,CAAvB,CAhCF,CAVF,CADF,CApEF,CAnBF,CADF;AA0ID;AAED,IAAMc,OAAO,k2IAAb;AA2JA,IAAMC,OAAO,4uJAAb","sourcesContent":["/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  List,\n  ListItem,\n  Checkbox,\n  Grid,\n  Button,\n  ListItemText,\n  ListItemIcon,\n  Card,\n  CardHeader,\n  Divider\n} from \"@material-ui/core\";\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"auto\"\n  },\n  paper: {\n    width: 200,\n    height: 230,\n    overflow: \"auto\"\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  }\n}));\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\n// Example 2\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    margin: \"auto\"\n  },\n  cardHeader: {\n    padding: theme.spacing(1, 2)\n  },\n  list: {\n    width: 200,\n    height: 230,\n    backgroundColor: theme.palette.background.paper,\n    overflow: \"auto\"\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  }\n}));\n\nfunction not2(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection2(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nfunction union2(a, b) {\n  return [...a, ...not2(b, a)];\n}\n\nexport default function TransferListExamplesPage() {\n  // Example 1\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = items => (\n    <Paper className={classes.paper}>\n      <List dense component=\"div\" role=\"list\">\n        {items.map(value => {\n          const labelId = `transfer-list-item-${value}-label`;\n\n          return (\n            <ListItem\n              key={value}\n              role=\"listitem\"\n              button\n              onClick={handleToggle(value)}\n            >\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ \"aria-labelledby\": labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  // Example 2\n  const classes2 = useStyles2();\n  const [checked2, setChecked2] = React.useState([]);\n  const [left2, setLeft2] = React.useState([0, 1, 2, 3]);\n  const [right2, setRight2] = React.useState([4, 5, 6, 7]);\n\n  const leftChecked2 = intersection2(checked2, left2);\n  const rightChecked2 = intersection2(checked2, right2);\n\n  const handleToggle2 = value => () => {\n    const currentIndex2 = checked2.indexOf(value);\n    const newChecked2 = [...checked2];\n\n    if (currentIndex2 === -1) {\n      newChecked2.push(value);\n    } else {\n      newChecked2.splice(currentIndex2, 1);\n    }\n\n    setChecked2(newChecked2);\n  };\n\n  const numberOfChecked2 = items => intersection2(checked2, items).length;\n\n  const handleToggleAll2 = items => () => {\n    if (numberOfChecked2(items) === items.length) {\n      setChecked2(not2(checked2, items));\n    } else {\n      setChecked2(union2(checked2, items));\n    }\n  };\n\n  const handleCheckedRight2 = () => {\n    setRight2(right2.concat(leftChecked2));\n    setLeft2(not2(left2, leftChecked2));\n    setChecked2(not2(checked2, leftChecked2));\n  };\n\n  const handleCheckedLeft2 = () => {\n    setLeft2(left2.concat(rightChecked2));\n    setRight2(not2(right2, rightChecked2));\n    setChecked2(not2(checked2, rightChecked2));\n  };\n\n  const customList2 = (title, items) => (\n    <Card>\n      <CardHeader\n        className={classes2.cardHeader}\n        avatar={\n          <Checkbox\n            onClick={handleToggleAll2(items)}\n            checked={\n              numberOfChecked2(items) === items.length && items.length !== 0\n            }\n            indeterminate={\n              numberOfChecked2(items) !== items.length &&\n              numberOfChecked2(items) !== 0\n            }\n            disabled={items.length === 0}\n            inputProps={{ \"aria-label\": \"all items selected\" }}\n          />\n        }\n        title={title}\n        subheader={`${numberOfChecked2(items)}/${items.length} selected`}\n      />\n      <Divider />\n      <List className={classes2.list} dense component=\"div\" role=\"list\">\n        {items.map(value => {\n          const labelId = `transfer-list-all-item-${value}-label`;\n\n          return (\n            <ListItem\n              key={value}\n              role=\"listitem\"\n              button\n              onClick={handleToggle2(value)}\n            >\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked2.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ \"aria-labelledby\": labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Card>\n  );\n\n  return (\n    <>\n      <Notice icon=\"flaticon-warning font-primary\">\n        <span>\n          A transfer list (or \"shuttle\") enables the user to move one or more\n          list items between lists.\n        </span>{\" \"}\n        <span>\n          For more info please check the components's official{\" \"}\n          <a\n            target=\"_blank\"\n            className=\"font-weight-bold\"\n            rel=\"noopener noreferrer\"\n            href=\"https://material-ui.com/components/transfer-list/\"\n          >\n            demos & documentation\n          </a>\n        </span>\n      </Notice>\n\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <KTCodeExample\n            jsCode={jsCode1}\n            beforeCodeTitle=\"Simple Transfer List\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>\n              For completeness, this example includes buttons for \"move all\",\n              but not every transfer list needs these.\n            </span>\n            <div className=\"separator separator-dashed my-7\" />\n            <Grid\n              container\n              spacing={2}\n              justify=\"center\"\n              alignItems=\"center\"\n              className={classes.root}\n            >\n              <Grid item>{customList(left)}</Grid>\n              <Grid item>\n                <Grid container direction=\"column\" alignItems=\"center\">\n                  <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    className={classes.button}\n                    onClick={handleAllRight}\n                    disabled={left.length === 0}\n                    aria-label=\"move all right\"\n                  >\n                    <i className=\"flaticon2-fast-next\" />\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    className={classes.button}\n                    onClick={handleCheckedRight}\n                    disabled={leftChecked.length === 0}\n                    aria-label=\"move selected right\"\n                  >\n                    <i className=\"flaticon2-next\" />\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    className={`${classes.button}`}\n                    onClick={handleCheckedLeft}\n                    disabled={rightChecked.length === 0}\n                    aria-label=\"move selected left\"\n                  >\n                    <i className=\"flaticon2-back\" />\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    className={classes.button}\n                    onClick={handleAllLeft}\n                    disabled={right.length === 0}\n                    aria-label=\"move all left\"\n                  >\n                    <i className=\"flaticon2-fast-back\" />\n                  </Button>\n                </Grid>\n              </Grid>\n              <Grid item>{customList(right)}</Grid>\n            </Grid>\n          </KTCodeExample>\n        </div>\n        <div className=\"col-md-6\">\n          <KTCodeExample\n            jsCode={jsCode2}\n            beforeCodeTitle=\"Enhanced Transfer List\"\n            codeBlockHeight=\"400px\"\n          >\n            <span>\n              This example exchanges the \"move all\" buttons for a \"select all /\n              select none\" checkbox, and adds a counter.\n            </span>\n            <div className=\"separator separator-dashed my-7\" />\n            <Grid\n              container\n              spacing={2}\n              justify=\"center\"\n              alignItems=\"center\"\n              className={classes2.root}\n            >\n              <Grid item>{customList2(\"Choices\", left2)}</Grid>\n              <Grid item>\n                <Grid container direction=\"column\" alignItems=\"center\">\n                  <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    className={classes2.button}\n                    onClick={handleCheckedRight2}\n                    disabled={leftChecked2.length === 0}\n                    aria-label=\"move selected right\"\n                  >\n                    <i className=\"flaticon2-next\" />\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    className={classes2.button}\n                    onClick={handleCheckedLeft2}\n                    disabled={rightChecked2.length === 0}\n                    aria-label=\"move selected left\"\n                  >\n                    <i className=\"flaticon2-back\" />\n                  </Button>\n                </Grid>\n              </Grid>\n              <Grid item>{customList2(\"Chosen\", right2)}</Grid>\n            </Grid>\n          </KTCodeExample>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst jsCode1 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 'auto',\n  },\n  paper: {\n    width: 200,\n    height: 230,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n}));\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nexport default function TransferList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = items => (\n    <Paper className={classes.paper}>\n      <List dense component=\"div\" role=\"list\">\n        {items.map(value => {\n          const labelId = \\`transfer-list-item-\\${value}-label\\`;\n\n          return (\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={\\`List item \\${value + 1}\\`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\n      <Grid item>{customList(left)}</Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleAllRight}\n            disabled={left.length === 0}\n            aria-label=\"move all right\"\n          >\n            ≫\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label=\"move selected right\"\n          >\n            &gt;\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label=\"move selected left\"\n          >\n            &lt;\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleAllLeft}\n            disabled={right.length === 0}\n            aria-label=\"move all left\"\n          >\n            ≪\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList(right)}</Grid>\n    </Grid>\n  );\n}\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 'auto',\n  },\n  cardHeader: {\n    padding: theme.spacing(1, 2),\n  },\n  list: {\n    width: 200,\n    height: 230,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n}));\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nfunction union(a, b) {\n  return [...a, ...not(b, a)];\n}\n\nexport default function TransferList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const numberOfChecked = items => intersection(checked, items).length;\n\n  const handleToggleAll = items => () => {\n    if (numberOfChecked(items) === items.length) {\n      setChecked(not(checked, items));\n    } else {\n      setChecked(union(checked, items));\n    }\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const customList = (title, items) => (\n    <Card>\n      <CardHeader\n        className={classes.cardHeader}\n        avatar={\n          <Checkbox\n            onClick={handleToggleAll(items)}\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\n            disabled={items.length === 0}\n            inputProps={{ 'aria-label': 'all items selected' }}\n          />\n        }\n        title={title}\n        subheader={\\`\\${numberOfChecked(items)}/\\${items.length} selected\\`}\n      />\n      <Divider />\n      <List className={classes.list} dense component=\"div\" role=\"list\">\n        {items.map(value => {\n          const labelId = \\`transfer-list-all-item-\\${value}-label\\`;\n\n          return (\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={\\`List item \\${value + 1}\\`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Card>\n  );\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\n      <Grid item>{customList('Choices', left)}</Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label=\"move selected right\"\n          >\n            &gt;\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label=\"move selected left\"\n          >\n            &lt;\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList('Chosen', right)}</Grid>\n    </Grid>\n  );\n}\n`;\n"]},"metadata":{},"sourceType":"module"}