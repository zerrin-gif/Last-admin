{"ast":null,"code":"var _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialog.js\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../../_redux/specifications/specificationsActions\";\nimport { SpecificationEditDialogHeader } from \"./SpecificationEditDialogHeader\";\nimport { SpecificationEditForm } from \"./SpecificationEditForm\";\nimport { useSpecificationsUIContext } from \"../SpecificationsUIContext\";\nexport function SpecificationEditDialog() {\n  // Specifications UI Context\n  var specsUIContext = useSpecificationsUIContext();\n  var specsUIProps = useMemo(function () {\n    return {\n      id: specsUIContext.selectedId,\n      show: specsUIContext.showEditSpecificationDialog,\n      onHide: specsUIContext.closeEditSpecificationDialog,\n      productId: specsUIContext.productId,\n      queryParams: specsUIContext.queryParams,\n      initSpecification: specsUIContext.initSpecification\n    };\n  }, [specsUIContext]); // Specifications Redux state\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      actionsLoading: state.specifications.actionsLoading,\n      specificationForEdit: state.specifications.specificationForEdit\n    };\n  }, shallowEqual),\n      actionsLoading = _useSelector.actionsLoading,\n      specificationForEdit = _useSelector.specificationForEdit;\n\n  useEffect(function () {\n    // server request for getting spec by seleted id\n    dispatch(actions.fetchSpecification(specsUIProps.id));\n  }, [specsUIProps.id, dispatch]);\n\n  var saveSpecification = function saveSpecification(specification) {\n    if (!specsUIProps.id) {\n      dispatch(actions.createSpecification(specification)).then(function () {\n        dispatch(actions.fetchSpecifications(specsUIProps.queryParams, specsUIProps.productId)).then(function () {\n          return specsUIProps.onHide();\n        });\n      });\n    } else {\n      dispatch(actions.updateSpecification(specification)).then(function () {\n        dispatch(actions.fetchSpecifications(specsUIProps.queryParams, specsUIProps.productId)).then(function () {\n          return specsUIProps.onHide();\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: specsUIProps.show,\n    onHide: specsUIProps.onHide,\n    \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SpecificationEditDialogHeader, {\n    id: specsUIProps.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SpecificationEditForm, {\n    saveSpecification: saveSpecification,\n    actionsLoading: actionsLoading,\n    specification: specificationForEdit || specsUIProps.initSpecification,\n    onHide: specsUIProps.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialog.js"],"names":["React","useEffect","useMemo","Modal","shallowEqual","useDispatch","useSelector","actions","SpecificationEditDialogHeader","SpecificationEditForm","useSpecificationsUIContext","SpecificationEditDialog","specsUIContext","specsUIProps","id","selectedId","show","showEditSpecificationDialog","onHide","closeEditSpecificationDialog","productId","queryParams","initSpecification","dispatch","state","actionsLoading","specifications","specificationForEdit","fetchSpecification","saveSpecification","specification","createSpecification","then","fetchSpecifications","updateSpecification"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../../_redux/specifications/specificationsActions\";\nimport { SpecificationEditDialogHeader } from \"./SpecificationEditDialogHeader\";\nimport { SpecificationEditForm } from \"./SpecificationEditForm\";\nimport { useSpecificationsUIContext } from \"../SpecificationsUIContext\";\n\nexport function SpecificationEditDialog() {\n  // Specifications UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      id: specsUIContext.selectedId,\n      show: specsUIContext.showEditSpecificationDialog,\n      onHide: specsUIContext.closeEditSpecificationDialog,\n      productId: specsUIContext.productId,\n      queryParams: specsUIContext.queryParams,\n      initSpecification: specsUIContext.initSpecification,\n    };\n  }, [specsUIContext]);\n\n  // Specifications Redux state\n  const dispatch = useDispatch();\n  const { actionsLoading, specificationForEdit } = useSelector(\n    (state) => ({\n      actionsLoading: state.specifications.actionsLoading,\n      specificationForEdit: state.specifications.specificationForEdit,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    // server request for getting spec by seleted id\n    dispatch(actions.fetchSpecification(specsUIProps.id));\n  }, [specsUIProps.id, dispatch]);\n\n  const saveSpecification = (specification) => {\n    if (!specsUIProps.id) {\n      dispatch(actions.createSpecification(specification)).then(() => {\n        dispatch(\n          actions.fetchSpecifications(\n            specsUIProps.queryParams,\n            specsUIProps.productId\n          )\n        ).then(() => specsUIProps.onHide());\n      });\n    } else {\n      dispatch(actions.updateSpecification(specification)).then(() => {\n        dispatch(\n          actions.fetchSpecifications(\n            specsUIProps.queryParams,\n            specsUIProps.productId\n          )\n        ).then(() => specsUIProps.onHide());\n      });\n    }\n  };\n\n  return (\n    <Modal\n      show={specsUIProps.show}\n      onHide={specsUIProps.onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <SpecificationEditDialogHeader id={specsUIProps.id} />\n      <SpecificationEditForm\n        saveSpecification={saveSpecification}\n        actionsLoading={actionsLoading}\n        specification={specificationForEdit || specsUIProps.initSpecification}\n        onHide={specsUIProps.onHide}\n      />\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}