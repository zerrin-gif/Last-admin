{"ast":null,"code":"import _slicedToArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/_metronic/_partials/controls/code-examples/CodeBlock.js\";\n\n/* eslint-disable jsx-a11y/aria-proptypes */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\"; // https://github.com/conorhastings/react-syntax-highlighter#prism\n\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"; // See https://github.com/PrismJS/prism-themes\n\nimport { coy as highlightStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { CodeBlockToolbar } from \"./CodeBlockToolbar\";\nexport function CodeBlock(_ref) {\n  var _this = this;\n\n  var languages = _ref.languages;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCodeBlockShown = _useState2[0],\n      setIsCodeBlockShown = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tabId = _useState4[0],\n      setTabId = _useState4[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"example-tools\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CodeBlockToolbar, {\n    showViewCode: true,\n    code: languages[tabId].code,\n    isCodeBlockShown: isCodeBlockShown,\n    setIsCodeBlockShown: setIsCodeBlockShown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })), languages.length === 0 && /*#__PURE__*/React.createElement(React.Fragment, null), languages.length === 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"example-code \".concat(clsx({\n      \"example-code-on\": isCodeBlockShown\n    })),\n    style: {\n      display: isCodeBlockShown ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"example-highlight \".concat(languages[0].language),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SyntaxHighlighter, {\n    language: languages[0].language,\n    style: highlightStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, languages[0].code))), languages.length > 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"example-code \".concat(clsx({\n      \"example-code-on\": isCodeBlockShown\n    })),\n    style: {\n      display: isCodeBlockShown ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"example-nav nav nav-tabs nav-tabs-line nav-tabs-line-2x nav-tabs-primary\",\n    id: \"codeTab\",\n    role: \"tablist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, languages.map(function (lang, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      key: \"ki\".concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link \".concat(tabId === index ? \"active\" : \"\"),\n      \"data-toggle\": \"tab\",\n      role: \"tab\",\n      \"aria-selected\": \"\".concat(tabId === index ? \"true\" : \"false\"),\n      onClick: function onClick() {\n        return setTabId(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, lang.shortCode));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, languages.map(function (lang, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: \"#F3F6F9\"\n      },\n      className: \"tab-pane  \".concat(tabId === index ? \"active\" : \"\"),\n      key: \"divTabPane\".concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"example-highlight language-\".concat(lang.shortCode, \" \").concat(lang.shortCode),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(SyntaxHighlighter, {\n      language: lang.language,\n      style: highlightStyle,\n      customStyle: {\n        background: \"none transparent !important\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, lang.code)));\n  })))));\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/_metronic/_partials/controls/code-examples/CodeBlock.js"],"names":["React","useState","clsx","Prism","SyntaxHighlighter","coy","highlightStyle","CodeBlockToolbar","CodeBlock","languages","isCodeBlockShown","setIsCodeBlockShown","tabId","setTabId","code","length","display","language","map","lang","index","shortCode","background"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACA,SAAQC,KAAK,IAAIC,iBAAjB,QAAyC,0BAAzC,C,CACA;;AACA,SAAQC,GAAG,IAAIC,cAAf,QAAoC,gDAApC;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;AAEA,OAAO,SAASC,SAAT,OAAkC;AAAA;;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AACvC,kBAAgDR,QAAQ,CAAC,KAAD,CAAxD;AAAA;AAAA,MAAOS,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,mBAA0BV,QAAQ,CAAC,CAAD,CAAlC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,QAAd;;AACA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACE,IAAA,YAAY,EAAE,IADhB;AAEE,IAAA,IAAI,EAAEJ,SAAS,CAACG,KAAD,CAAT,CAAiBE,IAFzB;AAGE,IAAA,gBAAgB,EAAEJ,gBAHpB;AAIE,IAAA,mBAAmB,EAAEC,mBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASGF,SAAS,CAACM,MAAV,KAAqB,CAArB,iBAA0B,yCAT7B,EAUGN,SAAS,CAACM,MAAV,KAAqB,CAArB,iBACC;AACE,IAAA,SAAS,yBAAkBb,IAAI,CAAC;AAC9B,yBAAmBQ;AADW,KAAD,CAAtB,CADX;AAIE,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAEN,gBAAgB,GAAG,OAAH,GAAa;AAAxC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,8BAAuBD,SAAS,CAAC,CAAD,CAAT,CAAaQ,QAApC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AACE,IAAA,QAAQ,EAAER,SAAS,CAAC,CAAD,CAAT,CAAaQ,QADzB;AAEE,IAAA,KAAK,EAAEX,cAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGG,SAAS,CAAC,CAAD,CAAT,CAAaK,IAJhB,CADF,CANF,CAXJ,EA2BGL,SAAS,CAACM,MAAV,GAAmB,CAAnB,iBACC,uDACE;AACE,IAAA,SAAS,yBAAkBb,IAAI,CAAC;AAC9B,yBAAmBQ;AADW,KAAD,CAAtB,CADX;AAIE,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAEN,gBAAgB,GAAG,OAAH,GAAa;AAAxC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AACE,IAAA,SAAS,EAAC,0EADZ;AAEE,IAAA,EAAE,EAAC,SAFL;AAGE,IAAA,IAAI,EAAC,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,SAAS,CAACS,GAAV,CAAc,UAACC,IAAD,EAAOC,KAAP;AAAA,wBACb;AAAI,MAAA,SAAS,EAAC,UAAd;AAAyB,MAAA,GAAG,cAAOA,KAAP,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,qBAAcR,KAAK,KAAKQ,KAAV,GAAkB,QAAlB,GAA6B,EAA3C,CADX;AAEE,qBAAY,KAFd;AAGE,MAAA,IAAI,EAAC,KAHP;AAIE,iCAAkBR,KAAK,KAAKQ,KAAV,GAAkB,MAAlB,GAA2B,OAA7C,CAJF;AAKE,MAAA,OAAO,EAAE;AAAA,eAAMP,QAAQ,CAACO,KAAD,CAAd;AAAA,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGD,IAAI,CAACE,SAPR,CADF,CADa;AAAA,GAAd,CALH,CANF,eAyBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,SAAS,CAACS,GAAV,CAAc,UAACC,IAAD,EAAOC,KAAP;AAAA,wBACb;AACE,MAAA,KAAK,EAAE;AAAEE,QAAAA,UAAU,EAAE;AAAd,OADT;AAEE,MAAA,SAAS,sBAAeV,KAAK,KAAKQ,KAAV,GAAkB,QAAlB,GAA6B,EAA5C,CAFX;AAGE,MAAA,GAAG,sBAAeA,KAAf,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,SAAS,uCAAgCD,IAAI,CAACE,SAArC,cAAkDF,IAAI,CAACE,SAAvD,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE,oBAAC,iBAAD;AACE,MAAA,QAAQ,EAAEF,IAAI,CAACF,QADjB;AAEE,MAAA,KAAK,EAAEX,cAFT;AAGE,MAAA,WAAW,EAAE;AACXgB,QAAAA,UAAU;AADC,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGH,IAAI,CAACL,IAPR,CAHF,CALF,CADa;AAAA,GAAd,CADH,CAzBF,CADF,CA5BJ,CADF;AAmFD","sourcesContent":["/* eslint-disable jsx-a11y/aria-proptypes */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState} from \"react\";\nimport clsx from \"clsx\";\n// https://github.com/conorhastings/react-syntax-highlighter#prism\nimport {Prism as SyntaxHighlighter} from \"react-syntax-highlighter\";\n// See https://github.com/PrismJS/prism-themes\nimport {coy as highlightStyle} from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport {CodeBlockToolbar} from \"./CodeBlockToolbar\";\n\nexport function CodeBlock({ languages }) {\n  const [isCodeBlockShown, setIsCodeBlockShown] = useState(false);\n  const [tabId, setTabId] = useState(0);\n  return (\n    <>\n      <div className=\"example-tools\">\n        <CodeBlockToolbar\n          showViewCode={true}\n          code={languages[tabId].code}\n          isCodeBlockShown={isCodeBlockShown}\n          setIsCodeBlockShown={setIsCodeBlockShown}\n        />\n      </div>\n      {languages.length === 0 && <></>}\n      {languages.length === 1 && (\n        <div\n          className={`example-code ${clsx({\n            \"example-code-on\": isCodeBlockShown\n          })}`}\n          style={{ display: isCodeBlockShown ? \"block\" : \"none\" }}\n        >\n          <div className={`example-highlight ${languages[0].language}`}>\n            <SyntaxHighlighter\n              language={languages[0].language}\n              style={highlightStyle}\n            >\n              {languages[0].code}\n            </SyntaxHighlighter>\n          </div>\n        </div>\n      )}\n      {languages.length > 1 && (\n        <>\n          <div\n            className={`example-code ${clsx({\n              \"example-code-on\": isCodeBlockShown\n            })}`}\n            style={{ display: isCodeBlockShown ? \"block\" : \"none\" }}\n          >\n            <ul\n              className=\"example-nav nav nav-tabs nav-tabs-line nav-tabs-line-2x nav-tabs-primary\"\n              id=\"codeTab\"\n              role=\"tablist\"\n            >\n              {languages.map((lang, index) => (\n                <li className=\"nav-item\" key={`ki${index}`}>\n                  <a\n                    className={`nav-link ${tabId === index ? \"active\" : \"\"}`}\n                    data-toggle=\"tab\"\n                    role=\"tab\"\n                    aria-selected={`${tabId === index ? \"true\" : \"false\"}`}\n                    onClick={() => setTabId(index)}\n                  >\n                    {lang.shortCode}\n                  </a>\n                </li>\n              ))}\n            </ul>\n            <div className=\"tab-content\">\n              {languages.map((lang, index) => (\n                <div\n                  style={{ background: \"#F3F6F9\" }}\n                  className={`tab-pane  ${tabId === index ? \"active\" : \"\"}`}\n                  key={`divTabPane${index}`}\n                >\n                  <div\n                    className={`example-highlight language-${lang.shortCode} ${lang.shortCode}`}\n                  >\n                    <SyntaxHighlighter\n                      language={lang.language}\n                      style={highlightStyle}\n                      customStyle={{\n                        background: `none transparent !important`\n                      }}\n                    >\n                      {lang.code}\n                    </SyntaxHighlighter>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}