{"ast":null,"code":"import _slicedToArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/data-displays/TooltipsExamplesPage.js\";\nvar _excluded = [\"arrow\"],\n    _excluded2 = [\"arrow\"];\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Tooltip, Fab, IconButton, Grid, Button, Typography, ClickAwayListener, Fade, Zoom } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nvar useStyles1 = makeStyles(function (theme) {\n  return {\n    fab: {\n      margin: theme.spacing(2)\n    },\n    absolute: {\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(3)\n    }\n  };\n}); // Example 2\n\nvar useStyles2 = makeStyles({\n  root: {\n    width: 500\n  }\n}); // Example 3\n\nfunction arrowGenerator3(color) {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: \"-0.95em\",\n      width: \"3em\",\n      height: \"1em\",\n      \"&::before\": {\n        borderWidth: \"0 1em 1em 1em\",\n        borderColor: \"transparent transparent \".concat(color, \" transparent\")\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: \"-0.95em\",\n      width: \"3em\",\n      height: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 0 1em\",\n        borderColor: \"\".concat(color, \" transparent transparent transparent\")\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: \"-0.95em\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 1em 0\",\n        borderColor: \"transparent \".concat(color, \" transparent transparent\")\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: \"-0.95em\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 0 1em 1em\",\n        borderColor: \"transparent transparent transparent \".concat(color)\n      }\n    }\n  };\n}\n\nvar LightTooltip3 = withStyles(function (theme) {\n  return {\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: \"rgba(0, 0, 0, 0.87)\",\n      boxShadow: theme.shadows[1],\n      fontSize: 11\n    }\n  };\n})(Tooltip);\nvar useStylesArrow3 = makeStyles(function (theme) {\n  return {\n    arrow: {\n      position: \"absolute\",\n      fontSize: 6,\n      width: \"3em\",\n      height: \"3em\",\n      \"&::before\": {\n        content: '\"\"',\n        margin: \"auto\",\n        display: \"block\",\n        width: 0,\n        height: 0,\n        borderStyle: \"solid\"\n      }\n    },\n    popper: arrowGenerator3(theme.palette.grey[700])\n  };\n});\n\nfunction ArrowTooltip3(props) {\n  var _useStylesArrow = useStylesArrow3(),\n      arrow = _useStylesArrow.arrow,\n      classes = _objectWithoutProperties(_useStylesArrow, _excluded);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      arrowRef = _React$useState2[0],\n      setArrowRef = _React$useState2[1];\n\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    classes: classes,\n    PopperProps: {\n      popperOptions: {\n        modifiers: {\n          arrow: {\n            enabled: Boolean(arrowRef),\n            element: arrowRef\n          }\n        }\n      }\n    }\n  }, props, {\n    title: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, props.title, /*#__PURE__*/React.createElement(\"span\", {\n      className: arrow,\n      ref: setArrowRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }));\n}\n\nArrowTooltip3.propTypes = {\n  title: PropTypes.node\n};\nvar useStylesBootstrap3 = makeStyles(function (theme) {\n  return {\n    arrow: {\n      position: \"absolute\",\n      fontSize: 6,\n      width: \"3em\",\n      height: \"3em\",\n      \"&::before\": {\n        content: '\"\"',\n        margin: \"auto\",\n        display: \"block\",\n        width: 0,\n        height: 0,\n        borderStyle: \"solid\"\n      }\n    },\n    popper: arrowGenerator3(theme.palette.common.black),\n    tooltip: {\n      backgroundColor: theme.palette.common.black\n    },\n    tooltipPlacementLeft: {\n      margin: \"0 8px\"\n    },\n    tooltipPlacementRight: {\n      margin: \"0 8px\"\n    },\n    tooltipPlacementTop: {\n      margin: \"8px 0\"\n    },\n    tooltipPlacementBottom: {\n      margin: \"8px 0\"\n    }\n  };\n});\n\nfunction BootstrapTooltip3(props) {\n  var _useStylesBootstrap = useStylesBootstrap3(),\n      arrow = _useStylesBootstrap.arrow,\n      classes = _objectWithoutProperties(_useStylesBootstrap, _excluded2);\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      arrowRef = _React$useState4[0],\n      setArrowRef = _React$useState4[1];\n\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    classes: classes,\n    PopperProps: {\n      popperOptions: {\n        modifiers: {\n          arrow: {\n            enabled: Boolean(arrowRef),\n            element: arrowRef\n          }\n        }\n      }\n    }\n  }, props, {\n    title: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, props.title, /*#__PURE__*/React.createElement(\"span\", {\n      className: arrow,\n      ref: setArrowRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }));\n}\n\nBootstrapTooltip3.propTypes = {\n  title: PropTypes.node\n};\nvar HtmlTooltip3 = withStyles(function (theme) {\n  return {\n    tooltip: {\n      backgroundColor: \"#f5f5f9\",\n      color: \"rgba(0, 0, 0, 0.87)\",\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: \"1px solid #dadde9\"\n    }\n  };\n})(Tooltip); // Example 6\n\nvar useStyles6 = makeStyles(function (theme) {\n  return {\n    button: {\n      margin: theme.spacing(1)\n    },\n    customWidth: {\n      maxWidth: 500\n    },\n    noMaxWidth: {\n      maxWidth: \"none\"\n    }\n  };\n});\nvar longText6 = \"\\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\\nPraesent non nunc mollis, fermentum neque at, semper arcu.\\nNullam eget est sed sem iaculis gravida eget vitae justo.\\n\"; // Example 7\n\nvar useStyles7 = makeStyles(function (theme) {\n  return {\n    button: {\n      margin: theme.spacing(1)\n    }\n  };\n});\nexport default function TooltipsExamplesPage() {\n  // Example 1\n  var classes1 = useStyles1(); // Example 2\n\n  var classes2 = useStyles2(); // Example 4\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      open4 = _React$useState6[0],\n      setOpen4 = _React$useState6[1];\n\n  function handleTooltipClose4() {\n    setOpen4(false);\n  }\n\n  function handleTooltipOpen4() {\n    setOpen4(true);\n  } // Example 5\n\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      open5 = _React$useState8[0],\n      setOpen5 = _React$useState8[1];\n\n  function handleTooltipClose5() {\n    setOpen5(false);\n  }\n\n  function handleTooltipOpen5() {\n    setOpen5(true);\n  } // Example 6\n\n\n  var classes6 = useStyles6(); // Example 7\n\n  var classes7 = useStyles7();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, \"Tooltips display informative text when users hover over, focus on, or tap an element.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/tooltips/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Simple Tooltips\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    \"aria-label\": \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    color: \"primary\",\n    className: classes1.fab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    \"aria-label\": \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    color: \"secondary\",\n    className: classes1.fab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode3,\n    beforeCodeTitle: \"Customized tooltips\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }, \"Here are some examples of customizing the component. You can learn more about this in the overrides documentation page.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LightTooltip3, {\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, \"Light\")), /*#__PURE__*/React.createElement(ArrowTooltip3, {\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }, \"Arrow\")), /*#__PURE__*/React.createElement(BootstrapTooltip3, {\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  }, \"Bootstrap\")), /*#__PURE__*/React.createElement(HtmlTooltip3, {\n    title: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }\n    }, \"Tooltip with HTML\"), /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }\n    }, \"And here's\"), \" \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 45\n      }\n    }, \"some\"), \" \", /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }\n    }, \"amazing content\"), \". \", \"It's very engaging. Right?\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }, \"HTML\")))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode5,\n    beforeCodeTitle: \"Controlled Tooltips\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, \"You can use the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 31\n    }\n  }, \"open\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 50\n    }\n  }, \"onOpen\"), \" and\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, \"onClose\"), \" properties to control the behavior of the tooltip.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    onClose: handleTooltipClose5,\n    onOpen: handleTooltipOpen5,\n    open: open5,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  }, \"Controlled\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode7,\n    beforeCodeTitle: \"Interactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  }, \"A tooltip can be interactive. It won't close when the user hovers over the tooltip before the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 43\n    }\n  }, \"leaveDelay\"), \" is expired.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    interactive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes7.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }, \"Interactive\")), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes7.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 17\n    }\n  }, \"Non Interactive\")))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode9,\n    beforeCodeTitle: \"Transitions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, \"Use a different transition.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 17\n    }\n  }, \"Grow\")), /*#__PURE__*/React.createElement(Tooltip, {\n    TransitionComponent: Fade,\n    TransitionProps: {\n      timeout: 600\n    },\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 17\n    }\n  }, \"Fade\")), /*#__PURE__*/React.createElement(Tooltip, {\n    TransitionComponent: Zoom,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 17\n    }\n  }, \"Zoom\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Positioned Tooltips\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }\n  }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 19\n    }\n  }, \"Tooltip\"), \" has 12 placements choice. They don\\u2019t have directional arrows; instead, they rely on motion emanating from the source to convey direction.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes2.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"top-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  }, \"top-start\")), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 21\n    }\n  }, \"top\")), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"top-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 21\n    }\n  }, \"top-end\")))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"left-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 21\n    }\n  }, \"left-start\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 21\n    }\n  }, \"left\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"left-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  }, \"left-end\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 6,\n    alignItems: \"flex-end\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"right-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 23\n    }\n  }, \"right-start\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 23\n    }\n  }, \"right\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"right-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 23\n    }\n  }, \"right-end\"))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"bottom-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 21\n    }\n  }, \"bottom-start\")), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 21\n    }\n  }, \"bottom\")), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    placement: \"bottom-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 21\n    }\n  }, \"bottom-end\")))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode4,\n    beforeCodeTitle: \"Triggers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 13\n    }\n  }, \"You can define the types of events that cause a tooltip to show.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    disableFocusListener: true,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 21\n    }\n  }, \"Hover or touch\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    disableHoverListener: true,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 21\n    }\n  }, \"Focus or touch\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    disableFocusListener: true,\n    disableTouchListener: true,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 21\n    }\n  }, \"Hover\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleTooltipClose4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    PopperProps: {\n      disablePortal: true\n    },\n    onClose: handleTooltipClose4,\n    open: open4,\n    disableFocusListener: true,\n    disableHoverListener: true,\n    disableTouchListener: true,\n    title: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleTooltipOpen4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 25\n    }\n  }, \"Click\")))))))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode6,\n    beforeCodeTitle: \"Variable Width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 13\n    }\n  }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 19\n    }\n  }, \"Tooltip\"), \" wraps long text by default to make it readable.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: longText6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes6.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 17\n    }\n  }, \"Default Width [300px]\")), /*#__PURE__*/React.createElement(Tooltip, {\n    title: longText6,\n    classes: {\n      tooltip: classes6.customWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes6.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 17\n    }\n  }, \"Custom Width [500px]\")), /*#__PURE__*/React.createElement(Tooltip, {\n    title: longText6,\n    classes: {\n      tooltip: classes6.noMaxWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes6.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 17\n    }\n  }, \"No wrapping\")))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode8,\n    beforeCodeTitle: \"Disabled Elements\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 13\n    }\n  }, \"By default disabled elements like \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 49\n    }\n  }, \"<button>\"), \" do not trigger user interactions so a \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 50\n    }\n  }, \"Tooltip\"), \" will not activate on normal events like hover. To accommodate disabled elements, add a simple wrapper element like a \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 61\n    }\n  }, \"span\"), \".\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"You don't have permission to do this\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 17\n    }\n  }, \"A Disabled Button\")))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode10,\n    beforeCodeTitle: \"Showing and hiding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 13\n    }\n  }, \"The tooltip is normally shown immediately when the user's mouse hovers over the element, and hides immediately when the user's mouse leaves. A delay in showing or hiding the tooltip can be added through the properties \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 44\n    }\n  }, \"enterDelay\"), \" and\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 15\n    }\n  }, \"leaveDelay\"), \".\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add\",\n    enterDelay: 500,\n    leaveDelay: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 15\n    }\n  }, \"[500ms, 200ms]\"))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport AddIcon from '@material-ui/icons/Add';\\nimport Fab from '@material-ui/core/Fab';\\nimport DeleteIcon from '@material-ui/icons/Delete';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nconst useStyles = makeStyles(theme => ({\\n  fab: {\\n    margin: theme.spacing(2),\\n  },\\n  absolute: {\\n    position: 'absolute',\\n    bottom: theme.spacing(2),\\n    right: theme.spacing(3),\\n  },\\n}));\\n\\nexport default function SimpleTooltips() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <Tooltip title=\\\"Delete\\\">\\n        <IconButton aria-label=\\\"Delete\\\">\\n          <DeleteIcon />\\n        </IconButton>\\n      </Tooltip>\\n      <Tooltip title=\\\"Add\\\" aria-label=\\\"Add\\\">\\n        <Fab color=\\\"primary\\\" className={classes.fab}>\\n          <AddIcon />\\n        </Fab>\\n      </Tooltip>\\n      <Tooltip title=\\\"Add\\\" aria-label=\\\"Add\\\">\\n        <Fab color=\\\"secondary\\\" className={classes.absolute}>\\n          <AddIcon />\\n        </Fab>\\n      </Tooltip>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Grid from '@material-ui/core/Grid';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    width: 500,\\n  },\\n});\\n\\nexport default function PositionedTooltips() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <Grid container justify=\\\"center\\\">\\n        <Grid item>\\n          <Tooltip title=\\\"Add\\\" placement=\\\"top-start\\\">\\n            <Button>top-start</Button>\\n          </Tooltip>\\n          <Tooltip title=\\\"Add\\\" placement=\\\"top\\\">\\n            <Button>top</Button>\\n          </Tooltip>\\n          <Tooltip title=\\\"Add\\\" placement=\\\"top-end\\\">\\n            <Button>top-end</Button>\\n          </Tooltip>\\n        </Grid>\\n      </Grid>\\n      <Grid container justify=\\\"center\\\">\\n        <Grid item xs={6}>\\n          <Tooltip title=\\\"Add\\\" placement=\\\"left-start\\\">\\n            <Button>left-start</Button>\\n          </Tooltip>\\n          <br />\\n          <Tooltip title=\\\"Add\\\" placement=\\\"left\\\">\\n            <Button>left</Button>\\n          </Tooltip>\\n          <br />\\n          <Tooltip title=\\\"Add\\\" placement=\\\"left-end\\\">\\n            <Button>left-end</Button>\\n          </Tooltip>\\n        </Grid>\\n        <Grid item container xs={6} alignItems=\\\"flex-end\\\" direction=\\\"column\\\">\\n          <Grid item>\\n            <Tooltip title=\\\"Add\\\" placement=\\\"right-start\\\">\\n              <Button>right-start</Button>\\n            </Tooltip>\\n          </Grid>\\n          <Grid item>\\n            <Tooltip title=\\\"Add\\\" placement=\\\"right\\\">\\n              <Button>right</Button>\\n            </Tooltip>\\n          </Grid>\\n          <Grid item>\\n            <Tooltip title=\\\"Add\\\" placement=\\\"right-end\\\">\\n              <Button>right-end</Button>\\n            </Tooltip>\\n          </Grid>\\n        </Grid>\\n      </Grid>\\n      <Grid container justify=\\\"center\\\">\\n        <Grid item>\\n          <Tooltip title=\\\"Add\\\" placement=\\\"bottom-start\\\">\\n            <Button>bottom-start</Button>\\n          </Tooltip>\\n          <Tooltip title=\\\"Add\\\" placement=\\\"bottom\\\">\\n            <Button>bottom</Button>\\n          </Tooltip>\\n          <Tooltip title=\\\"Add\\\" placement=\\\"bottom-end\\\">\\n            <Button>bottom-end</Button>\\n          </Tooltip>\\n        </Grid>\\n      </Grid>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\nimport Typography from '@material-ui/core/Typography';\\nimport PropTypes from 'prop-types';\\n\\nfunction arrowGenerator(color) {\\n  return {\\n    '&[x-placement*=\\\"bottom\\\"] $arrow': {\\n      top: 0,\\n      left: 0,\\n      marginTop: '-0.95em',\\n      width: '3em',\\n      height: '1em',\\n      '&::before': {\\n        borderWidth: '0 1em 1em 1em',\\n        borderColor: `transparent transparent ${color} transparent`,\\n      },\\n    },\\n    '&[x-placement*=\\\"top\\\"] $arrow': {\\n      bottom: 0,\\n      left: 0,\\n      marginBottom: '-0.95em',\\n      width: '3em',\\n      height: '1em',\\n      '&::before': {\\n        borderWidth: '1em 1em 0 1em',\\n        borderColor: `${color} transparent transparent transparent`,\\n      },\\n    },\\n    '&[x-placement*=\\\"right\\\"] $arrow': {\\n      left: 0,\\n      marginLeft: '-0.95em',\\n      height: '3em',\\n      width: '1em',\\n      '&::before': {\\n        borderWidth: '1em 1em 1em 0',\\n        borderColor: `transparent ${color} transparent transparent`,\\n      },\\n    },\\n    '&[x-placement*=\\\"left\\\"] $arrow': {\\n      right: 0,\\n      marginRight: '-0.95em',\\n      height: '3em',\\n      width: '1em',\\n      '&::before': {\\n        borderWidth: '1em 0 1em 1em',\\n        borderColor: `transparent transparent transparent ${color}`,\\n      },\\n    },\\n  };\\n}\\n\\nconst LightTooltip = withStyles(theme => ({\\n  tooltip: {\\n    backgroundColor: theme.palette.common.white,\\n    color: 'rgba(0, 0, 0, 0.87)',\\n    boxShadow: theme.shadows[1],\\n    fontSize: 11,\\n  },\\n}))(Tooltip);\\n\\nconst useStylesArrow = makeStyles(theme => ({\\n  arrow: {\\n    position: 'absolute',\\n    fontSize: 6,\\n    width: '3em',\\n    height: '3em',\\n    '&::before': {\\n      content: '\\\"\\\"',\\n      margin: 'auto',\\n      display: 'block',\\n      width: 0,\\n      height: 0,\\n      borderStyle: 'solid',\\n    },\\n  },\\n  popper: arrowGenerator(theme.palette.grey[700]),\\n}));\\n\\nfunction ArrowTooltip(props) {\\n  const { arrow, ...classes } = useStylesArrow();\\n  const [arrowRef, setArrowRef] = React.useState(null);\\n\\n  return (\\n    <Tooltip\\n      classes={classes}\\n      PopperProps={{\\n        popperOptions: {\\n          modifiers: {\\n            arrow: {\\n              enabled: Boolean(arrowRef),\\n              element: arrowRef,\\n            },\\n          },\\n        },\\n      }}\\n      {...props}\\n      title={\\n        <React.Fragment>\\n          {props.title}\\n          <span className={arrow} ref={setArrowRef} />\\n        </React.Fragment>\\n      }\\n    />\\n  );\\n}\\n\\nArrowTooltip.propTypes = {\\n  title: PropTypes.node,\\n};\\n\\nconst useStylesBootstrap = makeStyles(theme => ({\\n  arrow: {\\n    position: 'absolute',\\n    fontSize: 6,\\n    width: '3em',\\n    height: '3em',\\n    '&::before': {\\n      content: '\\\"\\\"',\\n      margin: 'auto',\\n      display: 'block',\\n      width: 0,\\n      height: 0,\\n      borderStyle: 'solid',\\n    },\\n  },\\n  popper: arrowGenerator(theme.palette.common.black),\\n  tooltip: {\\n    backgroundColor: theme.palette.common.black,\\n  },\\n  tooltipPlacementLeft: {\\n    margin: '0 8px',\\n  },\\n  tooltipPlacementRight: {\\n    margin: '0 8px',\\n  },\\n  tooltipPlacementTop: {\\n    margin: '8px 0',\\n  },\\n  tooltipPlacementBottom: {\\n    margin: '8px 0',\\n  },\\n}));\\n\\nfunction BootstrapTooltip(props) {\\n  const { arrow, ...classes } = useStylesBootstrap();\\n  const [arrowRef, setArrowRef] = React.useState(null);\\n\\n  return (\\n    <Tooltip\\n      classes={classes}\\n      PopperProps={{\\n        popperOptions: {\\n          modifiers: {\\n            arrow: {\\n              enabled: Boolean(arrowRef),\\n              element: arrowRef,\\n            },\\n          },\\n        },\\n      }}\\n      {...props}\\n      title={\\n        <React.Fragment>\\n          {props.title}\\n          <span className={arrow} ref={setArrowRef} />\\n        </React.Fragment>\\n      }\\n    />\\n  );\\n}\\n\\nBootstrapTooltip.propTypes = {\\n  title: PropTypes.node,\\n};\\n\\nconst HtmlTooltip = withStyles(theme => ({\\n  tooltip: {\\n    backgroundColor: '#f5f5f9',\\n    color: 'rgba(0, 0, 0, 0.87)',\\n    maxWidth: 220,\\n    fontSize: theme.typography.pxToRem(12),\\n    border: '1px solid #dadde9',\\n  },\\n}))(Tooltip);\\n\\nexport default function CustomizedTooltips() {\\n  return (\\n    <div>\\n      <LightTooltip title=\\\"Add\\\">\\n        <Button>Light</Button>\\n      </LightTooltip>\\n      <ArrowTooltip title=\\\"Add\\\">\\n        <Button>Arrow</Button>\\n      </ArrowTooltip>\\n      <BootstrapTooltip title=\\\"Add\\\">\\n        <Button>Bootstrap</Button>\\n      </BootstrapTooltip>\\n      <HtmlTooltip\\n        title={\\n          <React.Fragment>\\n            <Typography color=\\\"inherit\\\">Tooltip with HTML</Typography>\\n            <em>{\\\"And here's\\\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\\n            {\\\"It's very engaging. Right?\\\"}\\n          </React.Fragment>\\n        }\\n      >\\n        <Button>HTML</Button>\\n      </HtmlTooltip>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode4 = \"\\nimport React from 'react';\\nimport Grid from '@material-ui/core/Grid';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\\n\\nexport default function TriggersTooltips() {\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleTooltipClose() {\\n    setOpen(false);\\n  }\\n\\n  function handleTooltipOpen() {\\n    setOpen(true);\\n  }\\n\\n  return (\\n    <div>\\n      <Grid container justify=\\\"center\\\">\\n        <Grid item>\\n          <Tooltip disableFocusListener title=\\\"Add\\\">\\n            <Button>Hover or touch</Button>\\n          </Tooltip>\\n        </Grid>\\n        <Grid item>\\n          <Tooltip disableHoverListener title=\\\"Add\\\">\\n            <Button>Focus or touch</Button>\\n          </Tooltip>\\n        </Grid>\\n        <Grid item>\\n          <Tooltip disableFocusListener disableTouchListener title=\\\"Add\\\">\\n            <Button>Hover</Button>\\n          </Tooltip>\\n        </Grid>\\n        <Grid item>\\n          <ClickAwayListener onClickAway={handleTooltipClose}>\\n            <div>\\n              <Tooltip\\n                PopperProps={{\\n                  disablePortal: true,\\n                }}\\n                onClose={handleTooltipClose}\\n                open={open}\\n                disableFocusListener\\n                disableHoverListener\\n                disableTouchListener\\n                title=\\\"Add\\\"\\n              >\\n                <Button onClick={handleTooltipOpen}>Click</Button>\\n              </Tooltip>\\n            </div>\\n          </ClickAwayListener>\\n        </Grid>\\n      </Grid>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode5 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nexport default function ControlledTooltips() {\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleTooltipClose() {\\n    setOpen(false);\\n  }\\n\\n  function handleTooltipOpen() {\\n    setOpen(true);\\n  }\\n\\n  return (\\n    <Tooltip onClose={handleTooltipClose} onOpen={handleTooltipOpen} open={open} title=\\\"Add\\\">\\n      <Button>Controlled</Button>\\n    </Tooltip>\\n  );\\n}\\n\";\nvar jsCode6 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nconst useStyles = makeStyles(theme => ({\\n  button: {\\n    margin: theme.spacing(1),\\n  },\\n  customWidth: {\\n    maxWidth: 500,\\n  },\\n  noMaxWidth: {\\n    maxWidth: 'none',\\n  },\\n}));\\n\\nconst longText = `\\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\\nPraesent non nunc mollis, fermentum neque at, semper arcu.\\nNullam eget est sed sem iaculis gravida eget vitae justo.\\n`;\\n\\nexport default function VariableWidth() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <Tooltip title={longText}>\\n        <Button className={classes.button}>Default Width [300px]</Button>\\n      </Tooltip>\\n      <Tooltip title={longText} classes={{ tooltip: classes.customWidth }}>\\n        <Button className={classes.button}>Custom Width [500px]</Button>\\n      </Tooltip>\\n      <Tooltip title={longText} classes={{ tooltip: classes.noMaxWidth }}>\\n        <Button className={classes.button}>No wrapping</Button>\\n      </Tooltip>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode7 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nconst useStyles = makeStyles(theme => ({\\n  button: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function InteractiveTooltips() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <Tooltip title=\\\"Add\\\" interactive>\\n        <Button className={classes.button}>Interactive</Button>\\n      </Tooltip>\\n      <Tooltip title=\\\"Add\\\">\\n        <Button className={classes.button}>Non Interactive</Button>\\n      </Tooltip>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode8 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nexport default function DisabledTooltips() {\\n  return (\\n    <Tooltip title=\\\"You don't have permission to do this\\\">\\n      <span>\\n        <Button disabled>A Disabled Button</Button>\\n      </span>\\n    </Tooltip>\\n  );\\n}\\n\";\nvar jsCode9 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\nimport Fade from '@material-ui/core/Fade';\\nimport Zoom from '@material-ui/core/Zoom';\\n\\nexport default function TransitionsTooltips() {\\n  return (\\n    <div>\\n      <Tooltip title=\\\"Add\\\">\\n        <Button>Grow</Button>\\n      </Tooltip>\\n      <Tooltip TransitionComponent={Fade} TransitionProps={{ timeout: 600 }} title=\\\"Add\\\">\\n        <Button>Fade</Button>\\n      </Tooltip>\\n      <Tooltip TransitionComponent={Zoom} title=\\\"Add\\\">\\n        <Button>Zoom</Button>\\n      </Tooltip>\\n    </div>\\n  );\\n}\\n\";\nvar jsCode10 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Tooltip from '@material-ui/core/Tooltip';\\n\\nexport default function DelayTooltips() {\\n  return (\\n    <Tooltip title=\\\"Add\\\" enterDelay={500} leaveDelay={200}>\\n      <Button>[500ms, 200ms]</Button>\\n    </Tooltip>\\n  );\\n}\\n\";","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/data-displays/TooltipsExamplesPage.js"],"names":["React","makeStyles","withStyles","Tooltip","Fab","IconButton","Grid","Button","Typography","ClickAwayListener","Fade","Zoom","AddIcon","DeleteIcon","PropTypes","Notice","KTCodeExample","useStyles1","theme","fab","margin","spacing","absolute","position","bottom","right","useStyles2","root","width","arrowGenerator3","color","top","left","marginTop","height","borderWidth","borderColor","marginBottom","marginLeft","marginRight","LightTooltip3","tooltip","backgroundColor","palette","common","white","boxShadow","shadows","fontSize","useStylesArrow3","arrow","content","display","borderStyle","popper","grey","ArrowTooltip3","props","classes","useState","arrowRef","setArrowRef","popperOptions","modifiers","enabled","Boolean","element","title","propTypes","node","useStylesBootstrap3","black","tooltipPlacementLeft","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","BootstrapTooltip3","HtmlTooltip3","maxWidth","typography","pxToRem","border","useStyles6","button","customWidth","noMaxWidth","longText6","useStyles7","TooltipsExamplesPage","classes1","classes2","open4","setOpen4","handleTooltipClose4","handleTooltipOpen4","open5","setOpen5","handleTooltipClose5","handleTooltipOpen5","classes6","classes7","jsCode1","jsCode3","jsCode5","jsCode7","jsCode9","timeout","jsCode2","jsCode4","disablePortal","jsCode6","jsCode8","jsCode10"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,0BAArC;AACA,SACEC,OADF,EAEEC,GAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,UANF,EAOEC,iBAPF,EAQEC,IARF,EASEC,IATF,QAUO,mBAVP;AAWA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,MAAR,EAAgBC,aAAhB,QAAoC,0CAApC,C,CAEA;;AACA,IAAMC,UAAU,GAAGhB,UAAU,CAAC,UAAAiB,KAAK;AAAA,SAAK;AACtCC,IAAAA,GAAG,EAAE;AACHC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADL,KADiC;AAItCC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EAAE,UADF;AAERC,MAAAA,MAAM,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd,CAFA;AAGRI,MAAAA,KAAK,EAAEP,KAAK,CAACG,OAAN,CAAc,CAAd;AAHC;AAJ4B,GAAL;AAAA,CAAN,CAA7B,C,CAWA;;AACA,IAAMK,UAAU,GAAGzB,UAAU,CAAC;AAC5B0B,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AADsB,CAAD,CAA7B,C,CAMA;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACL,uCAAmC;AACjCC,MAAAA,GAAG,EAAE,CAD4B;AAEjCC,MAAAA,IAAI,EAAE,CAF2B;AAGjCC,MAAAA,SAAS,EAAE,SAHsB;AAIjCL,MAAAA,KAAK,EAAE,KAJ0B;AAKjCM,MAAAA,MAAM,EAAE,KALyB;AAMjC,mBAAa;AACXC,QAAAA,WAAW,EAAE,eADF;AAEXC,QAAAA,WAAW,oCAA6BN,KAA7B;AAFA;AANoB,KAD9B;AAYL,oCAAgC;AAC9BN,MAAAA,MAAM,EAAE,CADsB;AAE9BQ,MAAAA,IAAI,EAAE,CAFwB;AAG9BK,MAAAA,YAAY,EAAE,SAHgB;AAI9BT,MAAAA,KAAK,EAAE,KAJuB;AAK9BM,MAAAA,MAAM,EAAE,KALsB;AAM9B,mBAAa;AACXC,QAAAA,WAAW,EAAE,eADF;AAEXC,QAAAA,WAAW,YAAKN,KAAL;AAFA;AANiB,KAZ3B;AAuBL,sCAAkC;AAChCE,MAAAA,IAAI,EAAE,CAD0B;AAEhCM,MAAAA,UAAU,EAAE,SAFoB;AAGhCJ,MAAAA,MAAM,EAAE,KAHwB;AAIhCN,MAAAA,KAAK,EAAE,KAJyB;AAKhC,mBAAa;AACXO,QAAAA,WAAW,EAAE,eADF;AAEXC,QAAAA,WAAW,wBAAiBN,KAAjB;AAFA;AALmB,KAvB7B;AAiCL,qCAAiC;AAC/BL,MAAAA,KAAK,EAAE,CADwB;AAE/Bc,MAAAA,WAAW,EAAE,SAFkB;AAG/BL,MAAAA,MAAM,EAAE,KAHuB;AAI/BN,MAAAA,KAAK,EAAE,KAJwB;AAK/B,mBAAa;AACXO,QAAAA,WAAW,EAAE,eADF;AAEXC,QAAAA,WAAW,gDAAyCN,KAAzC;AAFA;AALkB;AAjC5B,GAAP;AA4CD;;AAED,IAAMU,aAAa,GAAGtC,UAAU,CAAC,UAAAgB,KAAK;AAAA,SAAK;AACzCuB,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAExB,KAAK,CAACyB,OAAN,CAAcC,MAAd,CAAqBC,KAD/B;AAEPf,MAAAA,KAAK,EAAE,qBAFA;AAGPgB,MAAAA,SAAS,EAAE5B,KAAK,CAAC6B,OAAN,CAAc,CAAd,CAHJ;AAIPC,MAAAA,QAAQ,EAAE;AAJH;AADgC,GAAL;AAAA,CAAN,CAAV,CAOlB7C,OAPkB,CAAtB;AASA,IAAM8C,eAAe,GAAGhD,UAAU,CAAC,UAAAiB,KAAK;AAAA,SAAK;AAC3CgC,IAAAA,KAAK,EAAE;AACL3B,MAAAA,QAAQ,EAAE,UADL;AAELyB,MAAAA,QAAQ,EAAE,CAFL;AAGLpB,MAAAA,KAAK,EAAE,KAHF;AAILM,MAAAA,MAAM,EAAE,KAJH;AAKL,mBAAa;AACXiB,QAAAA,OAAO,EAAE,IADE;AAEX/B,QAAAA,MAAM,EAAE,MAFG;AAGXgC,QAAAA,OAAO,EAAE,OAHE;AAIXxB,QAAAA,KAAK,EAAE,CAJI;AAKXM,QAAAA,MAAM,EAAE,CALG;AAMXmB,QAAAA,WAAW,EAAE;AANF;AALR,KADoC;AAe3CC,IAAAA,MAAM,EAAEzB,eAAe,CAACX,KAAK,CAACyB,OAAN,CAAcY,IAAd,CAAmB,GAAnB,CAAD;AAfoB,GAAL;AAAA,CAAN,CAAlC;;AAkBA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,wBAA8BR,eAAe,EAA7C;AAAA,MAAQC,KAAR,mBAAQA,KAAR;AAAA,MAAkBQ,OAAlB;;AACA,wBAAgC1D,KAAK,CAAC2D,QAAN,CAAe,IAAf,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,sBACE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEH,OADX;AAEE,IAAA,WAAW,EAAE;AACXI,MAAAA,aAAa,EAAE;AACbC,QAAAA,SAAS,EAAE;AACTb,UAAAA,KAAK,EAAE;AACLc,YAAAA,OAAO,EAAEC,OAAO,CAACL,QAAD,CADX;AAELM,YAAAA,OAAO,EAAEN;AAFJ;AADE;AADE;AADJ;AAFf,KAYMH,KAZN;AAaE,IAAA,KAAK,eACH,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,CAACU,KADT,eAEE;AAAM,MAAA,SAAS,EAAEjB,KAAjB;AAAwB,MAAA,GAAG,EAAEW,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAsBD;;AAEDL,aAAa,CAACY,SAAd,GAA0B;AACxBD,EAAAA,KAAK,EAAErD,SAAS,CAACuD;AADO,CAA1B;AAIA,IAAMC,mBAAmB,GAAGrE,UAAU,CAAC,UAAAiB,KAAK;AAAA,SAAK;AAC/CgC,IAAAA,KAAK,EAAE;AACL3B,MAAAA,QAAQ,EAAE,UADL;AAELyB,MAAAA,QAAQ,EAAE,CAFL;AAGLpB,MAAAA,KAAK,EAAE,KAHF;AAILM,MAAAA,MAAM,EAAE,KAJH;AAKL,mBAAa;AACXiB,QAAAA,OAAO,EAAE,IADE;AAEX/B,QAAAA,MAAM,EAAE,MAFG;AAGXgC,QAAAA,OAAO,EAAE,OAHE;AAIXxB,QAAAA,KAAK,EAAE,CAJI;AAKXM,QAAAA,MAAM,EAAE,CALG;AAMXmB,QAAAA,WAAW,EAAE;AANF;AALR,KADwC;AAe/CC,IAAAA,MAAM,EAAEzB,eAAe,CAACX,KAAK,CAACyB,OAAN,CAAcC,MAAd,CAAqB2B,KAAtB,CAfwB;AAgB/C9B,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAExB,KAAK,CAACyB,OAAN,CAAcC,MAAd,CAAqB2B;AAD/B,KAhBsC;AAmB/CC,IAAAA,oBAAoB,EAAE;AACpBpD,MAAAA,MAAM,EAAE;AADY,KAnByB;AAsB/CqD,IAAAA,qBAAqB,EAAE;AACrBrD,MAAAA,MAAM,EAAE;AADa,KAtBwB;AAyB/CsD,IAAAA,mBAAmB,EAAE;AACnBtD,MAAAA,MAAM,EAAE;AADW,KAzB0B;AA4B/CuD,IAAAA,sBAAsB,EAAE;AACtBvD,MAAAA,MAAM,EAAE;AADc;AA5BuB,GAAL;AAAA,CAAN,CAAtC;;AAiCA,SAASwD,iBAAT,CAA2BnB,KAA3B,EAAkC;AAChC,4BAA8Ba,mBAAmB,EAAjD;AAAA,MAAQpB,KAAR,uBAAQA,KAAR;AAAA,MAAkBQ,OAAlB;;AACA,yBAAgC1D,KAAK,CAAC2D,QAAN,CAAe,IAAf,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,sBACE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEH,OADX;AAEE,IAAA,WAAW,EAAE;AACXI,MAAAA,aAAa,EAAE;AACbC,QAAAA,SAAS,EAAE;AACTb,UAAAA,KAAK,EAAE;AACLc,YAAAA,OAAO,EAAEC,OAAO,CAACL,QAAD,CADX;AAELM,YAAAA,OAAO,EAAEN;AAFJ;AADE;AADE;AADJ;AAFf,KAYMH,KAZN;AAaE,IAAA,KAAK,eACH,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,CAACU,KADT,eAEE;AAAM,MAAA,SAAS,EAAEjB,KAAjB;AAAwB,MAAA,GAAG,EAAEW,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAsBD;;AAEDe,iBAAiB,CAACR,SAAlB,GAA8B;AAC5BD,EAAAA,KAAK,EAAErD,SAAS,CAACuD;AADW,CAA9B;AAIA,IAAMQ,YAAY,GAAG3E,UAAU,CAAC,UAAAgB,KAAK;AAAA,SAAK;AACxCuB,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAE,SADV;AAEPZ,MAAAA,KAAK,EAAE,qBAFA;AAGPgD,MAAAA,QAAQ,EAAE,GAHH;AAIP9B,MAAAA,QAAQ,EAAE9B,KAAK,CAAC6D,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CAJH;AAKPC,MAAAA,MAAM,EAAE;AALD;AAD+B,GAAL;AAAA,CAAN,CAAV,CAQjB9E,OARiB,CAArB,C,CAUA;;AACA,IAAM+E,UAAU,GAAGjF,UAAU,CAAC,UAAAiB,KAAK;AAAA,SAAK;AACtCiE,IAAAA,MAAM,EAAE;AACN/D,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF,KAD8B;AAItC+D,IAAAA,WAAW,EAAE;AACXN,MAAAA,QAAQ,EAAE;AADC,KAJyB;AAOtCO,IAAAA,UAAU,EAAE;AACVP,MAAAA,QAAQ,EAAE;AADA;AAP0B,GAAL;AAAA,CAAN,CAA7B;AAYA,IAAMQ,SAAS,6NAAf,C,CAMA;;AACA,IAAMC,UAAU,GAAGtF,UAAU,CAAC,UAAAiB,KAAK;AAAA,SAAK;AACtCiE,IAAAA,MAAM,EAAE;AACN/D,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF;AAD8B,GAAL;AAAA,CAAN,CAA7B;AAMA,eAAe,SAASmE,oBAAT,GAAgC;AAC7C;AACA,MAAMC,QAAQ,GAAGxE,UAAU,EAA3B,CAF6C,CAI7C;;AACA,MAAMyE,QAAQ,GAAGhE,UAAU,EAA3B,CAL6C,CAO7C;;AACA,yBAA0B1B,KAAK,CAAC2D,QAAN,CAAe,KAAf,CAA1B;AAAA;AAAA,MAAOgC,KAAP;AAAA,MAAcC,QAAd;;AAEA,WAASC,mBAAT,GAA+B;AAC7BD,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;;AAED,WAASE,kBAAT,GAA8B;AAC5BF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAhB4C,CAkB7C;;;AACA,yBAA0B5F,KAAK,CAAC2D,QAAN,CAAe,KAAf,CAA1B;AAAA;AAAA,MAAOoC,KAAP;AAAA,MAAcC,QAAd;;AAEA,WAASC,mBAAT,GAA+B;AAC7BD,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;;AAED,WAASE,kBAAT,GAA8B;AAC5BF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GA3B4C,CA6B7C;;;AACA,MAAMG,QAAQ,GAAGjB,UAAU,EAA3B,CA9B6C,CAgC7C;;AACA,MAAMkB,QAAQ,GAAGb,UAAU,EAA3B;AAEA,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,+BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FADF,EAIU,GAJV,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DACuD,GADvD,eAEE;AACE,IAAA,MAAM,EAAC,QADT;AAEE,IAAA,SAAS,EAAC,kBAFZ;AAGE,IAAA,GAAG,EAAC,qBAHN;AAIE,IAAA,IAAI,EAAC,8CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CALF,CADF,eAmBE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEc,OAAvB;AAAgC,IAAA,eAAe,EAAC,iBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,kBAAW,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAME,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,kBAAW,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,SAAX;AAAqB,IAAA,SAAS,EAAEZ,QAAQ,CAACtE,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CANF,eAWE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,kBAAW,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,WAAX;AAAuB,IAAA,SAAS,EAAEsE,QAAQ,CAACtE,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAXF,CADF,CADF,eAqBE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEmF,OAAvB;AAAgC,IAAA,eAAe,EAAC,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+HADF,eAKE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,eAIE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAJF,eAOE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAPF,eAUE,oBAAC,YAAD;AACE,IAAA,KAAK,eACH,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,YAAL,CAFF,oBAE0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,MAAJ,CAF1B,EAE0C,GAF1C,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,iBAAJ,CAHF,QAG+B,4BAH/B,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CAVF,CANF,CArBF,eAmDE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEC,OAAvB;AAAgC,IAAA,eAAe,EAAC,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADlB,qBACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADrC,UAC6D,GAD7D,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,wDADF,eAME;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEN,mBADX;AAEE,IAAA,MAAM,EAAEC,kBAFV;AAGE,IAAA,IAAI,EAAEH,KAHR;AAIE,IAAA,KAAK,EAAC,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CAPF,CAnDF,eAoEE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAES,OAAvB;AAAgC,IAAA,eAAe,EAAC,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oHAE8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAF9B,iBADF,eAKE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,WAAW,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEJ,QAAQ,CAACjB,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,eAIE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEiB,QAAQ,CAACjB,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAJF,CANF,CApEF,eAoFE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEsB,OAAvB;AAAgC,IAAA,eAAe,EAAC,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,eAIE,oBAAC,OAAD;AACE,IAAA,mBAAmB,EAAE/F,IADvB;AAEE,IAAA,eAAe,EAAE;AAAEgG,MAAAA,OAAO,EAAE;AAAX,KAFnB;AAGE,IAAA,KAAK,EAAC,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CAJF,eAWE,oBAAC,OAAD;AAAS,IAAA,mBAAmB,EAAE/F,IAA9B;AAAoC,IAAA,KAAK,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAXF,CAHF,CApFF,CADF,eAyGE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEgG,OAAvB;AAAgC,IAAA,eAAe,EAAC,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADN,oJADF,eAME;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE;AAAK,IAAA,SAAS,EAAEjB,QAAQ,CAAC/D,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,SAAS,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,eAIE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,SAAS,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAJF,eAOE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,SAAS,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAPF,CADF,CADF,eAcE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,SAAS,EAAC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,SAAS,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CATF,CADF,eAcE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,UAAU,EAAC,UAJb;AAKE,IAAA,SAAS,EAAC,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,SAAS,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CAPF,eAYE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,SAAS,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,CAZF,eAiBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,SAAS,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,CAjBF,CAdF,CAdF,eAoDE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJF,eAOE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,SAAS,EAAC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAPF,CADF,CApDF,CAPF,CADF,eA4EE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEiF,OAAvB;AAAgC,IAAA,eAAe,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEADF,eAIE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,oBAAoB,MAA7B;AAA8B,IAAA,KAAK,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CADF,eAME,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,oBAAoB,MAA7B;AAA8B,IAAA,KAAK,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CANF,eAWE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,oBAAoB,MADtB;AAEE,IAAA,oBAAoB,MAFtB;AAGE,IAAA,KAAK,EAAC,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADF,CAXF,eAoBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,WAAW,EAAEf,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,WAAW,EAAE;AACXgB,MAAAA,aAAa,EAAE;AADJ,KADf;AAIE,IAAA,OAAO,EAAEhB,mBAJX;AAKE,IAAA,IAAI,EAAEF,KALR;AAME,IAAA,oBAAoB,MANtB;AAOE,IAAA,oBAAoB,MAPtB;AAQE,IAAA,oBAAoB,MARtB;AASE,IAAA,KAAK,EAAC,KATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,CADF,CADF,CADF,CApBF,CADF,CALF,CA5EF,eA6HE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEgB,OAAvB;AAAgC,IAAA,eAAe,EAAC,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADN,qDADF,eAKE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAExB,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEa,QAAQ,CAAChB,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,eAME,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEG,SADT;AAEE,IAAA,OAAO,EAAE;AAAE7C,MAAAA,OAAO,EAAE0D,QAAQ,CAACf;AAApB,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEe,QAAQ,CAAChB,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CANF,eAcE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEG,SADT;AAEE,IAAA,OAAO,EAAE;AAAE7C,MAAAA,OAAO,EAAE0D,QAAQ,CAACd;AAApB,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEc,QAAQ,CAAChB,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CAdF,CANF,CA7HF,eA0JE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAE4B,OAAvB;AAAgC,IAAA,eAAe,EAAC,mBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDACoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpC,0DAEqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFrC,yIAIgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJhD,MADF,eAOE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,CARF,CA1JF,eAyKE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEC,QAAvB;AAAiC,IAAA,eAAe,EAAC,oBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gPAI+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJ/B,UAI2D,GAJ3D,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,MADF,eAQE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAUE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,UAAU,EAAE,GAAjC;AAAsC,IAAA,UAAU,EAAE,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAVF,CAzKF,CAzGF,CAnBF,CADF;AAwTD;AAED,IAAMX,OAAO,6nCAAb;AA4CA,IAAMM,OAAO,05EAAb;AAgFA,IAAML,OAAO,0gKAAb;AAwNA,IAAMM,OAAO,wpDAAb;AA4DA,IAAML,OAAO,ghBAAb;AAuBA,IAAMO,OAAO,6qCAAb;AA0CA,IAAMN,OAAO,spBAAb;AA2BA,IAAMO,OAAO,0WAAb;AAeA,IAAMN,OAAO,qoBAAb;AAuBA,IAAMO,QAAQ,6TAAd","sourcesContent":["/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport {\n  Tooltip,\n  Fab,\n  IconButton,\n  Grid,\n  Button,\n  Typography,\n  ClickAwayListener,\n  Fade,\n  Zoom\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\n\n// Example 1\nconst useStyles1 = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(2)\n  },\n  absolute: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(3)\n  }\n}));\n\n// Example 2\nconst useStyles2 = makeStyles({\n  root: {\n    width: 500\n  }\n});\n\n// Example 3\nfunction arrowGenerator3(color) {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: \"-0.95em\",\n      width: \"3em\",\n      height: \"1em\",\n      \"&::before\": {\n        borderWidth: \"0 1em 1em 1em\",\n        borderColor: `transparent transparent ${color} transparent`\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: \"-0.95em\",\n      width: \"3em\",\n      height: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 0 1em\",\n        borderColor: `${color} transparent transparent transparent`\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: \"-0.95em\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 1em 1em 0\",\n        borderColor: `transparent ${color} transparent transparent`\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: \"-0.95em\",\n      height: \"3em\",\n      width: \"1em\",\n      \"&::before\": {\n        borderWidth: \"1em 0 1em 1em\",\n        borderColor: `transparent transparent transparent ${color}`\n      }\n    }\n  };\n}\n\nconst LightTooltip3 = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    boxShadow: theme.shadows[1],\n    fontSize: 11\n  }\n}))(Tooltip);\n\nconst useStylesArrow3 = makeStyles(theme => ({\n  arrow: {\n    position: \"absolute\",\n    fontSize: 6,\n    width: \"3em\",\n    height: \"3em\",\n    \"&::before\": {\n      content: '\"\"',\n      margin: \"auto\",\n      display: \"block\",\n      width: 0,\n      height: 0,\n      borderStyle: \"solid\"\n    }\n  },\n  popper: arrowGenerator3(theme.palette.grey[700])\n}));\n\nfunction ArrowTooltip3(props) {\n  const { arrow, ...classes } = useStylesArrow3();\n  const [arrowRef, setArrowRef] = React.useState(null);\n\n  return (\n    <Tooltip\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef\n            }\n          }\n        }\n      }}\n      {...props}\n      title={\n        <React.Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </React.Fragment>\n      }\n    />\n  );\n}\n\nArrowTooltip3.propTypes = {\n  title: PropTypes.node\n};\n\nconst useStylesBootstrap3 = makeStyles(theme => ({\n  arrow: {\n    position: \"absolute\",\n    fontSize: 6,\n    width: \"3em\",\n    height: \"3em\",\n    \"&::before\": {\n      content: '\"\"',\n      margin: \"auto\",\n      display: \"block\",\n      width: 0,\n      height: 0,\n      borderStyle: \"solid\"\n    }\n  },\n  popper: arrowGenerator3(theme.palette.common.black),\n  tooltip: {\n    backgroundColor: theme.palette.common.black\n  },\n  tooltipPlacementLeft: {\n    margin: \"0 8px\"\n  },\n  tooltipPlacementRight: {\n    margin: \"0 8px\"\n  },\n  tooltipPlacementTop: {\n    margin: \"8px 0\"\n  },\n  tooltipPlacementBottom: {\n    margin: \"8px 0\"\n  }\n}));\n\nfunction BootstrapTooltip3(props) {\n  const { arrow, ...classes } = useStylesBootstrap3();\n  const [arrowRef, setArrowRef] = React.useState(null);\n\n  return (\n    <Tooltip\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef\n            }\n          }\n        }\n      }}\n      {...props}\n      title={\n        <React.Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </React.Fragment>\n      }\n    />\n  );\n}\n\nBootstrapTooltip3.propTypes = {\n  title: PropTypes.node\n};\n\nconst HtmlTooltip3 = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\"\n  }\n}))(Tooltip);\n\n// Example 6\nconst useStyles6 = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  customWidth: {\n    maxWidth: 500\n  },\n  noMaxWidth: {\n    maxWidth: \"none\"\n  }\n}));\n\nconst longText6 = `\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\nPraesent non nunc mollis, fermentum neque at, semper arcu.\nNullam eget est sed sem iaculis gravida eget vitae justo.\n`;\n\n// Example 7\nconst useStyles7 = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function TooltipsExamplesPage() {\n  // Example 1\n  const classes1 = useStyles1();\n\n  // Example 2\n  const classes2 = useStyles2();\n\n  // Example 4\n  const [open4, setOpen4] = React.useState(false);\n\n  function handleTooltipClose4() {\n    setOpen4(false);\n  }\n\n  function handleTooltipOpen4() {\n    setOpen4(true);\n  }\n\n  // Example 5\n  const [open5, setOpen5] = React.useState(false);\n\n  function handleTooltipClose5() {\n    setOpen5(false);\n  }\n\n  function handleTooltipOpen5() {\n    setOpen5(true);\n  }\n\n  // Example 6\n  const classes6 = useStyles6();\n\n  // Example 7\n  const classes7 = useStyles7();\n\n  return (\n    <>\n      <Notice icon=\"flaticon-warning font-primary\">\n        <span>\n          Tooltips display informative text when users hover over, focus on, or\n          tap an element.\n        </span>{\" \"}\n        <span>\n          For more info please check the components's official{\" \"}\n          <a\n            target=\"_blank\"\n            className=\"font-weight-bold\"\n            rel=\"noopener noreferrer\"\n            href=\"https://material-ui.com/components/tooltips/\"\n          >\n            demos & documentation\n          </a>\n        </span>\n      </Notice>\n\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple Tooltips\">\n            <div>\n              <Tooltip title=\"Delete\">\n                <IconButton aria-label=\"Delete\">\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Add\" aria-label=\"Add\">\n                <Fab color=\"primary\" className={classes1.fab}>\n                  <AddIcon />\n                </Fab>\n              </Tooltip>\n              <Tooltip title=\"Add\" aria-label=\"Add\">\n                <Fab color=\"secondary\" className={classes1.fab}>\n                  <AddIcon />\n                </Fab>\n              </Tooltip>\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Customized tooltips\">\n            <span>\n              Here are some examples of customizing the component. You can learn\n              more about this in the overrides documentation page.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div>\n              <LightTooltip3 title=\"Add\">\n                <Button>Light</Button>\n              </LightTooltip3>\n              <ArrowTooltip3 title=\"Add\">\n                <Button>Arrow</Button>\n              </ArrowTooltip3>\n              <BootstrapTooltip3 title=\"Add\">\n                <Button>Bootstrap</Button>\n              </BootstrapTooltip3>\n              <HtmlTooltip3\n                title={\n                  <React.Fragment>\n                    <Typography color=\"inherit\">Tooltip with HTML</Typography>\n                    <em>{\"And here's\"}</em> <b>{\"some\"}</b>{\" \"}\n                    <u>{\"amazing content\"}</u>. {\"It's very engaging. Right?\"}\n                  </React.Fragment>\n                }\n              >\n                <Button>HTML</Button>\n              </HtmlTooltip3>\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Controlled Tooltips\">\n            <span>\n              You can use the <code>open</code>, <code>onOpen</code> and{\" \"}\n              <code>onClose</code> properties to control the behavior of the\n              tooltip.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <Tooltip\n              onClose={handleTooltipClose5}\n              onOpen={handleTooltipOpen5}\n              open={open5}\n              title=\"Add\"\n            >\n              <Button>Controlled</Button>\n            </Tooltip>\n          </KTCodeExample>\n\n          <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Interactive\">\n            <span>\n              A tooltip can be interactive. It won't close when the user hovers\n              over the tooltip before the <code>leaveDelay</code> is expired.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div>\n              <Tooltip title=\"Add\" interactive>\n                <Button className={classes7.button}>Interactive</Button>\n              </Tooltip>\n              <Tooltip title=\"Add\">\n                <Button className={classes7.button}>Non Interactive</Button>\n              </Tooltip>\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Transitions\">\n            <span>Use a different transition.</span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div>\n              <Tooltip title=\"Add\">\n                <Button>Grow</Button>\n              </Tooltip>\n              <Tooltip\n                TransitionComponent={Fade}\n                TransitionProps={{ timeout: 600 }}\n                title=\"Add\"\n              >\n                <Button>Fade</Button>\n              </Tooltip>\n              <Tooltip TransitionComponent={Zoom} title=\"Add\">\n                <Button>Zoom</Button>\n              </Tooltip>\n            </div>\n          </KTCodeExample>\n        </div>\n        <div className=\"col-md-6\">\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Positioned Tooltips\">\n            <span>\n              The <code>Tooltip</code> has 12 placements choice. They don’t have\n              directional arrows; instead, they rely on motion emanating from\n              the source to convey direction.\n            </span>\n            <div className=\"separator separator-dashed my-7\" />\n            <div className={classes2.root}>\n              <Grid container justify=\"center\">\n                <Grid item>\n                  <Tooltip title=\"Add\" placement=\"top-start\">\n                    <Button>top-start</Button>\n                  </Tooltip>\n                  <Tooltip title=\"Add\" placement=\"top\">\n                    <Button>top</Button>\n                  </Tooltip>\n                  <Tooltip title=\"Add\" placement=\"top-end\">\n                    <Button>top-end</Button>\n                  </Tooltip>\n                </Grid>\n              </Grid>\n              <Grid container justify=\"center\">\n                <Grid item xs={6}>\n                  <Tooltip title=\"Add\" placement=\"left-start\">\n                    <Button>left-start</Button>\n                  </Tooltip>\n                  <br />\n                  <Tooltip title=\"Add\" placement=\"left\">\n                    <Button>left</Button>\n                  </Tooltip>\n                  <br />\n                  <Tooltip title=\"Add\" placement=\"left-end\">\n                    <Button>left-end</Button>\n                  </Tooltip>\n                </Grid>\n                <Grid\n                  item\n                  container\n                  xs={6}\n                  alignItems=\"flex-end\"\n                  direction=\"column\"\n                >\n                  <Grid item>\n                    <Tooltip title=\"Add\" placement=\"right-start\">\n                      <Button>right-start</Button>\n                    </Tooltip>\n                  </Grid>\n                  <Grid item>\n                    <Tooltip title=\"Add\" placement=\"right\">\n                      <Button>right</Button>\n                    </Tooltip>\n                  </Grid>\n                  <Grid item>\n                    <Tooltip title=\"Add\" placement=\"right-end\">\n                      <Button>right-end</Button>\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid container justify=\"center\">\n                <Grid item>\n                  <Tooltip title=\"Add\" placement=\"bottom-start\">\n                    <Button>bottom-start</Button>\n                  </Tooltip>\n                  <Tooltip title=\"Add\" placement=\"bottom\">\n                    <Button>bottom</Button>\n                  </Tooltip>\n                  <Tooltip title=\"Add\" placement=\"bottom-end\">\n                    <Button>bottom-end</Button>\n                  </Tooltip>\n                </Grid>\n              </Grid>\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Triggers\">\n            <span>\n              You can define the types of events that cause a tooltip to show.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div>\n              <Grid container justify=\"center\">\n                <Grid item>\n                  <Tooltip disableFocusListener title=\"Add\">\n                    <Button>Hover or touch</Button>\n                  </Tooltip>\n                </Grid>\n                <Grid item>\n                  <Tooltip disableHoverListener title=\"Add\">\n                    <Button>Focus or touch</Button>\n                  </Tooltip>\n                </Grid>\n                <Grid item>\n                  <Tooltip\n                    disableFocusListener\n                    disableTouchListener\n                    title=\"Add\"\n                  >\n                    <Button>Hover</Button>\n                  </Tooltip>\n                </Grid>\n                <Grid item>\n                  <ClickAwayListener onClickAway={handleTooltipClose4}>\n                    <div>\n                      <Tooltip\n                        PopperProps={{\n                          disablePortal: true\n                        }}\n                        onClose={handleTooltipClose4}\n                        open={open4}\n                        disableFocusListener\n                        disableHoverListener\n                        disableTouchListener\n                        title=\"Add\"\n                      >\n                        <Button onClick={handleTooltipOpen4}>Click</Button>\n                      </Tooltip>\n                    </div>\n                  </ClickAwayListener>\n                </Grid>\n              </Grid>\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Variable Width\">\n            <span>\n              The <code>Tooltip</code> wraps long text by default to make it\n              readable.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div>\n              <Tooltip title={longText6}>\n                <Button className={classes6.button}>\n                  Default Width [300px]\n                </Button>\n              </Tooltip>\n              <Tooltip\n                title={longText6}\n                classes={{ tooltip: classes6.customWidth }}\n              >\n                <Button className={classes6.button}>\n                  Custom Width [500px]\n                </Button>\n              </Tooltip>\n              <Tooltip\n                title={longText6}\n                classes={{ tooltip: classes6.noMaxWidth }}\n              >\n                <Button className={classes6.button}>No wrapping</Button>\n              </Tooltip>\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample jsCode={jsCode8} beforeCodeTitle=\"Disabled Elements\">\n            <span>\n              By default disabled elements like <code>&lt;button&gt;</code> do\n              not trigger user interactions so a <code>Tooltip</code> will not\n              activate on normal events like hover. To accommodate disabled\n              elements, add a simple wrapper element like a <code>span</code>.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <Tooltip title=\"You don't have permission to do this\">\n              <span>\n                <Button disabled>A Disabled Button</Button>\n              </span>\n            </Tooltip>\n          </KTCodeExample>\n\n          <KTCodeExample jsCode={jsCode10} beforeCodeTitle=\"Showing and hiding\">\n            <span>\n              The tooltip is normally shown immediately when the user's mouse\n              hovers over the element, and hides immediately when the user's\n              mouse leaves. A delay in showing or hiding the tooltip can be\n              added through the properties <code>enterDelay</code> and{\" \"}\n              <code>leaveDelay</code>.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n\n            <Tooltip title=\"Add\" enterDelay={500} leaveDelay={200}>\n              <Button>[500ms, 200ms]</Button>\n            </Tooltip>\n          </KTCodeExample>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst jsCode1 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(2),\n  },\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3),\n  },\n}));\n\nexport default function SimpleTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title=\"Delete\">\n        <IconButton aria-label=\"Delete\">\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Add\" aria-label=\"Add\">\n        <Fab color=\"primary\" className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n      <Tooltip title=\"Add\" aria-label=\"Add\">\n        <Fab color=\"secondary\" className={classes.absolute}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n    </div>\n  );\n}\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n});\n\nexport default function PositionedTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"center\">\n        <Grid item>\n          <Tooltip title=\"Add\" placement=\"top-start\">\n            <Button>top-start</Button>\n          </Tooltip>\n          <Tooltip title=\"Add\" placement=\"top\">\n            <Button>top</Button>\n          </Tooltip>\n          <Tooltip title=\"Add\" placement=\"top-end\">\n            <Button>top-end</Button>\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <Grid container justify=\"center\">\n        <Grid item xs={6}>\n          <Tooltip title=\"Add\" placement=\"left-start\">\n            <Button>left-start</Button>\n          </Tooltip>\n          <br />\n          <Tooltip title=\"Add\" placement=\"left\">\n            <Button>left</Button>\n          </Tooltip>\n          <br />\n          <Tooltip title=\"Add\" placement=\"left-end\">\n            <Button>left-end</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item container xs={6} alignItems=\"flex-end\" direction=\"column\">\n          <Grid item>\n            <Tooltip title=\"Add\" placement=\"right-start\">\n              <Button>right-start</Button>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n            <Tooltip title=\"Add\" placement=\"right\">\n              <Button>right</Button>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n            <Tooltip title=\"Add\" placement=\"right-end\">\n              <Button>right-end</Button>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container justify=\"center\">\n        <Grid item>\n          <Tooltip title=\"Add\" placement=\"bottom-start\">\n            <Button>bottom-start</Button>\n          </Tooltip>\n          <Tooltip title=\"Add\" placement=\"bottom\">\n            <Button>bottom</Button>\n          </Tooltip>\n          <Tooltip title=\"Add\" placement=\"bottom-end\">\n            <Button>bottom-end</Button>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n`;\nconst jsCode3 = `\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n\nfunction arrowGenerator(color) {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.95em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: \\`transparent transparent \\${color} transparent\\`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: \\`\\${color} transparent transparent transparent\\`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.95em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: \\`transparent \\${color} transparent transparent\\`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: \\`transparent transparent transparent \\${color}\\`,\n      },\n    },\n  };\n}\n\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}))(Tooltip);\n\nconst useStylesArrow = makeStyles(theme => ({\n  arrow: {\n    position: 'absolute',\n    fontSize: 6,\n    width: '3em',\n    height: '3em',\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  popper: arrowGenerator(theme.palette.grey[700]),\n}));\n\nfunction ArrowTooltip(props) {\n  const { arrow, ...classes } = useStylesArrow();\n  const [arrowRef, setArrowRef] = React.useState(null);\n\n  return (\n    <Tooltip\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n      }}\n      {...props}\n      title={\n        <React.Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </React.Fragment>\n      }\n    />\n  );\n}\n\nArrowTooltip.propTypes = {\n  title: PropTypes.node,\n};\n\nconst useStylesBootstrap = makeStyles(theme => ({\n  arrow: {\n    position: 'absolute',\n    fontSize: 6,\n    width: '3em',\n    height: '3em',\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  popper: arrowGenerator(theme.palette.common.black),\n  tooltip: {\n    backgroundColor: theme.palette.common.black,\n  },\n  tooltipPlacementLeft: {\n    margin: '0 8px',\n  },\n  tooltipPlacementRight: {\n    margin: '0 8px',\n  },\n  tooltipPlacementTop: {\n    margin: '8px 0',\n  },\n  tooltipPlacementBottom: {\n    margin: '8px 0',\n  },\n}));\n\nfunction BootstrapTooltip(props) {\n  const { arrow, ...classes } = useStylesBootstrap();\n  const [arrowRef, setArrowRef] = React.useState(null);\n\n  return (\n    <Tooltip\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n      }}\n      {...props}\n      title={\n        <React.Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </React.Fragment>\n      }\n    />\n  );\n}\n\nBootstrapTooltip.propTypes = {\n  title: PropTypes.node,\n};\n\nconst HtmlTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nexport default function CustomizedTooltips() {\n  return (\n    <div>\n      <LightTooltip title=\"Add\">\n        <Button>Light</Button>\n      </LightTooltip>\n      <ArrowTooltip title=\"Add\">\n        <Button>Arrow</Button>\n      </ArrowTooltip>\n      <BootstrapTooltip title=\"Add\">\n        <Button>Bootstrap</Button>\n      </BootstrapTooltip>\n      <HtmlTooltip\n        title={\n          <React.Fragment>\n            <Typography color=\"inherit\">Tooltip with HTML</Typography>\n            <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\n            {\"It's very engaging. Right?\"}\n          </React.Fragment>\n        }\n      >\n        <Button>HTML</Button>\n      </HtmlTooltip>\n    </div>\n  );\n}\n`;\nconst jsCode4 = `\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nexport default function TriggersTooltips() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleTooltipClose() {\n    setOpen(false);\n  }\n\n  function handleTooltipOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <div>\n      <Grid container justify=\"center\">\n        <Grid item>\n          <Tooltip disableFocusListener title=\"Add\">\n            <Button>Hover or touch</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip disableHoverListener title=\"Add\">\n            <Button>Focus or touch</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip disableFocusListener disableTouchListener title=\"Add\">\n            <Button>Hover</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <ClickAwayListener onClickAway={handleTooltipClose}>\n            <div>\n              <Tooltip\n                PopperProps={{\n                  disablePortal: true,\n                }}\n                onClose={handleTooltipClose}\n                open={open}\n                disableFocusListener\n                disableHoverListener\n                disableTouchListener\n                title=\"Add\"\n              >\n                <Button onClick={handleTooltipOpen}>Click</Button>\n              </Tooltip>\n            </div>\n          </ClickAwayListener>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n`;\nconst jsCode5 = `\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function ControlledTooltips() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleTooltipClose() {\n    setOpen(false);\n  }\n\n  function handleTooltipOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <Tooltip onClose={handleTooltipClose} onOpen={handleTooltipOpen} open={open} title=\"Add\">\n      <Button>Controlled</Button>\n    </Tooltip>\n  );\n}\n`;\nconst jsCode6 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  customWidth: {\n    maxWidth: 500,\n  },\n  noMaxWidth: {\n    maxWidth: 'none',\n  },\n}));\n\nconst longText = \\`\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\nPraesent non nunc mollis, fermentum neque at, semper arcu.\nNullam eget est sed sem iaculis gravida eget vitae justo.\n\\`;\n\nexport default function VariableWidth() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title={longText}>\n        <Button className={classes.button}>Default Width [300px]</Button>\n      </Tooltip>\n      <Tooltip title={longText} classes={{ tooltip: classes.customWidth }}>\n        <Button className={classes.button}>Custom Width [500px]</Button>\n      </Tooltip>\n      <Tooltip title={longText} classes={{ tooltip: classes.noMaxWidth }}>\n        <Button className={classes.button}>No wrapping</Button>\n      </Tooltip>\n    </div>\n  );\n}\n`;\nconst jsCode7 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function InteractiveTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title=\"Add\" interactive>\n        <Button className={classes.button}>Interactive</Button>\n      </Tooltip>\n      <Tooltip title=\"Add\">\n        <Button className={classes.button}>Non Interactive</Button>\n      </Tooltip>\n    </div>\n  );\n}\n`;\nconst jsCode8 = `\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function DisabledTooltips() {\n  return (\n    <Tooltip title=\"You don't have permission to do this\">\n      <span>\n        <Button disabled>A Disabled Button</Button>\n      </span>\n    </Tooltip>\n  );\n}\n`;\nconst jsCode9 = `\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport Zoom from '@material-ui/core/Zoom';\n\nexport default function TransitionsTooltips() {\n  return (\n    <div>\n      <Tooltip title=\"Add\">\n        <Button>Grow</Button>\n      </Tooltip>\n      <Tooltip TransitionComponent={Fade} TransitionProps={{ timeout: 600 }} title=\"Add\">\n        <Button>Fade</Button>\n      </Tooltip>\n      <Tooltip TransitionComponent={Zoom} title=\"Add\">\n        <Button>Zoom</Button>\n      </Tooltip>\n    </div>\n  );\n}\n`;\nconst jsCode10 = `\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function DelayTooltips() {\n  return (\n    <Tooltip title=\"Add\" enterDelay={500} leaveDelay={200}>\n      <Button>[500ms, 200ms]</Button>\n    </Tooltip>\n  );\n}\n`;\n"]},"metadata":{},"sourceType":"module"}