{"ast":null,"code":"import _toConsumableArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/_metronic/_helpers/TableRowSelectionHelpers.js\";\nimport React from \"react\";\n\nfunction SelectionCheckbox(_ref) {\n  var isSelected = _ref.isSelected,\n      onChange = _ref.onChange;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox checkbox-single\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isSelected,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction groupingItemOnSelect(props) {\n  var ids = props.ids,\n      setIds = props.setIds,\n      customerId = props.customerId;\n\n  if (ids.some(function (id) {\n    return id === customerId;\n  })) {\n    setIds(ids.filter(function (id) {\n      return id !== customerId;\n    }));\n  } else {\n    var newIds = _toConsumableArray(ids);\n\n    newIds.push(customerId);\n    setIds(newIds);\n  }\n}\n\nfunction groupingAllOnSelect(props) {\n  var isSelected = props.isSelected,\n      setIds = props.setIds,\n      entities = props.entities;\n\n  if (!isSelected) {\n    var allIds = [];\n    entities.forEach(function (el) {\n      return allIds.push(el.id);\n    });\n    setIds(allIds);\n  } else {\n    setIds([]);\n  }\n\n  return isSelected;\n} // check official documentations: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Row%20Selection&selectedStory=Custom%20Selection%20Column%20Header%20Style&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\n\n\nexport function getSelectRow(props) {\n  var _this = this;\n\n  var entities = props.entities,\n      ids = props.ids,\n      setIds = props.setIds;\n  return {\n    mode: \"checkbox\",\n    clickToSelect: true,\n    hideSelectAll: false,\n    selectionHeaderRenderer: function selectionHeaderRenderer() {\n      var isSelected = entities && entities.length > 0 && entities.length === ids.length;\n      var props = {\n        isSelected: isSelected,\n        entities: entities,\n        setIds: setIds\n      };\n      return /*#__PURE__*/React.createElement(SelectionCheckbox, {\n        isSelected: isSelected,\n        onChange: function onChange() {\n          return groupingAllOnSelect(props);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      });\n    },\n    selectionRenderer: function selectionRenderer(_ref2) {\n      var rowIndex = _ref2.rowIndex;\n      var isSelected = ids.some(function (el) {\n        return el === entities[rowIndex].id;\n      });\n      var props = {\n        ids: ids,\n        setIds: setIds,\n        customerId: entities[rowIndex].id\n      };\n      return /*#__PURE__*/React.createElement(SelectionCheckbox, {\n        isSelected: isSelected,\n        onChange: function onChange() {\n          return groupingItemOnSelect(props);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/_metronic/_helpers/TableRowSelectionHelpers.js"],"names":["React","SelectionCheckbox","isSelected","onChange","display","groupingItemOnSelect","props","ids","setIds","customerId","some","id","filter","newIds","push","groupingAllOnSelect","entities","allIds","forEach","el","getSelectRow","mode","clickToSelect","hideSelectAll","selectionHeaderRenderer","length","selectionRenderer","rowIndex"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction SelectionCheckbox({ isSelected, onChange }) {\n  return (\n    <>\n      <input type=\"checkbox\" style={{ display: \"none\" }} />\n      <label className=\"checkbox checkbox-single\">\n        <input type=\"checkbox\" checked={isSelected} onChange={onChange} />\n        <span />\n      </label>\n    </>\n  );\n}\n\nfunction groupingItemOnSelect(props) {\n  const { ids, setIds, customerId } = props;\n  if (ids.some((id) => id === customerId)) {\n    setIds(ids.filter((id) => id !== customerId));\n  } else {\n    const newIds = [...ids];\n    newIds.push(customerId);\n    setIds(newIds);\n  }\n}\n\nfunction groupingAllOnSelect(props) {\n  const { isSelected, setIds, entities } = props;\n  if (!isSelected) {\n    const allIds = [];\n    entities.forEach((el) => allIds.push(el.id));\n    setIds(allIds);\n  } else {\n    setIds([]);\n  }\n\n  return isSelected;\n}\n\n// check official documentations: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Row%20Selection&selectedStory=Custom%20Selection%20Column%20Header%20Style&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\nexport function getSelectRow(props) {\n  const { entities, ids, setIds } = props;\n  return {\n    mode: \"checkbox\",\n    clickToSelect: true,\n    hideSelectAll: false,\n    selectionHeaderRenderer: () => {\n      const isSelected =\n        entities && entities.length > 0 && entities.length === ids.length;\n      const props = { isSelected, entities, setIds };\n      return (\n        <SelectionCheckbox\n          isSelected={isSelected}\n          onChange={() => groupingAllOnSelect(props)}\n        />\n      );\n    },\n    selectionRenderer: ({ rowIndex }) => {\n      const isSelected = ids.some((el) => el === entities[rowIndex].id);\n      const props = { ids, setIds, customerId: entities[rowIndex].id };\n      return (\n        <SelectionCheckbox\n          isSelected={isSelected}\n          onChange={() => groupingItemOnSelect(props)}\n        />\n      );\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}