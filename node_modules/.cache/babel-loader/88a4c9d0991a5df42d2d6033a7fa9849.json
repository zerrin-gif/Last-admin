{"ast":null,"code":"import _objectSpread from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/product-remarks/RemarksFilter.js\";\nimport React, { useMemo } from \"react\";\nimport { Formik } from \"formik\";\nimport { isEqual } from \"lodash\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nvar prepareFilter = function prepareFilter(queryParams, values) {\n  var searchText = values.searchText;\n\n  var newQueryParams = _objectSpread({}, queryParams);\n\n  var filter = {};\n  filter.text = searchText;\n  newQueryParams.filter = filter;\n  return newQueryParams;\n};\n\nexport function RemarksFilter() {\n  var _this = this;\n\n  // Remarks UI Context\n  var remarksUIContext = useRemarksUIContext();\n  var remarksUIProps = useMemo(function () {\n    return {\n      setQueryParams: remarksUIContext.setQueryParams,\n      openNewRemarkDialog: remarksUIContext.openNewRemarkDialog,\n      queryParams: remarksUIContext.queryParams\n    };\n  }, [remarksUIContext]);\n\n  var applyFilter = function applyFilter(values) {\n    var newQueryParams = prepareFilter(remarksUIProps.queryParams, values);\n\n    if (!isEqual(newQueryParams, remarksUIProps.queryParams)) {\n      newQueryParams.pageNumber = 1;\n      remarksUIProps.setQueryParams(newQueryParams);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-filtration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2 margin-bottom-10-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      searchText: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      applyFilter(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, function (_ref) {\n    var values = _ref.values,\n        handleSubmit = _ref.handleSubmit,\n        handleBlur = _ref.handleBlur,\n        handleChange = _ref.handleChange,\n        setFieldValue = _ref.setFieldValue;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"searchText\",\n      placeholder: \"Search\",\n      onBlur: handleBlur,\n      value: values.searchText,\n      onChange: function onChange(e) {\n        setFieldValue(\"searchText\", e.target.value);\n        handleSubmit();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"form-text text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    }, \"Search\"), \" in all fields\")));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 margin-bottom-10-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2 text-right margin-bottom-10-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      return remarksUIProps.openNewRemarkDialog();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Create new remark\")))));\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/product-remarks/RemarksFilter.js"],"names":["React","useMemo","Formik","isEqual","useRemarksUIContext","prepareFilter","queryParams","values","searchText","newQueryParams","filter","text","RemarksFilter","remarksUIContext","remarksUIProps","setQueryParams","openNewRemarkDialog","applyFilter","pageNumber","handleSubmit","handleBlur","handleChange","setFieldValue","e","target","value"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport { Formik } from \"formik\";\nimport { isEqual } from \"lodash\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nconst prepareFilter = (queryParams, values) => {\n  const { searchText } = values;\n  const newQueryParams = { ...queryParams };\n  const filter = {};\n  filter.text = searchText;\n  newQueryParams.filter = filter;\n  return newQueryParams;\n};\n\nexport function RemarksFilter() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      setQueryParams: remarksUIContext.setQueryParams,\n      openNewRemarkDialog: remarksUIContext.openNewRemarkDialog,\n      queryParams: remarksUIContext.queryParams,\n    };\n  }, [remarksUIContext]);\n\n  const applyFilter = (values) => {\n    const newQueryParams = prepareFilter(remarksUIProps.queryParams, values);\n    if (!isEqual(newQueryParams, remarksUIProps.queryParams)) {\n      newQueryParams.pageNumber = 1;\n      remarksUIProps.setQueryParams(newQueryParams);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"form-filtration\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\n            <Formik\n              initialValues={{\n                searchText: \"\",\n              }}\n              onSubmit={(values) => {\n                applyFilter(values);\n              }}\n            >\n              {({\n                values,\n                handleSubmit,\n                handleBlur,\n                handleChange,\n                setFieldValue,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <div>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"searchText\"\n                      placeholder=\"Search\"\n                      onBlur={handleBlur}\n                      value={values.searchText}\n                      onChange={(e) => {\n                        setFieldValue(\"searchText\", e.target.value);\n                        handleSubmit();\n                      }}\n                    />\n                    <small className=\"form-text text-muted\">\n                      <b>Search</b> in all fields\n                    </small>\n                  </div>\n                </form>\n              )}\n            </Formik>\n          </div>\n          <div className=\"col-md-8 margin-bottom-10-mobile\"></div>\n          <div className=\"col-md-2 text-right margin-bottom-10-mobile\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => remarksUIProps.openNewRemarkDialog()}\n            >\n              Create new remark\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}