{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialRemarksState = {\n  listLoading: false,\n  actionsLoading: false,\n  totalCount: 0,\n  entities: null,\n  remarkForEdit: undefined,\n  lastError: null\n};\nexport var callTypes = {\n  list: \"list\",\n  action: \"action\"\n};\nexport var remarksSlice = createSlice({\n  name: \"remarks\",\n  initialState: initialRemarksState,\n  reducers: {\n    catchError: function catchError(state, action) {\n      state.error = \"\".concat(action.type, \": \").concat(action.payload.error);\n\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = false;\n      } else {\n        state.actionsLoading = false;\n      }\n    },\n    startCall: function startCall(state, action) {\n      state.error = null;\n\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = true;\n      } else {\n        state.actionsLoading = true;\n      }\n    },\n    // getRemarkById\n    remarkFetched: function remarkFetched(state, action) {\n      state.actionsLoading = false;\n      state.remarkForEdit = action.payload.remarkForEdit;\n      state.error = null;\n    },\n    // findRemarks\n    remarksFetched: function remarksFetched(state, action) {\n      var _action$payload = action.payload,\n          totalCount = _action$payload.totalCount,\n          entities = _action$payload.entities;\n      state.listLoading = false;\n      state.error = null;\n      state.entities = entities;\n      state.totalCount = totalCount;\n    },\n    // createRemark\n    remarkCreated: function remarkCreated(state, action) {\n      state.actionsLoading = false;\n      state.error = null;\n      state.entities.push(action.payload.remark);\n    },\n    // updateRemark\n    remarkUpdated: function remarkUpdated(state, action) {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.map(function (entity) {\n        if (entity.id === action.payload.remark.id) {\n          return action.payload.remark;\n        }\n\n        return entity;\n      });\n    },\n    // deleteRemark\n    remarkDeleted: function remarkDeleted(state, action) {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(function (el) {\n        return el.id !== action.payload.id;\n      });\n    },\n    // deleteRemarks\n    remarksDeleted: function remarksDeleted(state, action) {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(function (el) {\n        return !action.payload.ids.includes(el.id);\n      });\n    },\n    // remarksUpdateState\n    remarksStatusUpdated: function remarksStatusUpdated(state, action) {\n      state.actionsLoading = false;\n      state.error = null;\n      var _action$payload2 = action.payload,\n          ids = _action$payload2.ids,\n          status = _action$payload2.status;\n      state.entities = state.entities.map(function (entity) {\n        if (ids.findIndex(function (id) {\n          return id === entity.id;\n        }) > -1) {\n          entity.status = status;\n        }\n\n        return entity;\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/_redux/remarks/remarksSlice.js"],"names":["createSlice","initialRemarksState","listLoading","actionsLoading","totalCount","entities","remarkForEdit","undefined","lastError","callTypes","list","action","remarksSlice","name","initialState","reducers","catchError","state","error","type","payload","callType","startCall","remarkFetched","remarksFetched","remarkCreated","push","remark","remarkUpdated","map","entity","id","remarkDeleted","filter","el","remarksDeleted","ids","includes","remarksStatusUpdated","status","findIndex"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialRemarksState = {\n  listLoading: false,\n  actionsLoading: false,\n  totalCount: 0,\n  entities: null,\n  remarkForEdit: undefined,\n  lastError: null\n};\nexport const callTypes = {\n  list: \"list\",\n  action: \"action\"\n};\n\nexport const remarksSlice = createSlice({\n  name: \"remarks\",\n  initialState: initialRemarksState,\n  reducers: {\n    catchError: (state, action) => {\n      state.error = `${action.type}: ${action.payload.error}`;\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = false;\n      } else {\n        state.actionsLoading = false;\n      }\n    },\n    startCall: (state, action) => {\n      state.error = null;\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = true;\n      } else {\n        state.actionsLoading = true;\n      }\n    },\n    // getRemarkById\n    remarkFetched: (state, action) => {\n      state.actionsLoading = false;\n      state.remarkForEdit = action.payload.remarkForEdit;\n      state.error = null;\n    },\n    // findRemarks\n    remarksFetched: (state, action) => {\n      const { totalCount, entities } = action.payload;\n      state.listLoading = false;\n      state.error = null;\n      state.entities = entities;\n      state.totalCount = totalCount;\n    },\n    // createRemark\n    remarkCreated: (state, action) => {\n      state.actionsLoading = false;\n      state.error = null;\n      state.entities.push(action.payload.remark);\n    },\n    // updateRemark\n    remarkUpdated: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.map(entity => {\n        if (entity.id === action.payload.remark.id) {\n          return action.payload.remark;\n        }\n        return entity;\n      });\n    },\n    // deleteRemark\n    remarkDeleted: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\n    },\n    // deleteRemarks\n    remarksDeleted: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(\n        el => !action.payload.ids.includes(el.id)\n      );\n    },\n    // remarksUpdateState\n    remarksStatusUpdated: (state, action) => {\n      state.actionsLoading = false;\n      state.error = null;\n      const { ids, status } = action.payload;\n      state.entities = state.entities.map(entity => {\n        if (ids.findIndex(id => id === entity.id) > -1) {\n          entity.status = status;\n        }\n        return entity;\n      });\n    }\n  }\n});\n"]},"metadata":{},"sourceType":"module"}