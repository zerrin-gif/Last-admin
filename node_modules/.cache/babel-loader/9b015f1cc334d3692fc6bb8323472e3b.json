{"ast":null,"code":"var _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/product-remarks/RemarksTable.js\";\n// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\nimport * as uiHelpers from \"./RemarksUIHelper\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport { getSelectRow, getHandlerTableChange, NoRecordsFoundMessage, PleaseWaitMessage, sortCaret } from \"../../../../../../_metronic/_helpers\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\nexport function RemarksTable() {\n  var _this = this;\n\n  // Remarks UI Context\n  var remarksUIContext = useRemarksUIContext();\n  var remarksUIProps = useMemo(function () {\n    return {\n      ids: remarksUIContext.ids,\n      setIds: remarksUIContext.setIds,\n      queryParams: remarksUIContext.queryParams,\n      setQueryParams: remarksUIContext.setQueryParams,\n      productId: remarksUIContext.productId,\n      openEditRemarkDialog: remarksUIContext.openEditRemarkDialog,\n      openDeleteRemarkDialog: remarksUIContext.openDeleteRemarkDialog\n    };\n  }, [remarksUIContext]); // Getting curret state of products list from store (Redux)\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      currentState: state.remarks\n    };\n  }, shallowEqual),\n      currentState = _useSelector.currentState;\n\n  var totalCount = currentState.totalCount,\n      entities = currentState.entities,\n      listLoading = currentState.listLoading;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    remarksUIProps.setIds([]);\n    dispatch(actions.fetchRemarks(remarksUIProps.queryParams, remarksUIProps.productId)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remarksUIProps.queryParams, dispatch, remarksUIProps.productId]);\n  var columns = [{\n    dataField: \"id\",\n    text: \"ID\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"text\",\n    text: \"Text\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"dueDate\",\n    text: \"Due date\",\n    sort: false\n  }, {\n    dataField: \"action\",\n    text: \"Actions\",\n    formatter: ActionsColumnFormatter,\n    formatExtraData: {\n      openEditRemarkDialog: remarksUIProps.openEditRemarkDialog,\n      openDeleteRemarkDialog: remarksUIProps.openDeleteRemarkDialog\n    },\n    classes: \"text-right pr-0\",\n    headerClasses: \"text-right pr-3\",\n    style: {\n      minWidth: \"100px\"\n    }\n  }];\n  var paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: remarksUIProps.queryParams.pageSize,\n    page: remarksUIProps.queryParams.pageNumber\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PaginationProvider, {\n    pagination: paginationFactory(paginationOptions),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var paginationProps = _ref.paginationProps,\n        paginationTableProps = _ref.paginationTableProps;\n    return /*#__PURE__*/React.createElement(Pagination, {\n      isLoading: listLoading,\n      paginationProps: paginationProps,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({\n      wrapperClasses: \"table-responsive\",\n      classes: \"table table-head-custom table-vertical-center overflow-hidden\",\n      bordered: false,\n      bootstrap4: true,\n      remote: true,\n      keyField: \"id\",\n      data: entities === null ? [] : entities,\n      columns: columns,\n      defaultSorted: uiHelpers.defaultSorted,\n      onTableChange: getHandlerTableChange(remarksUIProps.setQueryParams),\n      selectRow: getSelectRow({\n        entities: entities,\n        ids: remarksUIProps.ids,\n        setIds: remarksUIProps.setIds\n      })\n    }, paginationTableProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(PleaseWaitMessage, {\n      entities: entities,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NoRecordsFoundMessage, {\n      entities: entities,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    })));\n  }));\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ECommerce/pages/products/product-remarks/RemarksTable.js"],"names":["React","useEffect","useMemo","shallowEqual","useDispatch","useSelector","BootstrapTable","paginationFactory","PaginationProvider","actions","ActionsColumnFormatter","uiHelpers","Pagination","getSelectRow","getHandlerTableChange","NoRecordsFoundMessage","PleaseWaitMessage","sortCaret","useRemarksUIContext","RemarksTable","remarksUIContext","remarksUIProps","ids","setIds","queryParams","setQueryParams","productId","openEditRemarkDialog","openDeleteRemarkDialog","state","currentState","remarks","totalCount","entities","listLoading","dispatch","fetchRemarks","columns","dataField","text","sort","formatter","formatExtraData","classes","headerClasses","style","minWidth","paginationOptions","custom","totalSize","sizePerPageList","sizePerPage","pageSize","page","pageNumber","paginationProps","paginationTableProps","defaultSorted"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,WAApC,QAAuD,aAAvD;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,IACEC,kBADF,QAEO,kCAFP;AAGA,OAAO,KAAKC,OAAZ,MAAyB,wCAAzB;AACA,SAASC,sBAAT,QAAuC,4CAAvC;AACA,OAAO,KAAKC,SAAZ,MAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,gDAA3B;AACA,SACEC,YADF,EAEEC,qBAFF,EAGEC,qBAHF,EAIEC,iBAJF,EAKEC,SALF,QAMO,sCANP;AAOA,SAASC,mBAAT,QAAoC,oBAApC;AAEA,OAAO,SAASC,YAAT,GAAwB;AAAA;;AAC7B;AACA,MAAMC,gBAAgB,GAAGF,mBAAmB,EAA5C;AACA,MAAMG,cAAc,GAAGnB,OAAO,CAAC,YAAM;AACnC,WAAO;AACLoB,MAAAA,GAAG,EAAEF,gBAAgB,CAACE,GADjB;AAELC,MAAAA,MAAM,EAAEH,gBAAgB,CAACG,MAFpB;AAGLC,MAAAA,WAAW,EAAEJ,gBAAgB,CAACI,WAHzB;AAILC,MAAAA,cAAc,EAAEL,gBAAgB,CAACK,cAJ5B;AAKLC,MAAAA,SAAS,EAAEN,gBAAgB,CAACM,SALvB;AAMLC,MAAAA,oBAAoB,EAAEP,gBAAgB,CAACO,oBANlC;AAOLC,MAAAA,sBAAsB,EAAER,gBAAgB,CAACQ;AAPpC,KAAP;AASD,GAV6B,EAU3B,CAACR,gBAAD,CAV2B,CAA9B,CAH6B,CAe7B;;AACA,qBAAyBf,WAAW,CAClC,UAACwB,KAAD;AAAA,WAAY;AAAEC,MAAAA,YAAY,EAAED,KAAK,CAACE;AAAtB,KAAZ;AAAA,GADkC,EAElC5B,YAFkC,CAApC;AAAA,MAAQ2B,YAAR,gBAAQA,YAAR;;AAIA,MAAQE,UAAR,GAA8CF,YAA9C,CAAQE,UAAR;AAAA,MAAoBC,QAApB,GAA8CH,YAA9C,CAAoBG,QAApB;AAAA,MAA8BC,WAA9B,GAA8CJ,YAA9C,CAA8BI,WAA9B;AACA,MAAMC,QAAQ,GAAG/B,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,YAAM;AACdoB,IAAAA,cAAc,CAACE,MAAf,CAAsB,EAAtB;AACAY,IAAAA,QAAQ,CACN1B,OAAO,CAAC2B,YAAR,CAAqBf,cAAc,CAACG,WAApC,EAAiDH,cAAc,CAACK,SAAhE,CADM,CAAR,CAFc,CAKd;AACD,GANQ,EAMN,CAACL,cAAc,CAACG,WAAhB,EAA6BW,QAA7B,EAAuCd,cAAc,CAACK,SAAtD,CANM,CAAT;AAOA,MAAMW,OAAO,GAAG,CACd;AACEC,IAAAA,SAAS,EAAE,IADb;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGEC,IAAAA,IAAI,EAAE,IAHR;AAIEvB,IAAAA,SAAS,EAAEA;AAJb,GADc,EAOd;AACEqB,IAAAA,SAAS,EAAE,MADb;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,IAAI,EAAE,IAHR;AAIEvB,IAAAA,SAAS,EAAEA;AAJb,GAPc,EAad;AACEqB,IAAAA,SAAS,EAAE,SADb;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAbc,EAkBd;AACEF,IAAAA,SAAS,EAAE,QADb;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEE,IAAAA,SAAS,EAAE/B,sBAHb;AAIEgC,IAAAA,eAAe,EAAE;AACff,MAAAA,oBAAoB,EAAEN,cAAc,CAACM,oBADtB;AAEfC,MAAAA,sBAAsB,EAAEP,cAAc,CAACO;AAFxB,KAJnB;AAQEe,IAAAA,OAAO,EAAE,iBARX;AASEC,IAAAA,aAAa,EAAE,iBATjB;AAUEC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL;AAVT,GAlBc,CAAhB;AAkCA,MAAMC,iBAAiB,GAAG;AACxBC,IAAAA,MAAM,EAAE,IADgB;AAExBC,IAAAA,SAAS,EAAEjB,UAFa;AAGxBkB,IAAAA,eAAe,EAAEvC,SAAS,CAACuC,eAHH;AAIxBC,IAAAA,WAAW,EAAE9B,cAAc,CAACG,WAAf,CAA2B4B,QAJhB;AAKxBC,IAAAA,IAAI,EAAEhC,cAAc,CAACG,WAAf,CAA2B8B;AALT,GAA1B;AAOA,sBACE,uDACE,oBAAC,kBAAD;AAAoB,IAAA,UAAU,EAAE/C,iBAAiB,CAACwC,iBAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAA+C;AAAA,QAA5CQ,eAA4C,QAA5CA,eAA4C;AAAA,QAA3BC,oBAA2B,QAA3BA,oBAA2B;AAC9C,wBACE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEtB,WADb;AAEE,MAAA,eAAe,EAAEqB,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,cAAD;AACE,MAAA,cAAc,EAAC,kBADjB;AAEE,MAAA,OAAO,EAAC,+DAFV;AAGE,MAAA,QAAQ,EAAE,KAHZ;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,MAAM,MALR;AAME,MAAA,QAAQ,EAAC,IANX;AAOE,MAAA,IAAI,EAAEtB,QAAQ,KAAK,IAAb,GAAoB,EAApB,GAAyBA,QAPjC;AAQE,MAAA,OAAO,EAAEI,OARX;AASE,MAAA,aAAa,EAAE1B,SAAS,CAAC8C,aAT3B;AAUE,MAAA,aAAa,EAAE3C,qBAAqB,CAClCO,cAAc,CAACI,cADmB,CAVtC;AAaE,MAAA,SAAS,EAAEZ,YAAY,CAAC;AACtBoB,QAAAA,QAAQ,EAARA,QADsB;AAEtBX,QAAAA,GAAG,EAAED,cAAc,CAACC,GAFE;AAGtBC,QAAAA,MAAM,EAAEF,cAAc,CAACE;AAHD,OAAD;AAbzB,OAkBMiC,oBAlBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAoBE,oBAAC,iBAAD;AAAmB,MAAA,QAAQ,EAAEvB,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,eAqBE,oBAAC,qBAAD;AAAuB,MAAA,QAAQ,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CAJF,CADF;AA8BD,GAhCH,CADF,CADF;AAsCD","sourcesContent":["// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {\n  PaginationProvider,\n} from \"react-bootstrap-table2-paginator\";\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\nimport * as uiHelpers from \"./RemarksUIHelper\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport {\n  getSelectRow,\n  getHandlerTableChange,\n  NoRecordsFoundMessage,\n  PleaseWaitMessage,\n  sortCaret,\n} from \"../../../../../../_metronic/_helpers\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nexport function RemarksTable() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      ids: remarksUIContext.ids,\n      setIds: remarksUIContext.setIds,\n      queryParams: remarksUIContext.queryParams,\n      setQueryParams: remarksUIContext.setQueryParams,\n      productId: remarksUIContext.productId,\n      openEditRemarkDialog: remarksUIContext.openEditRemarkDialog,\n      openDeleteRemarkDialog: remarksUIContext.openDeleteRemarkDialog,\n    };\n  }, [remarksUIContext]);\n\n  // Getting curret state of products list from store (Redux)\n  const { currentState } = useSelector(\n    (state) => ({ currentState: state.remarks }),\n    shallowEqual\n  );\n  const { totalCount, entities, listLoading } = currentState;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    remarksUIProps.setIds([]);\n    dispatch(\n      actions.fetchRemarks(remarksUIProps.queryParams, remarksUIProps.productId)\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remarksUIProps.queryParams, dispatch, remarksUIProps.productId]);\n  const columns = [\n    {\n      dataField: \"id\",\n      text: \"ID\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"text\",\n      text: \"Text\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"dueDate\",\n      text: \"Due date\",\n      sort: false,\n    },\n    {\n      dataField: \"action\",\n      text: \"Actions\",\n      formatter: ActionsColumnFormatter,\n      formatExtraData: {\n        openEditRemarkDialog: remarksUIProps.openEditRemarkDialog,\n        openDeleteRemarkDialog: remarksUIProps.openDeleteRemarkDialog,\n      },\n      classes: \"text-right pr-0\",\n      headerClasses: \"text-right pr-3\",\n      style: {\n        minWidth: \"100px\",\n      },\n    },\n  ];\n\n  const paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: remarksUIProps.queryParams.pageSize,\n    page: remarksUIProps.queryParams.pageNumber,\n  };\n  return (\n    <>\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\n        {({ paginationProps, paginationTableProps }) => {\n          return (\n            <Pagination\n              isLoading={listLoading}\n              paginationProps={paginationProps}\n            >\n              <BootstrapTable\n                wrapperClasses=\"table-responsive\"\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n                bordered={false}\n                bootstrap4\n                remote\n                keyField=\"id\"\n                data={entities === null ? [] : entities}\n                columns={columns}\n                defaultSorted={uiHelpers.defaultSorted}\n                onTableChange={getHandlerTableChange(\n                  remarksUIProps.setQueryParams\n                )}\n                selectRow={getSelectRow({\n                  entities,\n                  ids: remarksUIProps.ids,\n                  setIds: remarksUIProps.setIds,\n                })}\n                {...paginationTableProps}\n              >\n                <PleaseWaitMessage entities={entities} />\n                <NoRecordsFoundMessage entities={entities} />\n              </BootstrapTable>\n            </Pagination>\n          );\n        }}\n      </PaginationProvider>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}