{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/_metronic/_partials/controls/code-examples-kt/KTCodeBlock.js\";\n\n/* eslint-disable jsx-a11y/aria-proptypes */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport clsx from \"clsx\"; // https://github.com/conorhastings/react-syntax-highlighter#prism\n\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"; // See https://github.com/PrismJS/prism-themes\n\nimport { coy as highlightStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nexport var KTCodeBlock = function KTCodeBlock(_ref) {\n  var languages = _ref.languages,\n      tabs = _ref.tabs,\n      codeShown = _ref.codeShown,\n      customStyle = _ref.customStyle;\n  var isCodeBlockShown = codeShown.isCodeBlockShown;\n  var tabId = tabs.tabId,\n      setTabId = tabs.setTabId;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, languages.length === 0 && /*#__PURE__*/React.createElement(React.Fragment, null), languages.length === 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"example-code mt-5 \".concat(clsx({\n      \"example-code-on\": isCodeBlockShown\n    })),\n    style: {\n      display: isCodeBlockShown ? \"block\" : \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"example-highlight jsx\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SyntaxHighlighter, {\n    language: \"jsx\",\n    style: highlightStyle,\n    customStyle: customStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, languages[0].code))), languages.length > 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"example-code mt-5 \".concat(clsx({\n      \"example-code-on\": isCodeBlockShown\n    })),\n    style: {\n      display: isCodeBlockShown ? \"block\" : \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"example-nav nav nav-tabs nav-tabs-line nav-tabs-line-2x nav-tabs-primary\",\n    id: \"codeTab\",\n    role: \"tablist\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, languages.map(function (lang, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      key: \"ki\".concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link \".concat(tabId === index ? \"active\" : \"\"),\n      \"data-toggle\": \"tab\",\n      role: \"tab\",\n      \"aria-selected\": \"\".concat(tabId === index ? \"true\" : \"false\"),\n      onClick: function onClick() {\n        return setTabId(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, lang.shortCode));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, languages.map(function (lang, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: \"#F3F6F9\"\n      },\n      className: \"tab-pane  \".concat(tabId === index ? \"active\" : \"\"),\n      key: \"divTabPane\".concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"example-highlight language-\".concat(lang.shortCode, \" \").concat(lang.shortCode),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(SyntaxHighlighter, {\n      language: \"jsx\",\n      style: highlightStyle,\n      customStyle: customStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, lang.code)));\n  })))));\n};","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/_metronic/_partials/controls/code-examples-kt/KTCodeBlock.js"],"names":["React","clsx","Prism","SyntaxHighlighter","coy","highlightStyle","KTCodeBlock","languages","tabs","codeShown","customStyle","isCodeBlockShown","tabId","setTabId","length","display","code","map","lang","index","shortCode","background"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/aria-proptypes */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport clsx from \"clsx\";\n// https://github.com/conorhastings/react-syntax-highlighter#prism\nimport {Prism as SyntaxHighlighter} from \"react-syntax-highlighter\";\n// See https://github.com/PrismJS/prism-themes\nimport {coy as highlightStyle} from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nexport const KTCodeBlock = ({ languages, tabs, codeShown, customStyle }) => {\n  const { isCodeBlockShown } = codeShown;\n  const { tabId, setTabId } = tabs;\n  return (\n    <>\n      {languages.length === 0 && <></>}\n      {languages.length === 1 && (\n        <div\n          className={`example-code mt-5 ${clsx({\n            \"example-code-on\": isCodeBlockShown\n          })}`}\n          style={{ display: isCodeBlockShown ? \"block\" : \"none\" }}\n        >\n          <div className={`example-highlight jsx`}>\n            <SyntaxHighlighter\n              language=\"jsx\"\n              style={highlightStyle}\n              customStyle={customStyle}\n            >\n              {languages[0].code}\n            </SyntaxHighlighter>\n          </div>\n        </div>\n      )}\n      {languages.length > 1 && (\n        <>\n          <div\n            className={`example-code mt-5 ${clsx({\n              \"example-code-on\": isCodeBlockShown\n            })}`}\n            style={{ display: isCodeBlockShown ? \"block\" : \"none\" }}\n          >\n            <ul\n              className=\"example-nav nav nav-tabs nav-tabs-line nav-tabs-line-2x nav-tabs-primary\"\n              id=\"codeTab\"\n              role=\"tablist\"\n            >\n              {languages.map((lang, index) => (\n                <li className=\"nav-item\" key={`ki${index}`}>\n                  <a\n                    className={`nav-link ${tabId === index ? \"active\" : \"\"}`}\n                    data-toggle=\"tab\"\n                    role=\"tab\"\n                    aria-selected={`${tabId === index ? \"true\" : \"false\"}`}\n                    onClick={() => setTabId(index)}\n                  >\n                    {lang.shortCode}\n                  </a>\n                </li>\n              ))}\n            </ul>\n            <div className=\"tab-content\">\n              {languages.map((lang, index) => (\n                <div\n                  style={{ background: \"#F3F6F9\" }}\n                  className={`tab-pane  ${tabId === index ? \"active\" : \"\"}`}\n                  key={`divTabPane${index}`}\n                >\n                  <div\n                    className={`example-highlight language-${lang.shortCode} ${lang.shortCode}`}\n                  >\n                    <SyntaxHighlighter\n                      language=\"jsx\"\n                      style={highlightStyle}\n                      customStyle={customStyle}\n                    >\n                      {lang.code}\n                    </SyntaxHighlighter>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n      \n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}