{"ast":null,"code":"/* eslint-disable */\n\"use strict\";\n\nimport { KTUtil } from \"./../../components/util.js\";\nimport KTOffcanvas from \"./../../components/offcanvas.js\";\n\nvar KTLayoutQuickPanel = function () {\n  // Private properties\n  var _element;\n\n  var _offcanvasObject;\n\n  var _notificationsElement;\n\n  var _logsElement;\n\n  var _settingsElement; // Private functions\n\n\n  var _getContentHeight = function _getContentHeight() {\n    var height;\n    var header = KTUtil.find(_element, '.offcanvas-header');\n    var content = KTUtil.find(_element, '.offcanvas-content');\n    var height = parseInt(KTUtil.getViewPort().height);\n\n    if (header) {\n      height = height - parseInt(KTUtil.actualHeight(header));\n      height = height - parseInt(KTUtil.css(header, 'marginTop'));\n      height = height - parseInt(KTUtil.css(header, 'marginBottom'));\n    }\n\n    if (content) {\n      height = height - parseInt(KTUtil.css(content, 'marginTop'));\n      height = height - parseInt(KTUtil.css(content, 'marginBottom'));\n    }\n\n    height = height - parseInt(KTUtil.css(_element, 'paddingTop'));\n    height = height - parseInt(KTUtil.css(_element, 'paddingBottom'));\n    height = height - 2;\n    return height;\n  };\n\n  var _init = function _init() {\n    _offcanvasObject = new KTOffcanvas(_element, {\n      overlay: true,\n      baseClass: 'offcanvas',\n      placement: 'right',\n      closeBy: 'kt_quick_panel_close',\n      toggleBy: 'kt_quick_panel_toggle'\n    });\n  };\n\n  var _initNotifications = function _initNotifications() {\n    KTUtil.scrollInit(_notificationsElement, {\n      mobileNativeScroll: true,\n      resetHeightOnDestroy: true,\n      handleWindowResize: true,\n      height: function height() {\n        return _getContentHeight();\n      }\n    });\n  };\n\n  var _initLogs = function _initLogs() {\n    KTUtil.scrollInit(_logsElement, {\n      mobileNativeScroll: true,\n      resetHeightOnDestroy: true,\n      handleWindowResize: true,\n      height: function height() {\n        return _getContentHeight();\n      }\n    });\n  };\n\n  var _initSettings = function _initSettings() {\n    KTUtil.scrollInit(_settingsElement, {\n      mobileNativeScroll: true,\n      resetHeightOnDestroy: true,\n      handleWindowResize: true,\n      height: function height() {\n        return _getContentHeight();\n      }\n    });\n  };\n\n  var _updateScrollbars = function _updateScrollbars() {\n    $(_element).find('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n      KTUtil.scrollUpdate(_notificationsElement);\n      KTUtil.scrollUpdate(_logsElement);\n      KTUtil.scrollUpdate(_settingsElement);\n    });\n  }; // Public methods\n\n\n  return {\n    init: function init(id) {\n      _element = KTUtil.getById(id);\n      _notificationsElement = KTUtil.getById('kt_quick_panel_notifications');\n      _logsElement = KTUtil.getById('kt_quick_panel_logs');\n      _settingsElement = KTUtil.getById('kt_quick_panel_settings');\n\n      _init();\n\n      _initNotifications();\n\n      _initLogs();\n\n      _initSettings();\n    }\n  };\n}(); // Webpack support\n\n\nif (typeof module !== 'undefined') {// module.exports = KTLayoutQuickPanel;\n}\n\nexport default KTLayoutQuickPanel;","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/_metronic/_assets/js/layout/extended/quick-panel.js"],"names":["KTUtil","KTOffcanvas","KTLayoutQuickPanel","_element","_offcanvasObject","_notificationsElement","_logsElement","_settingsElement","_getContentHeight","height","header","find","content","parseInt","getViewPort","actualHeight","css","_init","overlay","baseClass","placement","closeBy","toggleBy","_initNotifications","scrollInit","mobileNativeScroll","resetHeightOnDestroy","handleWindowResize","_initLogs","_initSettings","_updateScrollbars","$","on","e","scrollUpdate","init","id","getById","module"],"mappings":"AAAA;AACA;;AAEA,SAASA,MAAT,QAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;AAEA,IAAIC,kBAAkB,GAAG,YAAW;AAChC;AACA,MAAIC,QAAJ;;AACA,MAAIC,gBAAJ;;AACA,MAAIC,qBAAJ;;AACA,MAAIC,YAAJ;;AACA,MAAIC,gBAAJ,CANgC,CAQhC;;;AACA,MAAIC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAW;AAC/B,QAAIC,MAAJ;AAEA,QAAIC,MAAM,GAAGV,MAAM,CAACW,IAAP,CAAYR,QAAZ,EAAsB,mBAAtB,CAAb;AACA,QAAIS,OAAO,GAAGZ,MAAM,CAACW,IAAP,CAAYR,QAAZ,EAAsB,oBAAtB,CAAd;AAEA,QAAIM,MAAM,GAAGI,QAAQ,CAACb,MAAM,CAACc,WAAP,GAAqBL,MAAtB,CAArB;;AAEA,QAAIC,MAAJ,EAAY;AACRD,MAAAA,MAAM,GAAGA,MAAM,GAAGI,QAAQ,CAACb,MAAM,CAACe,YAAP,CAAoBL,MAApB,CAAD,CAA1B;AACAD,MAAAA,MAAM,GAAGA,MAAM,GAAGI,QAAQ,CAACb,MAAM,CAACgB,GAAP,CAAWN,MAAX,EAAmB,WAAnB,CAAD,CAA1B;AACAD,MAAAA,MAAM,GAAGA,MAAM,GAAGI,QAAQ,CAACb,MAAM,CAACgB,GAAP,CAAWN,MAAX,EAAmB,cAAnB,CAAD,CAA1B;AACH;;AAED,QAAIE,OAAJ,EAAa;AACTH,MAAAA,MAAM,GAAGA,MAAM,GAAGI,QAAQ,CAACb,MAAM,CAACgB,GAAP,CAAWJ,OAAX,EAAoB,WAApB,CAAD,CAA1B;AACAH,MAAAA,MAAM,GAAGA,MAAM,GAAGI,QAAQ,CAACb,MAAM,CAACgB,GAAP,CAAWJ,OAAX,EAAoB,cAApB,CAAD,CAA1B;AACH;;AAEDH,IAAAA,MAAM,GAAGA,MAAM,GAAGI,QAAQ,CAACb,MAAM,CAACgB,GAAP,CAAWb,QAAX,EAAqB,YAArB,CAAD,CAA1B;AACAM,IAAAA,MAAM,GAAGA,MAAM,GAAGI,QAAQ,CAACb,MAAM,CAACgB,GAAP,CAAWb,QAAX,EAAqB,eAArB,CAAD,CAA1B;AAEAM,IAAAA,MAAM,GAAGA,MAAM,GAAG,CAAlB;AAEA,WAAOA,MAAP;AACH,GAzBD;;AA2BA,MAAIQ,KAAK,GAAG,SAARA,KAAQ,GAAW;AACnBb,IAAAA,gBAAgB,GAAG,IAAIH,WAAJ,CAAgBE,QAAhB,EAA0B;AACzCe,MAAAA,OAAO,EAAE,IADgC;AAEzCC,MAAAA,SAAS,EAAE,WAF8B;AAGzCC,MAAAA,SAAS,EAAE,OAH8B;AAIzCC,MAAAA,OAAO,EAAE,sBAJgC;AAKzCC,MAAAA,QAAQ,EAAE;AAL+B,KAA1B,CAAnB;AAOH,GARD;;AAUA,MAAIC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAW;AAChCvB,IAAAA,MAAM,CAACwB,UAAP,CAAkBnB,qBAAlB,EAAyC;AACrCoB,MAAAA,kBAAkB,EAAE,IADiB;AAErCC,MAAAA,oBAAoB,EAAE,IAFe;AAGrCC,MAAAA,kBAAkB,EAAE,IAHiB;AAIrClB,MAAAA,MAAM,EAAE,kBAAW;AACf,eAAOD,iBAAiB,EAAxB;AACH;AANoC,KAAzC;AAQH,GATD;;AAWA,MAAIoB,SAAS,GAAG,SAAZA,SAAY,GAAW;AACvB5B,IAAAA,MAAM,CAACwB,UAAP,CAAkBlB,YAAlB,EAAgC;AAC5BmB,MAAAA,kBAAkB,EAAE,IADQ;AAE5BC,MAAAA,oBAAoB,EAAE,IAFM;AAG5BC,MAAAA,kBAAkB,EAAE,IAHQ;AAI5BlB,MAAAA,MAAM,EAAE,kBAAW;AACf,eAAOD,iBAAiB,EAAxB;AACH;AAN2B,KAAhC;AAQH,GATD;;AAWA,MAAIqB,aAAa,GAAG,SAAhBA,aAAgB,GAAW;AAC3B7B,IAAAA,MAAM,CAACwB,UAAP,CAAkBjB,gBAAlB,EAAoC;AAChCkB,MAAAA,kBAAkB,EAAE,IADY;AAEhCC,MAAAA,oBAAoB,EAAE,IAFU;AAGhCC,MAAAA,kBAAkB,EAAE,IAHY;AAIhClB,MAAAA,MAAM,EAAE,kBAAW;AACf,eAAOD,iBAAiB,EAAxB;AACH;AAN+B,KAApC;AAQH,GATD;;AAWA,MAAIsB,iBAAiB,GAAG,SAApBA,iBAAoB,GAAW;AAC/BC,IAAAA,CAAC,CAAC5B,QAAD,CAAD,CAAYQ,IAAZ,CAAiB,sBAAjB,EAAyCqB,EAAzC,CAA4C,cAA5C,EAA4D,UAAUC,CAAV,EAAa;AACrEjC,MAAAA,MAAM,CAACkC,YAAP,CAAoB7B,qBAApB;AACAL,MAAAA,MAAM,CAACkC,YAAP,CAAoB5B,YAApB;AACAN,MAAAA,MAAM,CAACkC,YAAP,CAAoB3B,gBAApB;AACH,KAJD;AAKH,GAND,CA/EgC,CAuFhC;;;AACA,SAAO;AACH4B,IAAAA,IAAI,EAAE,cAASC,EAAT,EAAa;AACfjC,MAAAA,QAAQ,GAAGH,MAAM,CAACqC,OAAP,CAAeD,EAAf,CAAX;AACA/B,MAAAA,qBAAqB,GAAGL,MAAM,CAACqC,OAAP,CAAe,8BAAf,CAAxB;AACA/B,MAAAA,YAAY,GAAGN,MAAM,CAACqC,OAAP,CAAe,qBAAf,CAAf;AACA9B,MAAAA,gBAAgB,GAAGP,MAAM,CAACqC,OAAP,CAAe,yBAAf,CAAnB;;AAEApB,MAAAA,KAAK;;AACLM,MAAAA,kBAAkB;;AAClBK,MAAAA,SAAS;;AACTC,MAAAA,aAAa;AAGhB;AAbE,GAAP;AAeH,CAvGwB,EAAzB,C,CAyGA;;;AACA,IAAI,OAAOS,MAAP,KAAkB,WAAtB,EAAmC,CAClC;AACA;;AAED,eAAepC,kBAAf","sourcesContent":["/* eslint-disable */\n\"use strict\";\n\nimport { KTUtil } from \"./../../components/util.js\";\nimport KTOffcanvas from \"./../../components/offcanvas.js\";\n\nvar KTLayoutQuickPanel = function() {\n    // Private properties\n    var _element;\n    var _offcanvasObject;\n    var _notificationsElement;\n    var _logsElement;\n    var _settingsElement;\n\n    // Private functions\n    var _getContentHeight = function() {\n        var height;\n\n        var header = KTUtil.find(_element, '.offcanvas-header');\n        var content = KTUtil.find(_element, '.offcanvas-content');\n\n        var height = parseInt(KTUtil.getViewPort().height);\n\n        if (header) {\n            height = height - parseInt(KTUtil.actualHeight(header));\n            height = height - parseInt(KTUtil.css(header, 'marginTop'));\n            height = height - parseInt(KTUtil.css(header, 'marginBottom'));\n        }\n\n        if (content) {\n            height = height - parseInt(KTUtil.css(content, 'marginTop'));\n            height = height - parseInt(KTUtil.css(content, 'marginBottom'));\n        }\n\n        height = height - parseInt(KTUtil.css(_element, 'paddingTop'));\n        height = height - parseInt(KTUtil.css(_element, 'paddingBottom'));\n\n        height = height - 2;\n\n        return height;\n    }\n\n    var _init = function() {\n        _offcanvasObject = new KTOffcanvas(_element, {\n            overlay: true,\n            baseClass: 'offcanvas',\n            placement: 'right',\n            closeBy: 'kt_quick_panel_close',\n            toggleBy: 'kt_quick_panel_toggle'\n        });\n    }\n\n    var _initNotifications = function() {\n        KTUtil.scrollInit(_notificationsElement, {\n            mobileNativeScroll: true,\n            resetHeightOnDestroy: true,\n            handleWindowResize: true,\n            height: function() {\n                return _getContentHeight();\n            }\n        });\n    }\n\n    var _initLogs = function() {\n        KTUtil.scrollInit(_logsElement, {\n            mobileNativeScroll: true,\n            resetHeightOnDestroy: true,\n            handleWindowResize: true,\n            height: function() {\n                return _getContentHeight();\n            }\n        });\n    }\n\n    var _initSettings = function() {\n        KTUtil.scrollInit(_settingsElement, {\n            mobileNativeScroll: true,\n            resetHeightOnDestroy: true,\n            handleWindowResize: true,\n            height: function() {\n                return _getContentHeight();\n            }\n        });\n    }\n\n    var _updateScrollbars = function() {\n        $(_element).find('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n            KTUtil.scrollUpdate(_notificationsElement);\n            KTUtil.scrollUpdate(_logsElement);\n            KTUtil.scrollUpdate(_settingsElement);\n        });\n    }\n\n    // Public methods\n    return {\n        init: function(id) {\n            _element = KTUtil.getById(id);\n            _notificationsElement = KTUtil.getById('kt_quick_panel_notifications');\n            _logsElement = KTUtil.getById('kt_quick_panel_logs');\n            _settingsElement = KTUtil.getById('kt_quick_panel_settings');\n\n            _init();\n            _initNotifications();\n            _initLogs();\n            _initSettings();\n\n            \n        }\n    };\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n\t// module.exports = KTLayoutQuickPanel;\n}\n\nexport default KTLayoutQuickPanel;"]},"metadata":{},"sourceType":"module"}