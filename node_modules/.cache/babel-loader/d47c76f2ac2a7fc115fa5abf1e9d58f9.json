{"ast":null,"code":"import _slicedToArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/utils/NoSSRExamplesPage.js\";\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { NoSsr, Button } from \"@material-ui/core\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      display: \"block\",\n      margin: theme.spacing(2)\n    }\n  };\n}; // Example 2\n\n\nvar useStyles = makeStyles({\n  container: {\n    maxWidth: 300,\n    wordBreak: \"break-all\"\n  }\n});\n\nfunction LargeTree() {\n  var _this = this;\n\n  return Array.from(new Array(3000)).map(function (_, index) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, \".\");\n  });\n}\n\nfunction NoSSRExamplesPage(props) {\n  // Example 1\n  var classes = props.classes; // Example 2\n\n  var classes2 = useStyles();\n\n  var _React$useState = React.useState({\n    open: false,\n    defer: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/no-ssr/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Client side deferring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"In it's core, the NoSsr component purpose is to defer rendering. You can use it to defer the rendering from the server to the client.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Server & Client\"), /*#__PURE__*/React.createElement(NoSsr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Client only\")))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Frame deferring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"You can also use it to defer the rendering within the client itself. You can wait a screen frame with the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 48\n    }\n  }, \"defer\"), \" property to render the children. React does 2 commits instead of 1.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary mr-3\",\n    onClick: function onClick() {\n      return setState({\n        open: !state.open,\n        defer: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, 'Render NoSsr defer=\"false\"'), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      return setState({\n        open: !state.open,\n        defer: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, 'Render NoSsr defer=\"true\"'), state.open ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes2.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Outside NoSsr\"), /*#__PURE__*/React.createElement(NoSsr, {\n    defer: state.defer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"....Inside NoSsr\", /*#__PURE__*/React.createElement(LargeTree, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }))) : null)));\n}\n\nNoSSRExamplesPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NoSSRExamplesPage);\nvar jsCode1 = \"\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport NoSsr from '@material-ui/core/NoSsr';\\nimport Button from '@material-ui/core/Button';\\n\\nconst styles = theme => ({\\n  button: {\\n    display: 'block',\\n    margin: theme.spacing(2),\\n  },\\n});\\n\\nfunction SimpleNoSsr(props) {\\n  const { classes } = props;\\n\\n  return (\\n    <div>\\n      <Button className={classes.button} variant=\\\"contained\\\" color=\\\"primary\\\">\\n        Server & Client\\n      </Button>\\n      <NoSsr>\\n        <Button className={classes.button} variant=\\\"contained\\\" color=\\\"secondary\\\">\\n          Client only\\n        </Button>\\n      </NoSsr>\\n    </div>\\n  );\\n}\\n\\nSimpleNoSsr.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(SimpleNoSsr);\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport NoSsr from '@material-ui/core/NoSsr';\\n\\nconst useStyles = makeStyles({\\n  container: {\\n    maxWidth: 300,\\n    wordBreak: 'break-all',\\n  },\\n});\\n\\nfunction LargeTree() {\\n  return Array.from(new Array(3000)).map((_, index) => <span key={index}>.</span>);\\n}\\n\\nfunction FrameDeferring() {\\n  const classes = useStyles();\\n  const [state, setState] = React.useState({ open: false, defer: false });\\n\\n  return (\\n    <div>\\n      <button\\n        type=\\\"button\\\"\\n        onClick={() =>\\n          setState({\\n            open: !state.open,\\n            defer: false,\\n          })\\n        }\\n      >\\n        {'Render NoSsr defer=\\\"false\\\"'}\\n      </button>\\n      <button\\n        type=\\\"button\\\"\\n        onClick={() =>\\n          setState({\\n            open: !state.open,\\n            defer: true,\\n          })\\n        }\\n      >\\n        {'Render NoSsr defer=\\\"true\\\"'}\\n      </button>\\n      {state.open ? (\\n        <div className={classes.container}>\\n          <span>Outside NoSsr</span>\\n          <NoSsr defer={state.defer}>\\n            ....Inside NoSsr\\n            <LargeTree />\\n          </NoSsr>\\n        </div>\\n      ) : null}\\n    </div>\\n  );\\n}\\n\\nexport default FrameDeferring;\\n\";","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/utils/NoSSRExamplesPage.js"],"names":["React","PropTypes","makeStyles","withStyles","NoSsr","Button","Notice","KTCodeExample","styles","theme","button","display","margin","spacing","useStyles","container","maxWidth","wordBreak","LargeTree","Array","from","map","_","index","NoSSRExamplesPage","props","classes","classes2","useState","open","defer","state","setState","jsCode1","jsCode2","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport {NoSsr, Button} from \"@material-ui/core\";\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\n\n// Example 1\nconst styles = theme => ({\n  button: {\n    display: \"block\",\n    margin: theme.spacing(2)\n  }\n});\n\n// Example 2\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 300,\n    wordBreak: \"break-all\"\n  }\n});\n\nfunction LargeTree() {\n  return Array.from(new Array(3000)).map((_, index) => (\n    <span key={index}>.</span>\n  ));\n}\n\nfunction NoSSRExamplesPage(props) {\n  // Example 1\n  const { classes } = props;\n\n  // Example 2\n  const classes2 = useStyles();\n  const [state, setState] = React.useState({ open: false, defer: false });\n\n  return (\n    <>\n      <Notice icon=\"flaticon-warning font-primary\">\n        <span>\n          NoSsr purposely removes components from the subject of Server Side\n          Rendering (SSR).\n        </span>{\" \"}\n        <span>\n          For more info please check the components's official{\" \"}\n          <a\n            target=\"_blank\"\n            className=\"font-weight-bold\"\n            rel=\"noopener noreferrer\"\n            href=\"https://material-ui.com/components/no-ssr/\"\n          >\n            demos & documentation\n          </a>\n        </span>\n      </Notice>\n\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Client side deferring\">\n        <span>\n          In it's core, the NoSsr component purpose is to defer rendering. You\n          can use it to defer the rendering from the server to the client.\n        </span>\n        <div className=\"separator separator-dashed my-7\"></div>\n        <div>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Server & Client\n          </Button>\n          <NoSsr>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Client only\n            </Button>\n          </NoSsr>\n        </div>\n      </KTCodeExample>\n\n      <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Frame deferring\">\n        <span>\n          You can also use it to defer the rendering within the client itself.\n          You can wait a screen frame with the <code>defer</code> property to\n          render the children. React does 2 commits instead of 1.\n        </span>\n        <div className=\"separator separator-dashed my-7\"></div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary mr-3\"\n            onClick={() =>\n              setState({\n                open: !state.open,\n                defer: false\n              })\n            }\n          >\n            {'Render NoSsr defer=\"false\"'}\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() =>\n              setState({\n                open: !state.open,\n                defer: true\n              })\n            }\n          >\n            {'Render NoSsr defer=\"true\"'}\n          </button>\n          {state.open ? (\n            <div className={classes2.container}>\n              <span>Outside NoSsr</span>\n              <NoSsr defer={state.defer}>\n                ....Inside NoSsr\n                <LargeTree />\n              </NoSsr>\n            </div>\n          ) : null}\n        </div>\n      </KTCodeExample>\n    </>\n  );\n}\n\nNoSSRExamplesPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NoSSRExamplesPage);\n\nconst jsCode1 = `\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  button: {\n    display: 'block',\n    margin: theme.spacing(2),\n  },\n});\n\nfunction SimpleNoSsr(props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      <Button className={classes.button} variant=\"contained\" color=\"primary\">\n        Server & Client\n      </Button>\n      <NoSsr>\n        <Button className={classes.button} variant=\"contained\" color=\"secondary\">\n          Client only\n        </Button>\n      </NoSsr>\n    </div>\n  );\n}\n\nSimpleNoSsr.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleNoSsr);\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 300,\n    wordBreak: 'break-all',\n  },\n});\n\nfunction LargeTree() {\n  return Array.from(new Array(3000)).map((_, index) => <span key={index}>.</span>);\n}\n\nfunction FrameDeferring() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({ open: false, defer: false });\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={() =>\n          setState({\n            open: !state.open,\n            defer: false,\n          })\n        }\n      >\n        {'Render NoSsr defer=\"false\"'}\n      </button>\n      <button\n        type=\"button\"\n        onClick={() =>\n          setState({\n            open: !state.open,\n            defer: true,\n          })\n        }\n      >\n        {'Render NoSsr defer=\"true\"'}\n      </button>\n      {state.open ? (\n        <div className={classes.container}>\n          <span>Outside NoSsr</span>\n          <NoSsr defer={state.defer}>\n            ....Inside NoSsr\n            <LargeTree />\n          </NoSsr>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FrameDeferring;\n`;\n"]},"metadata":{},"sourceType":"module"}