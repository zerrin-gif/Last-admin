{"ast":null,"code":"import _objectSpread from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/feedback/SnackbarsExamplesPage.js\";\nvar _excluded = [\"className\", \"message\", \"onClose\", \"variant\"];\n\n/* eslint-disable no-func-assign */\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Snackbar, IconButton, SnackbarContent, Fade, Slide, Grow, CssBaseline, Toolbar, AppBar, Typography, Fab } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Notice, KTCodeExample } from \"../../../../_metronic/_partials/controls\"; // Example 1\n\nvar useStyles1 = makeStyles(function (theme) {\n  return {\n    close: {\n      padding: theme.spacing(0.5)\n    }\n  };\n}); // Example 2\n\nvar variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\nvar useStyles21 = makeStyles(function (theme) {\n  return {\n    success: {\n      backgroundColor: green[600]\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1)\n    },\n    message: {\n      display: \"flex\",\n      alignItems: \"center\"\n    }\n  };\n});\n\nfunction MySnackbarContentWrapper2(props) {\n  var classes = useStyles21();\n\n  var className = props.className,\n      message = props.message,\n      onClose = props.onClose,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var Icon = variantIcon[variant];\n  return /*#__PURE__*/React.createElement(SnackbarContent, Object.assign({\n    className: clsx(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), message),\n    action: [/*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }))]\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }));\n}\n\nMySnackbarContentWrapper2.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\n};\nvar useStyles22 = makeStyles(function (theme) {\n  return {\n    margin: {\n      margin: theme.spacing(1)\n    }\n  };\n}); // Example 4\n\nvar action4 = /*#__PURE__*/React.createElement(Button, {\n  color: \"secondary\",\n  size: \"small\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 3\n  }\n}, \"lorem ipsum dolorem\");\nvar useStyles4 = makeStyles(function (theme) {\n  return {\n    root: {\n      maxWidth: 600\n    },\n    snackbar: {\n      margin: theme.spacing(1)\n    }\n  };\n}); // Example 7\n\nfunction SlideTransition7(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction GrowTransition7(props) {\n  return /*#__PURE__*/React.createElement(Grow, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 10\n    }\n  }));\n} // Example 8\n\n\nfunction TransitionLeft(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction TransitionUp(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction TransitionRight(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction TransitionDown(props) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({}, props, {\n    direction: \"down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function SnackbarsExamplesPage() {\n  // Example 1\n  var classes1 = useStyles1();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open1 = _React$useState2[0],\n      setOpen1 = _React$useState2[1];\n\n  function handleClick1() {\n    setOpen1(true);\n  }\n\n  function handleClose1(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen1(false);\n  } // Example 2\n\n\n  var classes2 = useStyles22();\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open2 = _React$useState4[0],\n      setOpen2 = _React$useState4[1];\n\n  function handleClick2() {\n    setOpen2(true);\n  }\n\n  function handleClose2(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen2(false);\n  } // Example 3\n\n\n  var _React$useState5 = React.useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"center\"\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      state = _React$useState6[0],\n      setState = _React$useState6[1];\n\n  var vertical = state.vertical,\n      horizontal = state.horizontal,\n      open = state.open;\n\n  var handleClick = function handleClick(newState) {\n    return function () {\n      setState(_objectSpread({\n        open: true\n      }, newState));\n    };\n  };\n\n  function handleClose() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false\n    }));\n  } // Example 4\n\n\n  var classes4 = useStyles4(); // Example 7\n\n  var _React$useState7 = React.useState({\n    open7: false,\n    Transition7: Fade\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      state7 = _React$useState8[0],\n      setState7 = _React$useState8[1];\n\n  var handleClick7 = function handleClick7(Transition) {\n    return function () {\n      setState7({\n        open7: true,\n        Transition7: Transition\n      });\n    };\n  };\n\n  function handleClose7() {\n    setState7(_objectSpread(_objectSpread({}, state7), {}, {\n      open7: false\n    }));\n  } // Example 8\n\n\n  var _React$useState9 = React.useState({\n    open8: false\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      state8 = _React$useState10[0],\n      setState8 = _React$useState10[1];\n\n  var handleClick8 = function handleClick8(Transition) {\n    return function () {\n      setState8({\n        open8: true,\n        Transition: Transition\n      });\n    };\n  };\n\n  var handleClose8 = function handleClose8() {\n    setState8({\n      open8: false\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n    icon: \"flaticon-warning font-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, \"Snackbars provide brief messages about app processes - typically at the bottom of the screen.\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    className: \"font-weight-bold\",\n    rel: \"noopener noreferrer\",\n    href: \"https://material-ui.com/components/snackbars/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode1,\n    beforeCodeTitle: \"Simple snackbars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, \"A basic snackbar that aims to reproduce Google Keep's snackbar behavior.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, \"Open simple snackbar\"), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: open1,\n    autoHideDuration: 6000,\n    onClose: handleClose1,\n    ContentProps: {\n      \"aria-describedby\": \"message-id\"\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 26\n      }\n    }, \"Note archived\"),\n    action: [/*#__PURE__*/React.createElement(Button, {\n      key: \"undo\",\n      color: \"secondary\",\n      size: \"small\",\n      onClick: handleClose1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }\n    }, \"UNDO\"), /*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      className: classes1.close,\n      onClick: handleClose1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode3,\n    beforeCodeTitle: \"Positioned snackbars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, \"There may be circumstances when the placement of the snackbar needs to be more flexible.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick({\n      vertical: \"top\",\n      horizontal: \"center\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }, \"Top-Center\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick({\n      vertical: \"top\",\n      horizontal: \"right\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }, \"Top-Right\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick({\n      vertical: \"bottom\",\n      horizontal: \"right\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, \"Bottom-Right\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick({\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  }, \"Bottom-Center\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick({\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 15\n    }\n  }, \"Bottom-Left\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick({\n      vertical: \"top\",\n      horizontal: \"left\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }, \"Top-Left\"), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: vertical,\n      horizontal: horizontal\n    },\n    key: \"\".concat(vertical, \",\").concat(horizontal),\n    open: open,\n    onClose: handleClose,\n    ContentProps: {\n      \"aria-describedby\": \"message-id\"\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 26\n      }\n    }, \"I love snacks\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode4,\n    beforeCodeTitle: \"Message Length\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }\n  }, \"Some snackbars with varying message length.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes4.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes4.snackbar,\n    message: \"I love snacks.\",\n    action: action4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes4.snackbar,\n    message: \"I love candy. I love cookies. I love cupcakes. \\\n                      I love cheesecake. I love chocolate.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes4.snackbar,\n    message: \"I love candy. I love cookies. I love cupcakes.\",\n    action: action4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SnackbarContent, {\n    className: classes4.snackbar,\n    message: \"I love candy. I love cookies. I love cupcakes. \\\n                      I love cheesecake. I love chocolate.\",\n    action: action4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode7,\n    beforeCodeTitle: \"Change Transition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }\n  }, \"Grow is the default transition but you can use a different one.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick7(GrowTransition7),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 15\n    }\n  }, \"Grow Transition\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick7(Fade),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, \"Fade Transition\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick7(SlideTransition7),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 15\n    }\n  }, \"Slide Transition\"), /*#__PURE__*/React.createElement(Snackbar, {\n    open: state7.open7,\n    onClose: handleClose7,\n    TransitionComponent: state7.Transition7,\n    ContentProps: {\n      \"aria-describedby\": \"message-id\"\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 26\n      }\n    }, \"I love snacks\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode2,\n    beforeCodeTitle: \"Customized snackbars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }\n  }, \"Here are some examples of customizing the component.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes2.margin,\n    onClick: handleClick2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 15\n    }\n  }, \"Open success snackbar\"), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: open2,\n    autoHideDuration: 6000,\n    onClose: handleClose2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper2, {\n    onClose: handleClose2,\n    variant: \"success\",\n    message: \"This is a success message!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(MySnackbarContentWrapper2, {\n    variant: \"error\",\n    className: classes2.margin,\n    message: \"This is an error message!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MySnackbarContentWrapper2, {\n    variant: \"warning\",\n    className: classes2.margin,\n    message: \"This is a warning message!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MySnackbarContentWrapper2, {\n    variant: \"info\",\n    className: classes2.margin,\n    message: \"This is an information message!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(MySnackbarContentWrapper2, {\n    variant: \"success\",\n    className: classes2.margin,\n    message: \"This is a success message!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(KTCodeExample, {\n    jsCode: jsCode8,\n    beforeCodeTitle: \"Control Slide direction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 13\n    }\n  }, \"You can change the direction of the Slide transition.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separator separator-dashed my-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick8(TransitionLeft),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 15\n    }\n  }, \"Right\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick8(TransitionUp),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 15\n    }\n  }, \"Up\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick8(TransitionRight),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 15\n    }\n  }, \"Left\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick8(TransitionDown),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 15\n    }\n  }, \"Down\"), /*#__PURE__*/React.createElement(Snackbar, {\n    open: state8.open8,\n    onClose: handleClose8,\n    TransitionComponent: state8.Transition,\n    ContentProps: {\n      \"aria-describedby\": \"message-id\"\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 26\n      }\n    }, \"I love snacks\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 15\n    }\n  }))))));\n}\nvar jsCode1 = \"\\nimport React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport CloseIcon from '@material-ui/icons/Close';\\n\\nconst useStyles = makeStyles(theme => ({\\n  close: {\\n    padding: theme.spacing(0.5),\\n  },\\n}));\\n\\nexport default function SimpleSnackbar() {\\n  const classes = useStyles();\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleClick() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose(event, reason) {\\n    if (reason === 'clickaway') {\\n      return;\\n    }\\n\\n    setOpen(false);\\n  }\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClick}>Open simple snackbar</Button>\\n      <Snackbar\\n        anchorOrigin={{\\n          vertical: 'bottom',\\n          horizontal: 'left',\\n        }}\\n        open={open}\\n        autoHideDuration={6000}\\n        onClose={handleClose}\\n        ContentProps={{\\n          'aria-describedby': 'message-id',\\n        }}\\n        message={<span id=\\\"message-id\\\">Note archived</span>}\\n        action={[\\n          <Button key=\\\"undo\\\" color=\\\"secondary\\\" size=\\\"small\\\" onClick={handleClose}>\\n            UNDO\\n          </Button>,\\n          <IconButton\\n            key=\\\"close\\\"\\n            aria-label=\\\"Close\\\"\\n            color=\\\"inherit\\\"\\n            className={classes.close}\\n            onClick={handleClose}\\n          >\\n            <CloseIcon />\\n          </IconButton>,\\n        ]}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode2 = \"\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport clsx from 'clsx';\\nimport Button from '@material-ui/core/Button';\\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\\nimport ErrorIcon from '@material-ui/icons/Error';\\nimport InfoIcon from '@material-ui/icons/Info';\\nimport CloseIcon from '@material-ui/icons/Close';\\nimport { amber, green } from '@material-ui/core/colors';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\\nimport WarningIcon from '@material-ui/icons/Warning';\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\nconst variantIcon = {\\n  success: CheckCircleIcon,\\n  warning: WarningIcon,\\n  error: ErrorIcon,\\n  info: InfoIcon,\\n};\\n\\nconst useStyles1 = makeStyles(theme => ({\\n  success: {\\n    backgroundColor: green[600],\\n  },\\n  error: {\\n    backgroundColor: theme.palette.error.dark,\\n  },\\n  info: {\\n    backgroundColor: theme.palette.primary.main,\\n  },\\n  warning: {\\n    backgroundColor: amber[700],\\n  },\\n  icon: {\\n    fontSize: 20,\\n  },\\n  iconVariant: {\\n    opacity: 0.9,\\n    marginRight: theme.spacing(1),\\n  },\\n  message: {\\n    display: 'flex',\\n    alignItems: 'center',\\n  },\\n}));\\n\\nfunction MySnackbarContentWrapper(props) {\\n  const classes = useStyles1();\\n  const { className, message, onClose, variant, ...other } = props;\\n  const Icon = variantIcon[variant];\\n\\n  return (\\n    <SnackbarContent\\n      className={clsx(classes[variant], className)}\\n      aria-describedby=\\\"client-snackbar\\\"\\n      message={\\n        <span id=\\\"client-snackbar\\\" className={classes.message}>\\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\\n          {message}\\n        </span>\\n      }\\n      action={[\\n        <IconButton key=\\\"close\\\" aria-label=\\\"Close\\\" color=\\\"inherit\\\" onClick={onClose}>\\n          <CloseIcon className={classes.icon} />\\n        </IconButton>,\\n      ]}\\n      {...other}\\n    />\\n  );\\n}\\n\\nMySnackbarContentWrapper.propTypes = {\\n  className: PropTypes.string,\\n  message: PropTypes.node,\\n  onClose: PropTypes.func,\\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\\n};\\n\\nconst useStyles2 = makeStyles(theme => ({\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function CustomizedSnackbars() {\\n  const classes = useStyles2();\\n  const [open, setOpen] = React.useState(false);\\n\\n  function handleClick() {\\n    setOpen(true);\\n  }\\n\\n  function handleClose(event, reason) {\\n    if (reason === 'clickaway') {\\n      return;\\n    }\\n\\n    setOpen(false);\\n  }\\n\\n  return (\\n    <div>\\n      <Button variant=\\\"outlined\\\" className={classes.margin} onClick={handleClick}>\\n        Open success snackbar\\n      </Button>\\n      <Snackbar\\n        anchorOrigin={{\\n          vertical: 'bottom',\\n          horizontal: 'left',\\n        }}\\n        open={open}\\n        autoHideDuration={6000}\\n        onClose={handleClose}\\n      >\\n        <MySnackbarContentWrapper\\n          onClose={handleClose}\\n          variant=\\\"success\\\"\\n          message=\\\"This is a success message!\\\"\\n        />\\n      </Snackbar>\\n      <MySnackbarContentWrapper\\n        variant=\\\"error\\\"\\n        className={classes.margin}\\n        message=\\\"This is an error message!\\\"\\n      />\\n      <MySnackbarContentWrapper\\n        variant=\\\"warning\\\"\\n        className={classes.margin}\\n        message=\\\"This is a warning message!\\\"\\n      />\\n      <MySnackbarContentWrapper\\n        variant=\\\"info\\\"\\n        className={classes.margin}\\n        message=\\\"This is an information message!\\\"\\n      />\\n      <MySnackbarContentWrapper\\n        variant=\\\"success\\\"\\n        className={classes.margin}\\n        message=\\\"This is a success message!\\\"\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode3 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\n\\nexport default function PositionedSnackbar() {\\n  const [state, setState] = React.useState({\\n    open: false,\\n    vertical: 'top',\\n    horizontal: 'center',\\n  });\\n\\n  const { vertical, horizontal, open } = state;\\n\\n  const handleClick = newState => () => {\\n    setState({ open: true, ...newState });\\n  };\\n\\n  function handleClose() {\\n    setState({ ...state, open: false });\\n  }\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'center' })}>Top-Center</Button>\\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'right' })}>Top-Right</Button>\\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'right' })}>\\n        Bottom-Right\\n      </Button>\\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'center' })}>\\n        Bottom-Center\\n      </Button>\\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'left' })}>Bottom-Left</Button>\\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'left' })}>Top-Left</Button>\\n      <Snackbar\\n        anchorOrigin={{ vertical, horizontal }}\\n        key={`${vertical},${horizontal}`}\\n        open={open}\\n        onClose={handleClose}\\n        ContentProps={{\\n          'aria-describedby': 'message-id',\\n        }}\\n        message={<span id=\\\"message-id\\\">I love snacks</span>}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode4 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\\n\\nconst action = (\\n  <Button color=\\\"secondary\\\" size=\\\"small\\\">\\n    lorem ipsum dolorem\\n  </Button>\\n);\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    maxWidth: 600,\\n  },\\n  snackbar: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function LongTextSnackbar() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <SnackbarContent className={classes.snackbar} message=\\\"I love snacks.\\\" action={action} />\\n      <SnackbarContent\\n        className={classes.snackbar}\\n        message={\\n          'I love candy. I love cookies. I love cupcakes.           I love cheesecake. I love chocolate.'\\n        }\\n      />\\n      <SnackbarContent\\n        className={classes.snackbar}\\n        message=\\\"I love candy. I love cookies. I love cupcakes.\\\"\\n        action={action}\\n      />\\n      <SnackbarContent\\n        className={classes.snackbar}\\n        message={\\n          'I love candy. I love cookies. I love cupcakes.           I love cheesecake. I love chocolate.'\\n        }\\n        action={action}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode7 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport Fade from '@material-ui/core/Fade';\\nimport Slide from '@material-ui/core/Slide';\\nimport Grow from '@material-ui/core/Grow';\\n\\nfunction SlideTransition(props) {\\n  return <Slide {...props} direction=\\\"up\\\" />;\\n}\\n\\nfunction GrowTransition(props) {\\n  return <Grow {...props} />;\\n}\\n\\nexport default function TransitionsSnackbar() {\\n  const [state, setState] = React.useState({\\n    open: false,\\n    Transition: Fade,\\n  });\\n\\n  const handleClick = Transition => () => {\\n    setState({\\n      open: true,\\n      Transition,\\n    });\\n  };\\n\\n  function handleClose() {\\n    setState({\\n      ...state,\\n      open: false,\\n    });\\n  }\\n\\n  return (\\n    <div>\\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\\n      <Snackbar\\n        open={state.open}\\n        onClose={handleClose}\\n        TransitionComponent={state.Transition}\\n        ContentProps={{\\n          'aria-describedby': 'message-id',\\n        }}\\n        message={<span id=\\\"message-id\\\">I love snacks</span>}\\n      />\\n    </div>\\n  );\\n}\\n\";\nvar jsCode8 = \"\\nimport React from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport Snackbar from '@material-ui/core/Snackbar';\\nimport Slide from '@material-ui/core/Slide';\\n\\nfunction TransitionLeft(props) {\\n  return <Slide {...props} direction=\\\"left\\\" />;\\n}\\n\\nfunction TransitionUp(props) {\\n  return <Slide {...props} direction=\\\"up\\\" />;\\n}\\n\\nfunction TransitionRight(props) {\\n  return <Slide {...props} direction=\\\"right\\\" />;\\n}\\n\\nfunction TransitionDown(props) {\\n  return <Slide {...props} direction=\\\"down\\\" />;\\n}\\n\\nclass DirectionSnackbar extends React.Component {\\n  state = {\\n    open: false,\\n  };\\n\\n  handleClick = Transition => () => {\\n    this.setState({ open: true, Transition });\\n  };\\n\\n  handleClose = () => {\\n    this.setState({ open: false });\\n  };\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button onClick={this.handleClick(TransitionLeft)}>Right</Button>\\n        <Button onClick={this.handleClick(TransitionUp)}>Up</Button>\\n        <Button onClick={this.handleClick(TransitionRight)}>Left</Button>\\n        <Button onClick={this.handleClick(TransitionDown)}>Down</Button>\\n        <Snackbar\\n          open={this.state.open}\\n          onClose={this.handleClose}\\n          TransitionComponent={this.state.Transition}\\n          ContentProps={{\\n            'aria-describedby': 'message-id',\\n          }}\\n          message={<span id=\\\"message-id\\\">I love snacks</span>}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default DirectionSnackbar;\\n\";","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/GoogleMaterialExamples/feedback/SnackbarsExamplesPage.js"],"names":["React","PropTypes","clsx","makeStyles","Button","Snackbar","IconButton","SnackbarContent","Fade","Slide","Grow","CssBaseline","Toolbar","AppBar","Typography","Fab","CloseIcon","WarningIcon","CheckCircleIcon","ErrorIcon","InfoIcon","amber","green","AddIcon","MenuIcon","Notice","KTCodeExample","useStyles1","theme","close","padding","spacing","variantIcon","success","warning","error","info","useStyles21","backgroundColor","palette","dark","primary","main","icon","fontSize","iconVariant","opacity","marginRight","message","display","alignItems","MySnackbarContentWrapper2","props","classes","className","onClose","variant","other","Icon","propTypes","string","node","func","oneOf","isRequired","useStyles22","margin","action4","useStyles4","root","maxWidth","snackbar","SlideTransition7","GrowTransition7","TransitionLeft","TransitionUp","TransitionRight","TransitionDown","SnackbarsExamplesPage","classes1","useState","open1","setOpen1","handleClick1","handleClose1","event","reason","classes2","open2","setOpen2","handleClick2","handleClose2","open","vertical","horizontal","state","setState","handleClick","newState","handleClose","classes4","open7","Transition7","state7","setState7","handleClick7","Transition","handleClose7","open8","state8","setState8","handleClick8","handleClose8","jsCode1","jsCode3","jsCode4","jsCode7","jsCode2","jsCode8"],"mappings":"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","sourcesContent":["/* eslint-disable no-func-assign */\n/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-restricted-imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Snackbar,\n  IconButton,\n  SnackbarContent,\n  Fade,\n  Slide,\n  Grow,\n  CssBaseline,\n  Toolbar,\n  AppBar,\n  Typography,\n  Fab\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport {amber, green} from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\n\n// Example 1\nconst useStyles1 = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n\n// Example 2\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst useStyles21 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nfunction MySnackbarContentWrapper2(props) {\n  const classes = useStyles21();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper2.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\n};\n\nconst useStyles22 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\n// Example 4\nconst action4 = (\n  <Button color=\"secondary\" size=\"small\">\n    lorem ipsum dolorem\n  </Button>\n);\n\nconst useStyles4 = makeStyles(theme => ({\n  root: {\n    maxWidth: 600\n  },\n  snackbar: {\n    margin: theme.spacing(1)\n  }\n}));\n\n// Example 7\nfunction SlideTransition7(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction GrowTransition7(props) {\n  return <Grow {...props} />;\n}\n\n// Example 8\nfunction TransitionLeft(props) {\n  return <Slide {...props} direction=\"left\" />;\n}\n\nfunction TransitionUp(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction TransitionRight(props) {\n  return <Slide {...props} direction=\"right\" />;\n}\n\nfunction TransitionDown(props) {\n  return <Slide {...props} direction=\"down\" />;\n}\n\nexport default function SnackbarsExamplesPage() {\n  // Example 1\n  const classes1 = useStyles1();\n  const [open1, setOpen1] = React.useState(false);\n\n  function handleClick1() {\n    setOpen1(true);\n  }\n\n  function handleClose1(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen1(false);\n  }\n\n  // Example 2\n  const classes2 = useStyles22();\n  const [open2, setOpen2] = React.useState(false);\n\n  function handleClick2() {\n    setOpen2(true);\n  }\n\n  function handleClose2(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen2(false);\n  }\n\n  // Example 3\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"center\"\n  });\n\n  const { vertical, horizontal, open } = state;\n\n  const handleClick = newState => () => {\n    setState({ open: true, ...newState });\n  };\n\n  function handleClose() {\n    setState({ ...state, open: false });\n  }\n\n  // Example 4\n  const classes4 = useStyles4();\n\n  // Example 7\n  const [state7, setState7] = React.useState({\n    open7: false,\n    Transition7: Fade\n  });\n\n  const handleClick7 = Transition => () => {\n    setState7({\n      open7: true,\n      Transition7: Transition\n    });\n  };\n\n  function handleClose7() {\n    setState7({\n      ...state7,\n      open7: false\n    });\n  }\n\n  // Example 8\n  const [state8, setState8] = React.useState({\n    open8: false\n  });\n\n  const handleClick8 = Transition => {\n    return () => {\n      setState8({ open8: true, Transition });\n    };\n  };\n\n  const handleClose8 = () => {\n    setState8({ open8: false });\n  };\n\n  return (\n    <>\n      <Notice icon=\"flaticon-warning font-primary\">\n        <span>\n          Snackbars provide brief messages about app processes - typically at\n          the bottom of the screen.\n        </span>{\" \"}\n        <span>\n          For more info please check the components's official{\" \"}\n          <a\n            target=\"_blank\"\n            className=\"font-weight-bold\"\n            rel=\"noopener noreferrer\"\n            href=\"https://material-ui.com/components/snackbars/\"\n          >\n            demos & documentation\n          </a>\n        </span>\n      </Notice>\n\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple snackbars\">\n            <span>\n              A basic snackbar that aims to reproduce Google Keep's snackbar\n              behavior.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div>\n              <Button onClick={handleClick1}>Open simple snackbar</Button>\n              <Snackbar\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\"\n                }}\n                open={open1}\n                autoHideDuration={6000}\n                onClose={handleClose1}\n                ContentProps={{\n                  \"aria-describedby\": \"message-id\"\n                }}\n                message={<span id=\"message-id\">Note archived</span>}\n                action={[\n                  <Button\n                    key=\"undo\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={handleClose1}\n                  >\n                    UNDO\n                  </Button>,\n                  <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes1.close}\n                    onClick={handleClose1}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                ]}\n              />\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample\n            jsCode={jsCode3}\n            beforeCodeTitle=\"Positioned snackbars\"\n          >\n            <span>\n              There may be circumstances when the placement of the snackbar\n              needs to be more flexible.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div>\n              <Button\n                onClick={handleClick({\n                  vertical: \"top\",\n                  horizontal: \"center\"\n                })}\n              >\n                Top-Center\n              </Button>\n              <Button\n                onClick={handleClick({\n                  vertical: \"top\",\n                  horizontal: \"right\"\n                })}\n              >\n                Top-Right\n              </Button>\n              <Button\n                onClick={handleClick({\n                  vertical: \"bottom\",\n                  horizontal: \"right\"\n                })}\n              >\n                Bottom-Right\n              </Button>\n              <Button\n                onClick={handleClick({\n                  vertical: \"bottom\",\n                  horizontal: \"center\"\n                })}\n              >\n                Bottom-Center\n              </Button>\n              <Button\n                onClick={handleClick({\n                  vertical: \"bottom\",\n                  horizontal: \"left\"\n                })}\n              >\n                Bottom-Left\n              </Button>\n              <Button\n                onClick={handleClick({\n                  vertical: \"top\",\n                  horizontal: \"left\"\n                })}\n              >\n                Top-Left\n              </Button>\n              <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                key={`${vertical},${horizontal}`}\n                open={open}\n                onClose={handleClose}\n                ContentProps={{\n                  \"aria-describedby\": \"message-id\"\n                }}\n                message={<span id=\"message-id\">I love snacks</span>}\n              />\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Message Length\">\n            <span>Some snackbars with varying message length.</span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div className={classes4.root}>\n              <SnackbarContent\n                className={classes4.snackbar}\n                message=\"I love snacks.\"\n                action={action4}\n              />\n              <SnackbarContent\n                className={classes4.snackbar}\n                message={\n                  \"I love candy. I love cookies. I love cupcakes. \\\n                      I love cheesecake. I love chocolate.\"\n                }\n              />\n              <SnackbarContent\n                className={classes4.snackbar}\n                message=\"I love candy. I love cookies. I love cupcakes.\"\n                action={action4}\n              />\n              <SnackbarContent\n                className={classes4.snackbar}\n                message={\n                  \"I love candy. I love cookies. I love cupcakes. \\\n                      I love cheesecake. I love chocolate.\"\n                }\n                action={action4}\n              />\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Change Transition\">\n            <span>\n              Grow is the default transition but you can use a different one.\n            </span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div>\n              <Button onClick={handleClick7(GrowTransition7)}>\n                Grow Transition\n              </Button>\n              <Button onClick={handleClick7(Fade)}>Fade Transition</Button>\n              <Button onClick={handleClick7(SlideTransition7)}>\n                Slide Transition\n              </Button>\n              <Snackbar\n                open={state7.open7}\n                onClose={handleClose7}\n                TransitionComponent={state7.Transition7}\n                ContentProps={{\n                  \"aria-describedby\": \"message-id\"\n                }}\n                message={<span id=\"message-id\">I love snacks</span>}\n              />\n            </div>\n          </KTCodeExample>\n        </div>\n        <div className=\"col-md-6\">\n          <KTCodeExample\n            jsCode={jsCode2}\n            beforeCodeTitle=\"Customized snackbars\"\n          >\n            <span>Here are some examples of customizing the component.</span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div>\n              <Button\n                variant=\"outlined\"\n                className={classes2.margin}\n                onClick={handleClick2}\n              >\n                Open success snackbar\n              </Button>\n              <Snackbar\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\"\n                }}\n                open={open2}\n                autoHideDuration={6000}\n                onClose={handleClose2}\n              >\n                <MySnackbarContentWrapper2\n                  onClose={handleClose2}\n                  variant=\"success\"\n                  message=\"This is a success message!\"\n                />\n              </Snackbar>\n              <MySnackbarContentWrapper2\n                variant=\"error\"\n                className={classes2.margin}\n                message=\"This is an error message!\"\n              />\n              <MySnackbarContentWrapper2\n                variant=\"warning\"\n                className={classes2.margin}\n                message=\"This is a warning message!\"\n              />\n              <MySnackbarContentWrapper2\n                variant=\"info\"\n                className={classes2.margin}\n                message=\"This is an information message!\"\n              />\n              <MySnackbarContentWrapper2\n                variant=\"success\"\n                className={classes2.margin}\n                message=\"This is a success message!\"\n              />\n            </div>\n          </KTCodeExample>\n\n          <KTCodeExample\n            jsCode={jsCode8}\n            beforeCodeTitle=\"Control Slide direction\"\n          >\n            <span>You can change the direction of the Slide transition.</span>\n            <div className=\"separator separator-dashed my-7\"></div>\n            <div>\n              <Button onClick={handleClick8(TransitionLeft)}>Right</Button>\n              <Button onClick={handleClick8(TransitionUp)}>Up</Button>\n              <Button onClick={handleClick8(TransitionRight)}>Left</Button>\n              <Button onClick={handleClick8(TransitionDown)}>Down</Button>\n              <Snackbar\n                open={state8.open8}\n                onClose={handleClose8}\n                TransitionComponent={state8.Transition}\n                ContentProps={{\n                  \"aria-describedby\": \"message-id\"\n                }}\n                message={<span id=\"message-id\">I love snacks</span>}\n              />\n            </div>\n          </KTCodeExample>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst jsCode1 = `\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nexport default function SimpleSnackbar() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Open simple snackbar</Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">Note archived</span>}\n        action={[\n          <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\n            UNDO\n          </Button>,\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode2 = `\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function CustomizedSnackbars() {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" className={classes.margin} onClick={handleClick}>\n        Open success snackbar\n      </Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant=\"success\"\n          message=\"This is a success message!\"\n        />\n      </Snackbar>\n      <MySnackbarContentWrapper\n        variant=\"error\"\n        className={classes.margin}\n        message=\"This is an error message!\"\n      />\n      <MySnackbarContentWrapper\n        variant=\"warning\"\n        className={classes.margin}\n        message=\"This is a warning message!\"\n      />\n      <MySnackbarContentWrapper\n        variant=\"info\"\n        className={classes.margin}\n        message=\"This is an information message!\"\n      />\n      <MySnackbarContentWrapper\n        variant=\"success\"\n        className={classes.margin}\n        message=\"This is a success message!\"\n      />\n    </div>\n  );\n}\n`;\nconst jsCode3 = `\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nexport default function PositionedSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'top',\n    horizontal: 'center',\n  });\n\n  const { vertical, horizontal, open } = state;\n\n  const handleClick = newState => () => {\n    setState({ open: true, ...newState });\n  };\n\n  function handleClose() {\n    setState({ ...state, open: false });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'center' })}>Top-Center</Button>\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'right' })}>Top-Right</Button>\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'right' })}>\n        Bottom-Right\n      </Button>\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'center' })}>\n        Bottom-Center\n      </Button>\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'left' })}>Bottom-Left</Button>\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'left' })}>Top-Left</Button>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        key={\\`\\${vertical},\\${horizontal}\\`}\n        open={open}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode4 = `\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nconst action = (\n  <Button color=\"secondary\" size=\"small\">\n    lorem ipsum dolorem\n  </Button>\n);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 600,\n  },\n  snackbar: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function LongTextSnackbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <SnackbarContent className={classes.snackbar} message=\"I love snacks.\" action={action} />\n      <SnackbarContent\n        className={classes.snackbar}\n        message={\n          'I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.'\n        }\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message=\"I love candy. I love cookies. I love cupcakes.\"\n        action={action}\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message={\n          'I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.'\n        }\n        action={action}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode7 = `\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Fade from '@material-ui/core/Fade';\nimport Slide from '@material-ui/core/Slide';\nimport Grow from '@material-ui/core/Grow';\n\nfunction SlideTransition(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction GrowTransition(props) {\n  return <Grow {...props} />;\n}\n\nexport default function TransitionsSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    Transition: Fade,\n  });\n\n  const handleClick = Transition => () => {\n    setState({\n      open: true,\n      Transition,\n    });\n  };\n\n  function handleClose() {\n    setState({\n      ...state,\n      open: false,\n    });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\n      <Snackbar\n        open={state.open}\n        onClose={handleClose}\n        TransitionComponent={state.Transition}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </div>\n  );\n}\n`;\nconst jsCode8 = `\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\n\nfunction TransitionLeft(props) {\n  return <Slide {...props} direction=\"left\" />;\n}\n\nfunction TransitionUp(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction TransitionRight(props) {\n  return <Slide {...props} direction=\"right\" />;\n}\n\nfunction TransitionDown(props) {\n  return <Slide {...props} direction=\"down\" />;\n}\n\nclass DirectionSnackbar extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClick = Transition => () => {\n    this.setState({ open: true, Transition });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.handleClick(TransitionLeft)}>Right</Button>\n        <Button onClick={this.handleClick(TransitionUp)}>Up</Button>\n        <Button onClick={this.handleClick(TransitionRight)}>Left</Button>\n        <Button onClick={this.handleClick(TransitionDown)}>Down</Button>\n        <Snackbar\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={this.state.Transition}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">I love snacks</span>}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DirectionSnackbar;\n`;\n"]},"metadata":{},"sourceType":"module"}