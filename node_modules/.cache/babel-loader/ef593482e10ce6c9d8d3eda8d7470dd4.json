{"ast":null,"code":"import _classCallCheck from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/app/modules/ReactBootstrapExamples/DropdownsExamplesPage.js\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Button, Dropdown, FormControl, ButtonGroup, DropdownButton, SplitButton, ButtonToolbar } from \"react-bootstrap\";\nimport { Notice, KTCodeExample } from \"../../../_metronic/_partials/controls\";\nvar CustomToggle = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    ref: ref,\n    onClick: function onClick(e) {\n      e.preventDefault();\n\n      _this.props.handleClick(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, props.children);\n});\n\nvar CustomMenu = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomMenu, _React$Component);\n\n  var _super = _createSuper(CustomMenu);\n\n  function CustomMenu(props, context) {\n    var _this2;\n\n    _classCallCheck(this, CustomMenu);\n\n    _this2 = _super.call(this, props, context);\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_this2));\n    _this2.state = {\n      value: \"\"\n    };\n    return _this2;\n  }\n\n  _createClass(CustomMenu, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        value: e.target.value.toLowerCase().trim()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          style = _this$props.style,\n          className = _this$props.className,\n          labeledBy = _this$props[\"aria-labelledby\"];\n      var value = this.state.value;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: style,\n        className: className,\n        \"aria-labelledby\": labeledBy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        autoFocus: true,\n        className: \"mx-3 my-2 w-auto\",\n        placeholder: \"Type to filter...\",\n        onChange: this.handleChange,\n        value: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-unstyled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.Children.toArray(children).filter(function (child) {\n        return !value || child.props.children.toLowerCase().startsWith(value);\n      })));\n    }\n  }]);\n\n  return CustomMenu;\n}(React.Component);\n\nvar DropdownsExamplesPage = /*#__PURE__*/function (_React$Component2) {\n  _inherits(DropdownsExamplesPage, _React$Component2);\n\n  var _super2 = _createSuper(DropdownsExamplesPage);\n\n  function DropdownsExamplesPage() {\n    _classCallCheck(this, DropdownsExamplesPage);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(DropdownsExamplesPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Notice, {\n        icon: \"flaticon-warning font-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, \"Toggle contextual overlays for displaying lists of links and more with the Bootstrap dropdown plugin.\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, \"For more info please check the components's official\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        className: \"font-weight-bold\",\n        rel: \"noopener noreferrer\",\n        href: \"https://react-bootstrap.github.io/components/dropdowns/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, \"demos & documentation\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode1,\n        beforeCodeTitle: \"Single button dropdowns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, \"The basic Dropdown is composed of a wrapping Dropdown and inner\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, \"<DropdownMenu>\"), \", and\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, \"<DropdownToggle>\"), \". By default the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, \"<DropdownToggle>\"), \" will render a Button component and accepts all the same props.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, \"Dropdown Button\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        href: \"#/action-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        href: \"#/action-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        href: \"#/action-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }\n      }, \"Something else\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode2,\n        beforeCodeTitle: \"Split button dropdowns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, \"Similarly, You create a split dropdown by combining the Dropdown components with another Button and a ButtonGroup.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        as: ButtonGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, \"Split Button\"), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        split: true,\n        variant: \"success\",\n        id: \"dropdown-split-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        href: \"#/action-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        href: \"#/action-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        href: \"#/action-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }\n      }, \"Something else\")))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode3,\n        beforeCodeTitle: \"Sizing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      }, \"Dropdowns work with buttons of all sizes.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, [DropdownButton, SplitButton].map(function (DropdownType, idx) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: idx,\n          className: \"pr-1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(DropdownType, {\n          size: \"lg\",\n          title: \"Drop small\",\n          id: \"dropdown-button-drop-\".concat(idx),\n          key: idx,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }\n        }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }\n        }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }\n        }, \"Something else here\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }\n        }, \"Separated link\")));\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, [DropdownButton, SplitButton].map(function (DropdownType, idx) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: idx,\n          className: \"pr-1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(DropdownType, {\n          size: \"sm\",\n          variant: \"secondary\",\n          title: \"Drop small\",\n          id: \"dropdown-button-drop-\".concat(idx),\n          key: idx,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }\n        }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }\n        }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }\n        }, \"Something else here\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }\n        }, \"Separated link\")));\n      })))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode5,\n        beforeCodeTitle: \"Dropdown items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      }, \"Historically dropdown menu contents had to be links, but that\\u2019s no longer the case with v4. Now you can optionally use\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      }, \"<button>\"), \" elements in your dropdowns instead of just \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }\n      }, \"<a>\"), \"s.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(DropdownButton, {\n        id: \"dropdown-item-button\",\n        title: \"Dropdown button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        as: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        as: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        as: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, \"Something else\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode9,\n        beforeCodeTitle: \"Customization\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }\n      }, \"If the default handling of the dropdown menu and toggle components aren't to your liking, you can customize them, by using the more basic \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 38\n        }\n      }, \"<Dropdown>\"), \" Component to explicitly specify the Toggle and Menu components\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        id: \"dropdown-custom-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }, \"Pow! Zoom!\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        className: \"super-colors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 23\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 23\n        }\n      }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 23\n        }\n      }, \"Active Item\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 23\n        }\n      }, \"Separated link\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        as: ButtonGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }\n      }, \"mix it up style-wise\"), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        split: true,\n        variant: \"success\",\n        id: \"dropdown-custom-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        className: \"super-colors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 23\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 23\n        }\n      }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 23\n        }\n      }, \"Active Item\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 23\n        }\n      }, \"Separated link\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode4,\n        beforeCodeTitle: \"Drop directions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }\n      }, \"Trigger dropdown menus above, below, left, or to the right of their toggle elements, with the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 49\n        }\n      }, \"drop\"), \" prop.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }\n      }, [\"up\", \"down\", \"left\", \"right\"].map(function (direction) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pr-1 pb-1\",\n          key: direction,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(DropdownButton, {\n          drop: direction,\n          variant: \"secondary\",\n          title: \" Drop \".concat(direction, \" \"),\n          id: \"dropdown-button-drop-\".concat(direction),\n          key: direction,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }\n        }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }\n        }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }\n        }, \"Something else here\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }\n        }, \"Separated link\")));\n      })), /*#__PURE__*/React.createElement(ButtonToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 17\n        }\n      }, [\"up\", \"down\", \"left\", \"right\"].map(function (direction) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pr-1\",\n          key: direction,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(SplitButton, {\n          drop: direction,\n          variant: \"secondary\",\n          title: \"Drop \".concat(direction),\n          id: \"dropdown-button-drop-\".concat(direction),\n          key: direction,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }\n        }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }\n        }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }\n        }, \"Something else here\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }\n        }, \"Separated link\")));\n      })))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode6,\n        beforeCodeTitle: \"Menu alignment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }\n      }, \"By default, a dropdown menu is aligned to the left, but you can switch it by passing the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 42\n        }\n      }, \"alignRight\"), \" prop.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(DropdownButton, {\n        alignRight: true,\n        title: \"Dropdown right\",\n        id: \"dropdown-menu-align-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }\n      }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }\n      }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }\n      }, \"Something else here\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 17\n        }\n      }, \"Separated link\"))), /*#__PURE__*/React.createElement(KTCodeExample, {\n        jsCode: jsCode10,\n        beforeCodeTitle: \"Custom Dropdown Components\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }\n      }, \"For those that want to customize everything, you can forgo the included Toggle and Menu components, and create your own. By providing custom components to the \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 52\n        }\n      }, \"as\"), \" prop, you can control how each component behaves. Custom toggle and menu components must be able to accept refs.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"separator separator-dashed my-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        as: CustomToggle,\n        id: \"dropdown-custom-components\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 17\n        }\n      }, \"Custom toggle\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        as: CustomMenu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 19\n        }\n      }, \"Red\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 19\n        }\n      }, \"Blue\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 19\n        }\n      }, \"Orange\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 19\n        }\n      }, \"Red-Orange\")))))));\n    }\n  }]);\n\n  return DropdownsExamplesPage;\n}(React.Component);\n\nexport { DropdownsExamplesPage as default };\nvar jsCode1 = \"\\n<Dropdown>\\n  <Dropdown.Toggle variant=\\\"success\\\" id=\\\"dropdown-basic\\\">\\n    Dropdown Button\\n  </Dropdown.Toggle>\\n\\n  <Dropdown.Menu>\\n    <Dropdown.Item href=\\\"#/action-1\\\">Action</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-2\\\">Another action</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-3\\\">Something else</Dropdown.Item>\\n  </Dropdown.Menu>\\n</Dropdown>\\n\";\nvar jsCode2 = \"\\n<Dropdown as={ButtonGroup}>\\n  <Button variant=\\\"success\\\">Split Button</Button>\\n\\n  <Dropdown.Toggle split variant=\\\"success\\\" id=\\\"dropdown-split-basic\\\" />\\n\\n  <Dropdown.Menu>\\n    <Dropdown.Item href=\\\"#/action-1\\\">Action</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-2\\\">Another action</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-3\\\">Something else</Dropdown.Item>\\n  </Dropdown.Menu>\\n</Dropdown>\\n\";\nvar jsCode3 = \"\\n<>\\n  <ButtonToolbar>\\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\\n      <DropdownType\\n        size=\\\"lg\\\"\\n        title=\\\"Drop small\\\"\\n        id={`dropdown-button-drop-${idx}`}\\n        key={idx}\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n        <Dropdown.Divider />\\n        <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n      </DropdownType>\\n    ))}\\n  </ButtonToolbar>\\n  <ButtonToolbar>\\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\\n      <DropdownType\\n        size=\\\"sm\\\"\\n        variant=\\\"secondary\\\"\\n        title=\\\"Drop small\\\"\\n        id={`dropdown-button-drop-${idx}`}\\n        key={idx}\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n        <Dropdown.Divider />\\n        <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n      </DropdownType>\\n    ))}\\n  </ButtonToolbar>\\n</>\\n\";\nvar jsCode4 = \"\\n<>\\n  <ButtonToolbar>\\n    {['up', 'down', 'left', 'right'].map(direction => (\\n      <DropdownButton\\n        drop={direction}\\n        variant=\\\"secondary\\\"\\n        title={` Drop ${direction} `}\\n        id={`dropdown-button-drop-${direction}`}\\n        key={direction}\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n        <Dropdown.Divider />\\n        <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n      </DropdownButton>\\n    ))}\\n  </ButtonToolbar>\\n\\n  <ButtonToolbar>\\n    {['up', 'down', 'left', 'right'].map(direction => (\\n      <SplitButton\\n        drop={direction}\\n        variant=\\\"secondary\\\"\\n        title={`Drop ${direction}`}\\n        id={`dropdown-button-drop-${direction}`}\\n        key={direction}\\n      >\\n        <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n        <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n        <Dropdown.Divider />\\n        <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n      </SplitButton>\\n    ))}\\n  </ButtonToolbar>\\n</>\\n\";\nvar jsCode5 = \"\\n<DropdownButton id=\\\"dropdown-item-button\\\" title=\\\"Dropdown button\\\">\\n  <Dropdown.Item as=\\\"button\\\">Action</Dropdown.Item>\\n  <Dropdown.Item as=\\\"button\\\">Another action</Dropdown.Item>\\n  <Dropdown.Item as=\\\"button\\\">Something else</Dropdown.Item>\\n</DropdownButton>\\n\";\nvar jsCode6 = \"\\n<DropdownButton\\n  alignRight\\n  title=\\\"Dropdown right\\\"\\n  id=\\\"dropdown-menu-align-right\\\"\\n>\\n  <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n  <Dropdown.Divider />\\n  <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n</DropdownButton>\\n\";\nvar jsCode7 = \"\\n<Dropdown.Menu show>\\n  <Dropdown.Header>Dropdown header</Dropdown.Header>\\n  <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n</Dropdown.Menu>\\n\";\nvar jsCode8 = \"\\n<Dropdown.Menu show>\\n  <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n  <Dropdown.Item eventKey=\\\"3\\\">Something else here</Dropdown.Item>\\n  <Dropdown.Divider />\\n  <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n</Dropdown.Menu>\\n\";\nvar jsCode9 = \"\\n<ButtonToolbar>\\n  <Dropdown>\\n    <Dropdown.Toggle id=\\\"dropdown-custom-1\\\">Pow! Zoom!</Dropdown.Toggle>\\n    <Dropdown.Menu className=\\\"super-colors\\\">\\n      <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"3\\\" active>\\n        Active Item\\n      </Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n\\n  <Dropdown as={ButtonGroup}>\\n    <Button variant=\\\"info\\\">mix it up style-wise</Button>\\n    <Dropdown.Toggle split variant=\\\"success\\\" id=\\\"dropdown-custom-2\\\" />\\n    <Dropdown.Menu className=\\\"super-colors\\\">\\n      <Dropdown.Item eventKey=\\\"1\\\">Action</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"2\\\">Another action</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"3\\\" active>\\n        Active Item\\n      </Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item eventKey=\\\"4\\\">Separated link</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</ButtonToolbar>\\n\";\nvar jsCode10 = \"\\nclass CustomToggle extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.handleClick = this.handleClick.bind(this);\\n  }\\n\\n  handleClick(e) {\\n    e.preventDefault();\\n\\n    this.props.onClick(e);\\n  }\\n\\n  render() {\\n    return (\\n      <a href=\\\"\\\" onClick={this.handleClick}>\\n        {this.props.children}\\n      </a>\\n    );\\n  }\\n}\\n\\nclass CustomMenu extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.handleChange = this.handleChange.bind(this);\\n\\n    this.state = { value: '' };\\n  }\\n\\n  handleChange(e) {\\n    this.setState({ value: e.target.value.toLowerCase().trim() });\\n  }\\n\\n  render() {\\n    const {\\n      children,\\n      style,\\n      className,\\n      'aria-labelledby': labeledBy,\\n    } = this.props;\\n\\n    const { value } = this.state;\\n\\n    return (\\n      <div style={style} className={className} aria-labelledby={labeledBy}>\\n        <FormControl\\n          autoFocus\\n          className=\\\"mx-3 my-2 w-auto\\\"\\n          placeholder=\\\"Type to filter...\\\"\\n          onChange={this.handleChange}\\n          value={value}\\n        />\\n        <ul className=\\\"list-unstyled\\\">\\n          {React.Children.toArray(children).filter(\\n            child =>\\n              !value || child.props.children.toLowerCase().startsWith(value),\\n          )}\\n        </ul>\\n      </div>\\n    );\\n  }\\n}\\n\\nrender(\\n  <Dropdown>\\n    <Dropdown.Toggle as={CustomToggle} id=\\\"dropdown-custom-components\\\">\\n      Custom toggle\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu as={CustomMenu}>\\n      <Dropdown.Item eventKey=\\\"1\\\">Red</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"2\\\">Blue</Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"3\\\" active>\\n        Orange\\n      </Dropdown.Item>\\n      <Dropdown.Item eventKey=\\\"1\\\">Red-Orange</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>,\\n);\\n\";","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/app/modules/ReactBootstrapExamples/DropdownsExamplesPage.js"],"names":["React","Button","Dropdown","FormControl","ButtonGroup","DropdownButton","SplitButton","ButtonToolbar","Notice","KTCodeExample","CustomToggle","forwardRef","props","ref","e","preventDefault","handleClick","children","CustomMenu","context","handleChange","bind","state","value","setState","target","toLowerCase","trim","style","className","labeledBy","Children","toArray","filter","child","startsWith","Component","DropdownsExamplesPage","jsCode1","jsCode2","jsCode3","map","DropdownType","idx","jsCode5","jsCode9","jsCode4","direction","jsCode6","jsCode10","jsCode7","jsCode8"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport {\n  Button,\n  Dropdown,\n  FormControl,\n  ButtonGroup,\n  DropdownButton,\n  SplitButton,\n  ButtonToolbar\n} from \"react-bootstrap\";\nimport {Notice, KTCodeExample} from \"../../../_metronic/_partials/controls\";\n\nconst CustomToggle = React.forwardRef((props, ref) => {\n  return (\n    <a\n      href=\"\"\n      ref={ref}\n      onClick={e => {\n        e.preventDefault();\n        this.props.handleClick(e);\n      }}\n    >\n      {props.children}\n    </a>\n  );\n});\n\nclass CustomMenu extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = { value: \"\" };\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value.toLowerCase().trim() });\n  }\n\n  render() {\n    const {\n      children,\n      style,\n      className,\n      \"aria-labelledby\": labeledBy\n    } = this.props;\n\n    const { value } = this.state;\n\n    return (\n      <div style={style} className={className} aria-labelledby={labeledBy}>\n        <FormControl\n          autoFocus\n          className=\"mx-3 my-2 w-auto\"\n          placeholder=\"Type to filter...\"\n          onChange={this.handleChange}\n          value={value}\n        />\n        <ul className=\"list-unstyled\">\n          {React.Children.toArray(children).filter(\n            child =>\n              !value || child.props.children.toLowerCase().startsWith(value)\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default class DropdownsExamplesPage extends React.Component {\n  render() {\n    return (\n      <>\n        <Notice icon=\"flaticon-warning font-primary\">\n          <span>\n            Toggle contextual overlays for displaying lists of links and more\n            with the Bootstrap dropdown plugin.\n          </span>\n          <span>\n            For more info please check the components's official{\" \"}\n            <a\n              target=\"_blank\"\n              className=\"font-weight-bold\"\n              rel=\"noopener noreferrer\"\n              href=\"https://react-bootstrap.github.io/components/dropdowns/\"\n            >\n              demos & documentation\n            </a>\n          </span>\n        </Notice>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <KTCodeExample\n              jsCode={jsCode1}\n              beforeCodeTitle=\"Single button dropdowns\"\n            >\n              <span>\n                The basic Dropdown is composed of a wrapping Dropdown and inner{\" \"}\n                <code>&lt;DropdownMenu&gt;</code>, and{\" \"}\n                <code>&lt;DropdownToggle&gt;</code>. By default the{\" \"}\n                <code>&lt;DropdownToggle&gt;</code> will render a Button\n                component and accepts all the same props.\n              </span>\n              <div className=\"separator separator-dashed my-7\" />\n              <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                  Dropdown Button\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                  <Dropdown.Item href=\"#/action-2\">\n                    Another action\n                  </Dropdown.Item>\n                  <Dropdown.Item href=\"#/action-3\">\n                    Something else\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </KTCodeExample>\n          </div>\n          <div className=\"col-md-6\">\n            <KTCodeExample\n              jsCode={jsCode2}\n              beforeCodeTitle=\"Split button dropdowns\"\n            >\n              <span>\n                Similarly, You create a split dropdown by combining the Dropdown\n                components with another Button and a ButtonGroup.\n              </span>\n              <div className=\"separator separator-dashed my-7\" />\n              <Dropdown as={ButtonGroup}>\n                <Button variant=\"success\">Split Button</Button>\n\n                <Dropdown.Toggle\n                  split\n                  variant=\"success\"\n                  id=\"dropdown-split-basic\"\n                />\n\n                <Dropdown.Menu>\n                  <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                  <Dropdown.Item href=\"#/action-2\">\n                    Another action\n                  </Dropdown.Item>\n                  <Dropdown.Item href=\"#/action-3\">\n                    Something else\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </KTCodeExample>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Sizing\">\n              <span>Dropdowns work with buttons of all sizes.</span>\n              <div className=\"separator separator-dashed my-7\" />\n              <>\n                <ButtonToolbar>\n                  {[DropdownButton, SplitButton].map((DropdownType, idx) => (\n                    <div key={idx} className=\"pr-1\">\n                      <DropdownType\n                        size=\"lg\"\n                        title=\"Drop small\"\n                        id={`dropdown-button-drop-${idx}`}\n                        key={idx}\n                      >\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">\n                          Another action\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\">\n                          Something else here\n                        </Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"4\">\n                          Separated link\n                        </Dropdown.Item>\n                      </DropdownType>\n                    </div>\n                  ))}\n                </ButtonToolbar>\n                <br />\n                <ButtonToolbar>\n                  {[DropdownButton, SplitButton].map((DropdownType, idx) => (\n                    <div key={idx} className=\"pr-1\">\n                      <DropdownType\n                        size=\"sm\"\n                        variant=\"secondary\"\n                        title=\"Drop small\"\n                        id={`dropdown-button-drop-${idx}`}\n                        key={idx}\n                      >\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">\n                          Another action\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\">\n                          Something else here\n                        </Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"4\">\n                          Separated link\n                        </Dropdown.Item>\n                      </DropdownType>\n                    </div>\n                  ))}\n                </ButtonToolbar>\n              </>\n            </KTCodeExample>\n\n            <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Dropdown items\">\n              <span>\n                Historically dropdown menu contents had to be links, but that’s\n                no longer the case with v4. Now you can optionally use{\" \"}\n                <code>&lt;button&gt;</code> elements in your dropdowns instead\n                of just <code>&lt;a&gt;</code>s.\n              </span>\n              <div className=\"separator separator-dashed my-7\" />\n              <DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\n                <Dropdown.Item as=\"button\">Action</Dropdown.Item>\n                <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\n                <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\n              </DropdownButton>\n            </KTCodeExample>\n\n            <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Customization\">\n              <span>\n                If the default handling of the dropdown menu and toggle\n                components aren't to your liking, you can customize them, by\n                using the more basic <code>&lt;Dropdown&gt;</code> Component to\n                explicitly specify the Toggle and Menu components\n              </span>\n              <div className=\"separator separator-dashed my-7\" />\n              <ButtonToolbar>\n                <div className=\"pr-1\">\n                  <Dropdown>\n                    <Dropdown.Toggle id=\"dropdown-custom-1\">\n                      Pow! Zoom!\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu className=\"super-colors\">\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"3\" active>\n                        Active Item\n                      </Dropdown.Item>\n                      <Dropdown.Divider />\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </div>\n                <div className=\"pr-1\">\n                  <Dropdown as={ButtonGroup}>\n                    <Button variant=\"info\">mix it up style-wise</Button>\n                    <Dropdown.Toggle\n                      split\n                      variant=\"success\"\n                      id=\"dropdown-custom-2\"\n                    />\n                    <Dropdown.Menu className=\"super-colors\">\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"3\" active>\n                        Active Item\n                      </Dropdown.Item>\n                      <Dropdown.Divider />\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </div>\n              </ButtonToolbar>\n            </KTCodeExample>\n          </div>\n          <div className=\"col-md-6\">\n            <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Drop directions\">\n              <span>\n                Trigger dropdown menus above, below, left, or to the right of\n                their toggle elements, with the <code>drop</code> prop.\n              </span>\n              <div className=\"separator separator-dashed my-7\" />\n              <>\n                <ButtonToolbar>\n                  {[\"up\", \"down\", \"left\", \"right\"].map(direction => (\n                    <div className=\"pr-1 pb-1\" key={direction}>\n                      <DropdownButton\n                        drop={direction}\n                        variant=\"secondary\"\n                        title={` Drop ${direction} `}\n                        id={`dropdown-button-drop-${direction}`}\n                        key={direction}\n                      >\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">\n                          Another action\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\">\n                          Something else here\n                        </Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"4\">\n                          Separated link\n                        </Dropdown.Item>\n                      </DropdownButton>\n                    </div>\n                  ))}\n                </ButtonToolbar>\n\n                <ButtonToolbar>\n                  {[\"up\", \"down\", \"left\", \"right\"].map(direction => (\n                    <div className=\"pr-1\" key={direction}>\n                      <SplitButton\n                        drop={direction}\n                        variant=\"secondary\"\n                        title={`Drop ${direction}`}\n                        id={`dropdown-button-drop-${direction}`}\n                        key={direction}\n                      >\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">\n                          Another action\n                        </Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\">\n                          Something else here\n                        </Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"4\">\n                          Separated link\n                        </Dropdown.Item>\n                      </SplitButton>\n                    </div>\n                  ))}\n                </ButtonToolbar>\n              </>\n            </KTCodeExample>\n\n            <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Menu alignment\">\n              <span>\n                By default, a dropdown menu is aligned to the left, but you can\n                switch it by passing the <code>alignRight</code> prop.\n              </span>\n              <div className=\"separator separator-dashed my-7\" />\n              <DropdownButton\n                alignRight\n                title=\"Dropdown right\"\n                id=\"dropdown-menu-align-right\"\n              >\n                <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n              </DropdownButton>\n            </KTCodeExample>\n\n            <KTCodeExample\n              jsCode={jsCode10}\n              beforeCodeTitle=\"Custom Dropdown Components\"\n            >\n              <span>\n                For those that want to customize everything, you can forgo the\n                included Toggle and Menu components, and create your own. By\n                providing custom components to the <code>as</code> prop, you can\n                control how each component behaves. Custom toggle and menu\n                components must be able to accept refs.\n              </span>\n              <div className=\"separator separator-dashed my-7\" />\n              <Dropdown>\n                <Dropdown.Toggle\n                  as={CustomToggle}\n                  id=\"dropdown-custom-components\"\n                >\n                  Custom toggle\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu as={CustomMenu}>\n                  <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"3\" active>\n                    Orange\n                  </Dropdown.Item>\n                  <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </KTCodeExample>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst jsCode1 = `\n<Dropdown>\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n    Dropdown Button\n  </Dropdown.Toggle>\n\n  <Dropdown.Menu>\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>\n`;\nconst jsCode2 = `\n<Dropdown as={ButtonGroup}>\n  <Button variant=\"success\">Split Button</Button>\n\n  <Dropdown.Toggle split variant=\"success\" id=\"dropdown-split-basic\" />\n\n  <Dropdown.Menu>\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>\n`;\nconst jsCode3 = `\n<>\n  <ButtonToolbar>\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\n      <DropdownType\n        size=\"lg\"\n        title=\"Drop small\"\n        id={\\`dropdown-button-drop-\\${idx}\\`}\n        key={idx}\n      >\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n      </DropdownType>\n    ))}\n  </ButtonToolbar>\n  <ButtonToolbar>\n    {[DropdownButton, SplitButton].map((DropdownType, idx) => (\n      <DropdownType\n        size=\"sm\"\n        variant=\"secondary\"\n        title=\"Drop small\"\n        id={\\`dropdown-button-drop-\\${idx}\\`}\n        key={idx}\n      >\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n      </DropdownType>\n    ))}\n  </ButtonToolbar>\n</>\n`;\nconst jsCode4 = `\n<>\n  <ButtonToolbar>\n    {['up', 'down', 'left', 'right'].map(direction => (\n      <DropdownButton\n        drop={direction}\n        variant=\"secondary\"\n        title={\\` Drop \\${direction} \\`}\n        id={\\`dropdown-button-drop-\\${direction}\\`}\n        key={direction}\n      >\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n      </DropdownButton>\n    ))}\n  </ButtonToolbar>\n\n  <ButtonToolbar>\n    {['up', 'down', 'left', 'right'].map(direction => (\n      <SplitButton\n        drop={direction}\n        variant=\"secondary\"\n        title={\\`Drop \\${direction}\\`}\n        id={\\`dropdown-button-drop-\\${direction}\\`}\n        key={direction}\n      >\n        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n      </SplitButton>\n    ))}\n  </ButtonToolbar>\n</>\n`;\nconst jsCode5 = `\n<DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\n  <Dropdown.Item as=\"button\">Action</Dropdown.Item>\n  <Dropdown.Item as=\"button\">Another action</Dropdown.Item>\n  <Dropdown.Item as=\"button\">Something else</Dropdown.Item>\n</DropdownButton>\n`;\nconst jsCode6 = `\n<DropdownButton\n  alignRight\n  title=\"Dropdown right\"\n  id=\"dropdown-menu-align-right\"\n>\n  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n  <Dropdown.Divider />\n  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n</DropdownButton>\n`;\nconst jsCode7 = `\n<Dropdown.Menu show>\n  <Dropdown.Header>Dropdown header</Dropdown.Header>\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n</Dropdown.Menu>\n`;\nconst jsCode8 = `\n<Dropdown.Menu show>\n  <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n  <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n  <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n  <Dropdown.Divider />\n  <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n</Dropdown.Menu>\n`;\nconst jsCode9 = `\n<ButtonToolbar>\n  <Dropdown>\n    <Dropdown.Toggle id=\"dropdown-custom-1\">Pow! Zoom!</Dropdown.Toggle>\n    <Dropdown.Menu className=\"super-colors\">\n      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n      <Dropdown.Item eventKey=\"3\" active>\n        Active Item\n      </Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n\n  <Dropdown as={ButtonGroup}>\n    <Button variant=\"info\">mix it up style-wise</Button>\n    <Dropdown.Toggle split variant=\"success\" id=\"dropdown-custom-2\" />\n    <Dropdown.Menu className=\"super-colors\">\n      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n      <Dropdown.Item eventKey=\"3\" active>\n        Active Item\n      </Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</ButtonToolbar>\n`;\nconst jsCode10 = `\nclass CustomToggle extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n\n    this.props.onClick(e);\n  }\n\n  render() {\n    return (\n      <a href=\"\" onClick={this.handleClick}>\n        {this.props.children}\n      </a>\n    );\n  }\n}\n\nclass CustomMenu extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = { value: '' };\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value.toLowerCase().trim() });\n  }\n\n  render() {\n    const {\n      children,\n      style,\n      className,\n      'aria-labelledby': labeledBy,\n    } = this.props;\n\n    const { value } = this.state;\n\n    return (\n      <div style={style} className={className} aria-labelledby={labeledBy}>\n        <FormControl\n          autoFocus\n          className=\"mx-3 my-2 w-auto\"\n          placeholder=\"Type to filter...\"\n          onChange={this.handleChange}\n          value={value}\n        />\n        <ul className=\"list-unstyled\">\n          {React.Children.toArray(children).filter(\n            child =>\n              !value || child.props.children.toLowerCase().startsWith(value),\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nrender(\n  <Dropdown>\n    <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\n      Custom toggle\n    </Dropdown.Toggle>\n\n    <Dropdown.Menu as={CustomMenu}>\n      <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\n      <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\n      <Dropdown.Item eventKey=\"3\" active>\n        Orange\n      </Dropdown.Item>\n      <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>,\n);\n`;\n"]},"metadata":{},"sourceType":"module"}