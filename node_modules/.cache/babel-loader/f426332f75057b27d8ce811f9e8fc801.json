{"ast":null,"code":"import _objectWithoutProperties from \"/Users/zerrinekici/Desktop/adminlast/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"svg\", \"iconRef\", \"textRef\", \"iconWrapperRef\", \"className\", \"children\"];\n\nvar _this = this,\n    _jsxFileName = \"/Users/zerrinekici/Desktop/adminlast/src/_metronic/_partials/controls/Notice.js\";\n\nimport React, { forwardRef } from \"react\";\nimport clsx from \"clsx\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../_helpers\";\nexport var Notice = forwardRef(function (_ref, ref) {\n  var icon = _ref.icon,\n      svg = _ref.svg,\n      iconRef = _ref.iconRef,\n      textRef = _ref.textRef,\n      iconWrapperRef = _ref.iconWrapperRef,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n    ref: ref,\n    role: \"alert\",\n    className: clsx(\"alert alert-custom alert-white alert-shadow gutter-b\", className),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-icon alert-icon-top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"svg-icon svg-icon-3x svg-icon-primary mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SVG, {\n    src: toAbsoluteUrl(\"/media/svg/icons/Tools/Compass.svg\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-text\",\n    ref: textRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, children));\n}); // Set display name for debugging.\n\nif (process.env.NODE_ENV !== \"production\") {\n  Notice.displayName = \"Notice\";\n}","map":{"version":3,"sources":["/Users/zerrinekici/Desktop/adminlast/src/_metronic/_partials/controls/Notice.js"],"names":["React","forwardRef","clsx","SVG","toAbsoluteUrl","Notice","ref","icon","svg","iconRef","textRef","iconWrapperRef","className","children","props","process","env","NODE_ENV","displayName"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAAQC,aAAR,QAA4B,gBAA5B;AAEA,OAAO,IAAMC,MAAM,GAAGJ,UAAU,CAC9B,gBAWEK,GAXF,EAYK;AAAA,MAVDC,IAUC,QAVDA,IAUC;AAAA,MATDC,GASC,QATDA,GASC;AAAA,MARDC,OAQC,QARDA,OAQC;AAAA,MAPDC,OAOC,QAPDA,OAOC;AAAA,MANDC,cAMC,QANDA,cAMC;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,QAIC,QAJDA,QAIC;AAAA,MAHEC,KAGF;;AACH,sBACE,6CACMA,KADN;AAEE,IAAA,GAAG,EAAER,GAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,SAAS,EAAEJ,IAAI,CACb,sDADa,EAEbU,SAFa,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,4CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,GAAG,EAAER,aAAa,CAAC,oCAAD,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CATF,eAiBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEM,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QADH,CAjBF,CADF;AAuBD,CArC6B,CAAzB,C,CAwCP;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCZ,EAAAA,MAAM,CAACa,WAAP,GAAqB,QAArB;AACD","sourcesContent":["import React, { forwardRef } from \"react\";\nimport clsx from \"clsx\";\nimport SVG from \"react-inlinesvg\";\nimport {toAbsoluteUrl} from \"../../_helpers\";\n\nexport const Notice = forwardRef(\n  (\n    {\n      icon,\n      svg,\n      iconRef,\n      textRef,\n      iconWrapperRef,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        {...props}\n        ref={ref}\n        role=\"alert\"\n        className={clsx(\n          \"alert alert-custom alert-white alert-shadow gutter-b\",\n          className\n        )}\n      >\n        <div className=\"alert-icon alert-icon-top\">\n          <span className=\"svg-icon svg-icon-3x svg-icon-primary mt-4\">\n            <SVG\n              src={toAbsoluteUrl(\"/media/svg/icons/Tools/Compass.svg\")}\n            ></SVG>\n          </span>\n        </div>\n\n        <div className=\"alert-text\" ref={textRef}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n);\n\n// Set display name for debugging.\nif (process.env.NODE_ENV !== \"production\") {\n  Notice.displayName = \"Notice\";\n}\n"]},"metadata":{},"sourceType":"module"}